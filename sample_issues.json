[{"model": "contenttypes.contenttype", "pk": 1, "fields": {"app_label": "admin", "model": "logentry"}}, {"model": "contenttypes.contenttype", "pk": 2, "fields": {"app_label": "auth", "model": "permission"}}, {"model": "contenttypes.contenttype", "pk": 3, "fields": {"app_label": "auth", "model": "group"}}, {"model": "contenttypes.contenttype", "pk": 4, "fields": {"app_label": "contenttypes", "model": "contenttype"}}, {"model": "contenttypes.contenttype", "pk": 5, "fields": {"app_label": "sessions", "model": "session"}}, {"model": "contenttypes.contenttype", "pk": 6, "fields": {"app_label": "sites", "model": "site"}}, {"model": "contenttypes.contenttype", "pk": 7, "fields": {"app_label": "account", "model": "emailaddress"}}, {"model": "contenttypes.contenttype", "pk": 8, "fields": {"app_label": "account", "model": "emailconfirmation"}}, {"model": "contenttypes.contenttype", "pk": 9, "fields": {"app_label": "socialaccount", "model": "socialapp"}}, {"model": "contenttypes.contenttype", "pk": 10, "fields": {"app_label": "socialaccount", "model": "socialaccount"}}, {"model": "contenttypes.contenttype", "pk": 11, "fields": {"app_label": "socialaccount", "model": "socialtoken"}}, {"model": "contenttypes.contenttype", "pk": 12, "fields": {"app_label": "issues", "model": "issue"}}, {"model": "contenttypes.contenttype", "pk": 13, "fields": {"app_label": "issues", "model": "tag"}}, {"model": "contenttypes.contenttype", "pk": 14, "fields": {"app_label": "issues", "model": "file"}}, {"model": "contenttypes.contenttype", "pk": 15, "fields": {"app_label": "issues", "model": "pullrequest"}}, {"model": "contenttypes.contenttype", "pk": 16, "fields": {"app_label": "accounts", "model": "account"}}, {"model": "sessions.session", "pk": "13de9cqw93wotgamxxfrn7xvxj4fedq9", "fields": {"session_data": "MTI1OTZmM2FhYWU0NjMxNDRkNDEzOWI2Yjc5MzcxY2JjMzUwMzA0Mjp7Il9hdXRoX3VzZXJfaGFzaCI6IjZkNDMwZDg1Y2UyODE5NmRkMDViMmY0Yjk1M2FlMmFiOGJlM2FjNDYiLCJfYXV0aF91c2VyX2lkIjoiMSIsIl9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIn0=", "expire_date": "2016-03-06T03:08:24.777Z"}}, {"model": "sites.site", "pk": 2, "fields": {"domain": "example.com", "name": "example.com"}}, {"model": "issues.issue", "pk": 1, "fields": {"created": "2016-02-21T03:02:45.430Z", "modified": "2016-02-21T03:02:45.430Z", "number": 72, "title": "Add custom Content-Type instructions to documentation", "body": "[This issue](https://github.com/evansd/whitenoise/issues/50) was helpful for me, it would probably be a useful addition to the docs.", "repo_owner": "evansd", "repo": "whitenoise", "raw": "{'created_at': '2016-02-18T21:24:17Z', 'locked': False, 'state': 'open', 'milestone': None, 'id': 134701010, 'html_url': 'https://github.com/evansd/whitenoise/issues/72', 'repository_url': 'https://api.github.com/repos/evansd/whitenoise', 'comments_url': 'https://api.github.com/repos/evansd/whitenoise/issues/72/comments', 'assignee': None, 'closed_at': None, 'events_url': 'https://api.github.com/repos/evansd/whitenoise/issues/72/events', 'updated_at': '2016-02-18T21:24:17Z', 'body': '[This issue](https://github.com/evansd/whitenoise/issues/50) was helpful for me, it would probably be a useful addition to the docs.', 'labels': [], 'number': 72, 'user': {'following_url': 'https://api.github.com/users/meandavejustice/following{/other_user}', 'avatar_url': 'https://avatars.githubusercontent.com/u/1844554?v=3', 'received_events_url': 'https://api.github.com/users/meandavejustice/received_events', 'starred_url': 'https://api.github.com/users/meandavejustice/starred{/owner}{/repo}', 'html_url': 'https://github.com/meandavejustice', 'site_admin': False, 'events_url': 'https://api.github.com/users/meandavejustice/events{/privacy}', 'id': 1844554, 'gravatar_id': '', 'subscriptions_url': 'https://api.github.com/users/meandavejustice/subscriptions', 'organizations_url': 'https://api.github.com/users/meandavejustice/orgs', 'repos_url': 'https://api.github.com/users/meandavejustice/repos', 'type': 'User', 'gists_url': 'https://api.github.com/users/meandavejustice/gists{/gist_id}', 'url': 'https://api.github.com/users/meandavejustice', 'login': 'meandavejustice', 'followers_url': 'https://api.github.com/users/meandavejustice/followers'}, 'labels_url': 'https://api.github.com/repos/evansd/whitenoise/issues/72/labels{/name}', 'url': 'https://api.github.com/repos/evansd/whitenoise/issues/72', 'title': 'Add custom Content-Type instructions to documentation', 'comments': 0}"}}, {"model": "issues.issue", "pk": 2, "fields": {"created": "2016-02-21T03:03:47.512Z", "modified": "2016-02-21T03:03:47.512Z", "number": 71, "title": "DjangoWhiteNoise doesn't handle multiple slashes in URL the same way as Django", "body": "When running with the Django development server, accidental multiple slashes in a URL like `static//global.css` will be converted into `static/global.css`, and so the asset will be served succesfully.\r\n\r\nThe same URL when served through `DjangoWhiteNoise` will however not find the asset.\r\n\r\nThis leads to a frustrating situation where the site looks like it works to developers running the site locally but then has errors when pushed to the deployed environment.\r\n\r\nCan I suggest that `DjangoWhiteNoise` should treat these URLs the same way Django does?", "repo_owner": "evansd", "repo": "whitenoise", "raw": "{'created_at': '2016-02-16T15:33:30Z', 'locked': False, 'state': 'closed', 'milestone': None, 'id': 134012126, 'html_url': 'https://github.com/evansd/whitenoise/issues/71', 'repository_url': 'https://api.github.com/repos/evansd/whitenoise', 'comments_url': 'https://api.github.com/repos/evansd/whitenoise/issues/71/comments', 'assignee': None, 'closed_at': '2016-02-16T17:07:52Z', 'events_url': 'https://api.github.com/repos/evansd/whitenoise/issues/71/events', 'updated_at': '2016-02-16T22:36:43Z', 'body': 'When running with the Django development server, accidental multiple slashes in a URL like `static//global.css` will be converted into `static/global.css`, and so the asset will be served succesfully.\\r\\n\\r\\nThe same URL when served through `DjangoWhiteNoise` will however not find the asset.\\r\\n\\r\\nThis leads to a frustrating situation where the site looks like it works to developers running the site locally but then has errors when pushed to the deployed environment.\\r\\n\\r\\nCan I suggest that `DjangoWhiteNoise` should treat these URLs the same way Django does?', 'labels': [], 'number': 71, 'user': {'following_url': 'https://api.github.com/users/nottrobin/following{/other_user}', 'avatar_url': 'https://avatars.githubusercontent.com/u/519935?v=3', 'received_events_url': 'https://api.github.com/users/nottrobin/received_events', 'starred_url': 'https://api.github.com/users/nottrobin/starred{/owner}{/repo}', 'html_url': 'https://github.com/nottrobin', 'site_admin': False, 'events_url': 'https://api.github.com/users/nottrobin/events{/privacy}', 'id': 519935, 'gravatar_id': '', 'subscriptions_url': 'https://api.github.com/users/nottrobin/subscriptions', 'organizations_url': 'https://api.github.com/users/nottrobin/orgs', 'repos_url': 'https://api.github.com/users/nottrobin/repos', 'type': 'User', 'gists_url': 'https://api.github.com/users/nottrobin/gists{/gist_id}', 'url': 'https://api.github.com/users/nottrobin', 'login': 'nottrobin', 'followers_url': 'https://api.github.com/users/nottrobin/followers'}, 'labels_url': 'https://api.github.com/repos/evansd/whitenoise/issues/71/labels{/name}', 'url': 'https://api.github.com/repos/evansd/whitenoise/issues/71', 'title': \"DjangoWhiteNoise doesn't handle multiple slashes in URL the same way as Django\", 'comments': 3}"}}, {"model": "issues.issue", "pk": 3, "fields": {"created": "2016-02-21T03:03:48.267Z", "modified": "2016-02-21T03:03:48.267Z", "number": 70, "title": "README: Remove duplicated content and instead link to the main docs", "body": "This both avoids the duplication (README.rst and docs/index.rst were virtually identical) and means users are directed to the `stable` branch Release the Docs content, rather than that for master - since the latter may not work with the current PyPI release of WhiteNoise.\r\n\r\nFixes #69.", "repo_owner": "evansd", "repo": "whitenoise", "raw": "{'created_at': '2016-02-14T13:56:16Z', 'locked': False, 'state': 'closed', 'milestone': None, 'pull_request': {'html_url': 'https://github.com/evansd/whitenoise/pull/70', 'diff_url': 'https://github.com/evansd/whitenoise/pull/70.diff', 'url': 'https://api.github.com/repos/evansd/whitenoise/pulls/70', 'patch_url': 'https://github.com/evansd/whitenoise/pull/70.patch'}, 'id': 133541378, 'html_url': 'https://github.com/evansd/whitenoise/pull/70', 'repository_url': 'https://api.github.com/repos/evansd/whitenoise', 'comments_url': 'https://api.github.com/repos/evansd/whitenoise/issues/70/comments', 'assignee': None, 'closed_at': '2016-02-14T22:04:53Z', 'events_url': 'https://api.github.com/repos/evansd/whitenoise/issues/70/events', 'updated_at': '2016-02-14T22:42:06Z', 'body': 'This both avoids the duplication (README.rst and docs/index.rst were virtually identical) and means users are directed to the `stable` branch Release the Docs content, rather than that for master - since the latter may not work with the current PyPI release of WhiteNoise.\\r\\n\\r\\nFixes #69.', 'labels': [], 'number': 70, 'user': {'following_url': 'https://api.github.com/users/edmorley/following{/other_user}', 'avatar_url': 'https://avatars.githubusercontent.com/u/501702?v=3', 'received_events_url': 'https://api.github.com/users/edmorley/received_events', 'starred_url': 'https://api.github.com/users/edmorley/starred{/owner}{/repo}', 'html_url': 'https://github.com/edmorley', 'site_admin': False, 'events_url': 'https://api.github.com/users/edmorley/events{/privacy}', 'id': 501702, 'gravatar_id': '', 'subscriptions_url': 'https://api.github.com/users/edmorley/subscriptions', 'organizations_url': 'https://api.github.com/users/edmorley/orgs', 'repos_url': 'https://api.github.com/users/edmorley/repos', 'type': 'User', 'gists_url': 'https://api.github.com/users/edmorley/gists{/gist_id}', 'url': 'https://api.github.com/users/edmorley', 'login': 'edmorley', 'followers_url': 'https://api.github.com/users/edmorley/followers'}, 'labels_url': 'https://api.github.com/repos/evansd/whitenoise/issues/70/labels{/name}', 'url': 'https://api.github.com/repos/evansd/whitenoise/issues/70', 'title': 'README: Remove duplicated content and instead link to the main docs', 'comments': 2}"}}, {"model": "issues.issue", "pk": 4, "fields": {"created": "2016-02-21T03:03:49.051Z", "modified": "2016-02-21T03:03:49.052Z", "number": 69, "title": "Not able to use WhiteNoiseMiddleware", "body": "I follow the 'QuickStart for Django apps' on the Github repo home page but got the error ImportError: No module named 'whitenoise.middleware'.\r\n\r\n```\r\n$ pip install whitenoise\r\nRequirement already satisfied (use --upgrade to upgrade): whitenoise in /usr/local/lib/python3.5/site-packages\r\n\r\n$ ls /usr/local/lib/python3.5/site-packages/whitenoise                             \r\n__init__.py  __pycache__  base.py  django.py  gzip.py  management  storage_backport.py\r\n```\r\n\r\nIt appears that middleware.py is not in the PIP install.\r\n\r\nAlso the \"QuickStart for Django apps\" on [whitenoise.evans.io/en/stable/](http://whitenoise.evans.io/en/stable/) is different from the Github repo.\r\n", "repo_owner": "evansd", "repo": "whitenoise", "raw": "{'created_at': '2016-02-14T07:09:43Z', 'locked': False, 'state': 'closed', 'milestone': None, 'id': 133514830, 'html_url': 'https://github.com/evansd/whitenoise/issues/69', 'repository_url': 'https://api.github.com/repos/evansd/whitenoise', 'comments_url': 'https://api.github.com/repos/evansd/whitenoise/issues/69/comments', 'assignee': None, 'closed_at': '2016-02-14T08:49:21Z', 'events_url': 'https://api.github.com/repos/evansd/whitenoise/issues/69/events', 'updated_at': '2016-02-14T12:22:31Z', 'body': 'I follow the \\'QuickStart for Django apps\\' on the Github repo home page but got the error ImportError: No module named \\'whitenoise.middleware\\'.\\r\\n\\r\\n```\\r\\n$ pip install whitenoise\\r\\nRequirement already satisfied (use --upgrade to upgrade): whitenoise in /usr/local/lib/python3.5/site-packages\\r\\n\\r\\n$ ls /usr/local/lib/python3.5/site-packages/whitenoise                             \\r\\n__init__.py  __pycache__  base.py  django.py  gzip.py  management  storage_backport.py\\r\\n```\\r\\n\\r\\nIt appears that middleware.py is not in the PIP install.\\r\\n\\r\\nAlso the \"QuickStart for Django apps\" on [whitenoise.evans.io/en/stable/](http://whitenoise.evans.io/en/stable/) is different from the Github repo.\\r\\n', 'labels': [], 'number': 69, 'user': {'following_url': 'https://api.github.com/users/jaxondu/following{/other_user}', 'avatar_url': 'https://avatars.githubusercontent.com/u/14853441?v=3', 'received_events_url': 'https://api.github.com/users/jaxondu/received_events', 'starred_url': 'https://api.github.com/users/jaxondu/starred{/owner}{/repo}', 'html_url': 'https://github.com/jaxondu', 'site_admin': False, 'events_url': 'https://api.github.com/users/jaxondu/events{/privacy}', 'id': 14853441, 'gravatar_id': '', 'subscriptions_url': 'https://api.github.com/users/jaxondu/subscriptions', 'organizations_url': 'https://api.github.com/users/jaxondu/orgs', 'repos_url': 'https://api.github.com/users/jaxondu/repos', 'type': 'User', 'gists_url': 'https://api.github.com/users/jaxondu/gists{/gist_id}', 'url': 'https://api.github.com/users/jaxondu', 'login': 'jaxondu', 'followers_url': 'https://api.github.com/users/jaxondu/followers'}, 'labels_url': 'https://api.github.com/repos/evansd/whitenoise/issues/69/labels{/name}', 'url': 'https://api.github.com/repos/evansd/whitenoise/issues/69', 'title': 'Not able to use WhiteNoiseMiddleware', 'comments': 3}"}}, {"model": "issues.issue", "pk": 5, "fields": {"created": "2016-02-21T03:03:49.810Z", "modified": "2016-02-21T03:03:49.811Z", "number": 68, "title": "\"No Module named Storage\" ", "body": "STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'\r\n\r\nGives a \"No module named Storage error\". The Django one does not.\r\n\r\nIn addition, if I use add this to MIDDLEWARE_CLASSES, 'whitenoise.middleware.WhiteNoiseMiddleware' I get a \"no module named middleware\" error\r\n", "repo_owner": "evansd", "repo": "whitenoise", "raw": "{'created_at': '2016-02-12T23:41:20Z', 'locked': False, 'state': 'closed', 'milestone': None, 'id': 133370994, 'html_url': 'https://github.com/evansd/whitenoise/issues/68', 'repository_url': 'https://api.github.com/repos/evansd/whitenoise', 'comments_url': 'https://api.github.com/repos/evansd/whitenoise/issues/68/comments', 'assignee': None, 'closed_at': '2016-02-12T23:47:51Z', 'events_url': 'https://api.github.com/repos/evansd/whitenoise/issues/68/events', 'updated_at': '2016-02-12T23:47:51Z', 'body': 'STATICFILES_STORAGE = \\'whitenoise.storage.CompressedManifestStaticFilesStorage\\'\\r\\n\\r\\nGives a \"No module named Storage error\". The Django one does not.\\r\\n\\r\\nIn addition, if I use add this to MIDDLEWARE_CLASSES, \\'whitenoise.middleware.WhiteNoiseMiddleware\\' I get a \"no module named middleware\" error\\r\\n', 'labels': [], 'number': 68, 'user': {'following_url': 'https://api.github.com/users/kleeBoostable/following{/other_user}', 'avatar_url': 'https://avatars.githubusercontent.com/u/10964851?v=3', 'received_events_url': 'https://api.github.com/users/kleeBoostable/received_events', 'starred_url': 'https://api.github.com/users/kleeBoostable/starred{/owner}{/repo}', 'html_url': 'https://github.com/kleeBoostable', 'site_admin': False, 'events_url': 'https://api.github.com/users/kleeBoostable/events{/privacy}', 'id': 10964851, 'gravatar_id': '', 'subscriptions_url': 'https://api.github.com/users/kleeBoostable/subscriptions', 'organizations_url': 'https://api.github.com/users/kleeBoostable/orgs', 'repos_url': 'https://api.github.com/users/kleeBoostable/repos', 'type': 'User', 'gists_url': 'https://api.github.com/users/kleeBoostable/gists{/gist_id}', 'url': 'https://api.github.com/users/kleeBoostable', 'login': 'kleeBoostable', 'followers_url': 'https://api.github.com/users/kleeBoostable/followers'}, 'labels_url': 'https://api.github.com/repos/evansd/whitenoise/issues/68/labels{/name}', 'url': 'https://api.github.com/repos/evansd/whitenoise/issues/68', 'title': '\"No Module named Storage\" ', 'comments': 1}"}}, {"model": "issues.issue", "pk": 6, "fields": {"created": "2016-02-21T03:03:50.534Z", "modified": "2016-02-21T03:03:50.534Z", "number": 67, "title": "Document HTTPS redirection & static asset pre-generation", "body": "* Recommend adding the Django middleware after SecurityMiddleware.\r\n* Recommend wgsi-sslify for performing redirection to HTTPS. (Fixes #54)\r\n* Explain the need for static assets to be generated in advance & why serving media files isn't supported. (Fixes #29)\r\n* Fix spelling mistakes.\r\n\r\nSee individual commit messages for more details :-)", "repo_owner": "evansd", "repo": "whitenoise", "raw": "{'created_at': '2016-02-11T10:51:44Z', 'locked': False, 'state': 'closed', 'milestone': None, 'pull_request': {'html_url': 'https://github.com/evansd/whitenoise/pull/67', 'diff_url': 'https://github.com/evansd/whitenoise/pull/67.diff', 'url': 'https://api.github.com/repos/evansd/whitenoise/pulls/67', 'patch_url': 'https://github.com/evansd/whitenoise/pull/67.patch'}, 'id': 132941486, 'html_url': 'https://github.com/evansd/whitenoise/pull/67', 'repository_url': 'https://api.github.com/repos/evansd/whitenoise', 'comments_url': 'https://api.github.com/repos/evansd/whitenoise/issues/67/comments', 'assignee': None, 'closed_at': '2016-02-12T10:49:42Z', 'events_url': 'https://api.github.com/repos/evansd/whitenoise/issues/67/events', 'updated_at': '2016-02-12T11:22:08Z', 'body': \"* Recommend adding the Django middleware after SecurityMiddleware.\\r\\n* Recommend wgsi-sslify for performing redirection to HTTPS. (Fixes #54)\\r\\n* Explain the need for static assets to be generated in advance & why serving media files isn't supported. (Fixes #29)\\r\\n* Fix spelling mistakes.\\r\\n\\r\\nSee individual commit messages for more details :-)\", 'labels': [], 'number': 67, 'user': {'following_url': 'https://api.github.com/users/edmorley/following{/other_user}', 'avatar_url': 'https://avatars.githubusercontent.com/u/501702?v=3', 'received_events_url': 'https://api.github.com/users/edmorley/received_events', 'starred_url': 'https://api.github.com/users/edmorley/starred{/owner}{/repo}', 'html_url': 'https://github.com/edmorley', 'site_admin': False, 'events_url': 'https://api.github.com/users/edmorley/events{/privacy}', 'id': 501702, 'gravatar_id': '', 'subscriptions_url': 'https://api.github.com/users/edmorley/subscriptions', 'organizations_url': 'https://api.github.com/users/edmorley/orgs', 'repos_url': 'https://api.github.com/users/edmorley/repos', 'type': 'User', 'gists_url': 'https://api.github.com/users/edmorley/gists{/gist_id}', 'url': 'https://api.github.com/users/edmorley', 'login': 'edmorley', 'followers_url': 'https://api.github.com/users/edmorley/followers'}, 'labels_url': 'https://api.github.com/repos/evansd/whitenoise/issues/67/labels{/name}', 'url': 'https://api.github.com/repos/evansd/whitenoise/issues/67', 'title': 'Document HTTPS redirection & static asset pre-generation', 'comments': 2}"}}, {"model": "issues.issue", "pk": 7, "fields": {"created": "2016-02-21T03:03:51.285Z", "modified": "2016-02-21T03:03:51.285Z", "number": 66, "title": "Suggestions for Flask Application", "body": "Currently \"WhiteNoise works with any WSGI-compatible app but has some special auto-configuration features for Django\". What, if at all, is the suggestion for using whitenoise with a Flask application?\r\n\r\nFlask already has a performant [`send_file`](http://flask.pocoo.org/docs/0.10/api/#flask.send_file) that unlike Django's static serving, which works only in development, will work in production as well.", "repo_owner": "evansd", "repo": "whitenoise", "raw": "{'created_at': '2016-02-11T03:22:08Z', 'locked': False, 'state': 'open', 'milestone': None, 'id': 132878572, 'html_url': 'https://github.com/evansd/whitenoise/issues/66', 'repository_url': 'https://api.github.com/repos/evansd/whitenoise', 'comments_url': 'https://api.github.com/repos/evansd/whitenoise/issues/66/comments', 'assignee': None, 'closed_at': None, 'events_url': 'https://api.github.com/repos/evansd/whitenoise/issues/66/events', 'updated_at': '2016-02-11T03:22:08Z', 'body': 'Currently \"WhiteNoise works with any WSGI-compatible app but has some special auto-configuration features for Django\". What, if at all, is the suggestion for using whitenoise with a Flask application?\\r\\n\\r\\nFlask already has a performant [`send_file`](http://flask.pocoo.org/docs/0.10/api/#flask.send_file) that unlike Django\\'s static serving, which works only in development, will work in production as well.', 'labels': [], 'number': 66, 'user': {'following_url': 'https://api.github.com/users/cancan101/following{/other_user}', 'avatar_url': 'https://avatars.githubusercontent.com/u/51059?v=3', 'received_events_url': 'https://api.github.com/users/cancan101/received_events', 'starred_url': 'https://api.github.com/users/cancan101/starred{/owner}{/repo}', 'html_url': 'https://github.com/cancan101', 'site_admin': False, 'events_url': 'https://api.github.com/users/cancan101/events{/privacy}', 'id': 51059, 'gravatar_id': '', 'subscriptions_url': 'https://api.github.com/users/cancan101/subscriptions', 'organizations_url': 'https://api.github.com/users/cancan101/orgs', 'repos_url': 'https://api.github.com/users/cancan101/repos', 'type': 'User', 'gists_url': 'https://api.github.com/users/cancan101/gists{/gist_id}', 'url': 'https://api.github.com/users/cancan101', 'login': 'cancan101', 'followers_url': 'https://api.github.com/users/cancan101/followers'}, 'labels_url': 'https://api.github.com/repos/evansd/whitenoise/issues/66/labels{/name}', 'url': 'https://api.github.com/repos/evansd/whitenoise/issues/66', 'title': 'Suggestions for Flask Application', 'comments': 0}"}}, {"model": "issues.issue", "pk": 8, "fields": {"created": "2016-02-21T03:03:52.028Z", "modified": "2016-02-21T03:03:52.028Z", "number": 65, "title": "Fix flake8 warnings and run it as part of the Travis job", "body": "flake8 is wrapper around pyflakes and pep8. Whilst some of the rules are slightly draconian, IMO running it adds more value than annoyance, and leads to a style that is consistent across projects.\r\n\r\nThis PR fixes the existing errors/warnings and then enables it on Travis :-)", "repo_owner": "evansd", "repo": "whitenoise", "raw": "{'created_at': '2016-02-10T14:54:53Z', 'locked': False, 'state': 'closed', 'milestone': None, 'pull_request': {'html_url': 'https://github.com/evansd/whitenoise/pull/65', 'diff_url': 'https://github.com/evansd/whitenoise/pull/65.diff', 'url': 'https://api.github.com/repos/evansd/whitenoise/pulls/65', 'patch_url': 'https://github.com/evansd/whitenoise/pull/65.patch'}, 'id': 132719928, 'html_url': 'https://github.com/evansd/whitenoise/pull/65', 'repository_url': 'https://api.github.com/repos/evansd/whitenoise', 'comments_url': 'https://api.github.com/repos/evansd/whitenoise/issues/65/comments', 'assignee': None, 'closed_at': '2016-02-10T15:19:35Z', 'events_url': 'https://api.github.com/repos/evansd/whitenoise/issues/65/events', 'updated_at': '2016-02-10T15:28:04Z', 'body': 'flake8 is wrapper around pyflakes and pep8. Whilst some of the rules are slightly draconian, IMO running it adds more value than annoyance, and leads to a style that is consistent across projects.\\r\\n\\r\\nThis PR fixes the existing errors/warnings and then enables it on Travis :-)', 'labels': [], 'number': 65, 'user': {'following_url': 'https://api.github.com/users/edmorley/following{/other_user}', 'avatar_url': 'https://avatars.githubusercontent.com/u/501702?v=3', 'received_events_url': 'https://api.github.com/users/edmorley/received_events', 'starred_url': 'https://api.github.com/users/edmorley/starred{/owner}{/repo}', 'html_url': 'https://github.com/edmorley', 'site_admin': False, 'events_url': 'https://api.github.com/users/edmorley/events{/privacy}', 'id': 501702, 'gravatar_id': '', 'subscriptions_url': 'https://api.github.com/users/edmorley/subscriptions', 'organizations_url': 'https://api.github.com/users/edmorley/orgs', 'repos_url': 'https://api.github.com/users/edmorley/repos', 'type': 'User', 'gists_url': 'https://api.github.com/users/edmorley/gists{/gist_id}', 'url': 'https://api.github.com/users/edmorley', 'login': 'edmorley', 'followers_url': 'https://api.github.com/users/edmorley/followers'}, 'labels_url': 'https://api.github.com/repos/evansd/whitenoise/issues/65/labels{/name}', 'url': 'https://api.github.com/repos/evansd/whitenoise/issues/65', 'title': 'Fix flake8 warnings and run it as part of the Travis job', 'comments': 1}"}}, {"model": "issues.issue", "pk": 9, "fields": {"created": "2016-02-21T03:03:52.783Z", "modified": "2016-02-21T03:03:52.783Z", "number": 64, "title": "Test against Django master & cleanup testing configs", "body": "This PR:\r\n* Makes the Travis run test against the Django master branch, so upcoming breakage can be spotted before an official release. (Failures don't cause the overall Travis run to error out.)\r\n* Switches the Travis job to their faster container infra (saves the 20s boot time per sub-job)\r\n* Cleans up the syntax in .travis.yml and tox.ini (a no-op in terms of behaviour)\r\n\r\nSee the individual commit diffs/multi-line commit messages for more details.\r\n\r\nMany thanks for a great project! :-)", "repo_owner": "evansd", "repo": "whitenoise", "raw": "{'created_at': '2016-02-10T12:33:13Z', 'locked': False, 'state': 'closed', 'milestone': None, 'pull_request': {'html_url': 'https://github.com/evansd/whitenoise/pull/64', 'diff_url': 'https://github.com/evansd/whitenoise/pull/64.diff', 'url': 'https://api.github.com/repos/evansd/whitenoise/pulls/64', 'patch_url': 'https://github.com/evansd/whitenoise/pull/64.patch'}, 'id': 132687771, 'html_url': 'https://github.com/evansd/whitenoise/pull/64', 'repository_url': 'https://api.github.com/repos/evansd/whitenoise', 'comments_url': 'https://api.github.com/repos/evansd/whitenoise/issues/64/comments', 'assignee': None, 'closed_at': '2016-02-10T12:45:33Z', 'events_url': 'https://api.github.com/repos/evansd/whitenoise/issues/64/events', 'updated_at': '2016-02-10T12:54:47Z', 'body': \"This PR:\\r\\n* Makes the Travis run test against the Django master branch, so upcoming breakage can be spotted before an official release. (Failures don't cause the overall Travis run to error out.)\\r\\n* Switches the Travis job to their faster container infra (saves the 20s boot time per sub-job)\\r\\n* Cleans up the syntax in .travis.yml and tox.ini (a no-op in terms of behaviour)\\r\\n\\r\\nSee the individual commit diffs/multi-line commit messages for more details.\\r\\n\\r\\nMany thanks for a great project! :-)\", 'labels': [], 'number': 64, 'user': {'following_url': 'https://api.github.com/users/edmorley/following{/other_user}', 'avatar_url': 'https://avatars.githubusercontent.com/u/501702?v=3', 'received_events_url': 'https://api.github.com/users/edmorley/received_events', 'starred_url': 'https://api.github.com/users/edmorley/starred{/owner}{/repo}', 'html_url': 'https://github.com/edmorley', 'site_admin': False, 'events_url': 'https://api.github.com/users/edmorley/events{/privacy}', 'id': 501702, 'gravatar_id': '', 'subscriptions_url': 'https://api.github.com/users/edmorley/subscriptions', 'organizations_url': 'https://api.github.com/users/edmorley/orgs', 'repos_url': 'https://api.github.com/users/edmorley/repos', 'type': 'User', 'gists_url': 'https://api.github.com/users/edmorley/gists{/gist_id}', 'url': 'https://api.github.com/users/edmorley', 'login': 'edmorley', 'followers_url': 'https://api.github.com/users/edmorley/followers'}, 'labels_url': 'https://api.github.com/repos/evansd/whitenoise/issues/64/labels{/name}', 'url': 'https://api.github.com/repos/evansd/whitenoise/issues/64', 'title': 'Test against Django master & cleanup testing configs', 'comments': 4}"}}, {"model": "issues.issue", "pk": 10, "fields": {"created": "2016-02-21T03:03:53.564Z", "modified": "2016-02-21T03:03:53.565Z", "number": 63, "title": "add note about local filesystem requirement", "body": "fixes #17", "repo_owner": "evansd", "repo": "whitenoise", "raw": "{'created_at': '2016-01-16T23:03:54Z', 'locked': False, 'state': 'closed', 'milestone': None, 'pull_request': {'html_url': 'https://github.com/evansd/whitenoise/pull/63', 'diff_url': 'https://github.com/evansd/whitenoise/pull/63.diff', 'url': 'https://api.github.com/repos/evansd/whitenoise/pulls/63', 'patch_url': 'https://github.com/evansd/whitenoise/pull/63.patch'}, 'id': 127059812, 'html_url': 'https://github.com/evansd/whitenoise/pull/63', 'repository_url': 'https://api.github.com/repos/evansd/whitenoise', 'comments_url': 'https://api.github.com/repos/evansd/whitenoise/issues/63/comments', 'assignee': None, 'closed_at': '2016-02-16T23:00:00Z', 'events_url': 'https://api.github.com/repos/evansd/whitenoise/issues/63/events', 'updated_at': '2016-02-16T23:00:00Z', 'body': 'fixes #17', 'labels': [], 'number': 63, 'user': {'following_url': 'https://api.github.com/users/thenewguy/following{/other_user}', 'avatar_url': 'https://avatars.githubusercontent.com/u/77731?v=3', 'received_events_url': 'https://api.github.com/users/thenewguy/received_events', 'starred_url': 'https://api.github.com/users/thenewguy/starred{/owner}{/repo}', 'html_url': 'https://github.com/thenewguy', 'site_admin': False, 'events_url': 'https://api.github.com/users/thenewguy/events{/privacy}', 'id': 77731, 'gravatar_id': '', 'subscriptions_url': 'https://api.github.com/users/thenewguy/subscriptions', 'organizations_url': 'https://api.github.com/users/thenewguy/orgs', 'repos_url': 'https://api.github.com/users/thenewguy/repos', 'type': 'User', 'gists_url': 'https://api.github.com/users/thenewguy/gists{/gist_id}', 'url': 'https://api.github.com/users/thenewguy', 'login': 'thenewguy', 'followers_url': 'https://api.github.com/users/thenewguy/followers'}, 'labels_url': 'https://api.github.com/repos/evansd/whitenoise/issues/63/labels{/name}', 'url': 'https://api.github.com/repos/evansd/whitenoise/issues/63', 'title': 'add note about local filesystem requirement', 'comments': 1}"}}, {"model": "issues.issue", "pk": 11, "fields": {"created": "2016-02-21T03:03:54.355Z", "modified": "2016-02-21T03:03:54.355Z", "number": 62, "title": "Serving Media Files", "body": "Hi all,\r\n\r\nI am wondering how to handle my media files (MEDIA_URL, MEDIA_ROOT), because currently they do not seem to be served.\r\n\r\nSo first of all, is it recommended that I serve my media files via whitenoise anyway? And if so, what is the best way to do so? I was thinking about add_files().\r\n\r\nAnd if things work, I'd be happy to update the docs.\r\n\r\nThanks for your help\r\nJuergen ", "repo_owner": "evansd", "repo": "whitenoise", "raw": "{'created_at': '2016-01-13T11:28:11Z', 'locked': False, 'state': 'open', 'milestone': None, 'id': 126398035, 'html_url': 'https://github.com/evansd/whitenoise/issues/62', 'repository_url': 'https://api.github.com/repos/evansd/whitenoise', 'comments_url': 'https://api.github.com/repos/evansd/whitenoise/issues/62/comments', 'assignee': None, 'closed_at': None, 'events_url': 'https://api.github.com/repos/evansd/whitenoise/issues/62/events', 'updated_at': '2016-02-11T10:45:31Z', 'body': \"Hi all,\\r\\n\\r\\nI am wondering how to handle my media files (MEDIA_URL, MEDIA_ROOT), because currently they do not seem to be served.\\r\\n\\r\\nSo first of all, is it recommended that I serve my media files via whitenoise anyway? And if so, what is the best way to do so? I was thinking about add_files().\\r\\n\\r\\nAnd if things work, I'd be happy to update the docs.\\r\\n\\r\\nThanks for your help\\r\\nJuergen \", 'labels': [], 'number': 62, 'user': {'following_url': 'https://api.github.com/users/schacki/following{/other_user}', 'avatar_url': 'https://avatars.githubusercontent.com/u/912191?v=3', 'received_events_url': 'https://api.github.com/users/schacki/received_events', 'starred_url': 'https://api.github.com/users/schacki/starred{/owner}{/repo}', 'html_url': 'https://github.com/schacki', 'site_admin': False, 'events_url': 'https://api.github.com/users/schacki/events{/privacy}', 'id': 912191, 'gravatar_id': '', 'subscriptions_url': 'https://api.github.com/users/schacki/subscriptions', 'organizations_url': 'https://api.github.com/users/schacki/orgs', 'repos_url': 'https://api.github.com/users/schacki/repos', 'type': 'User', 'gists_url': 'https://api.github.com/users/schacki/gists{/gist_id}', 'url': 'https://api.github.com/users/schacki', 'login': 'schacki', 'followers_url': 'https://api.github.com/users/schacki/followers'}, 'labels_url': 'https://api.github.com/repos/evansd/whitenoise/issues/62/labels{/name}', 'url': 'https://api.github.com/repos/evansd/whitenoise/issues/62', 'title': 'Serving Media Files', 'comments': 1}"}}, {"model": "issues.issue", "pk": 12, "fields": {"created": "2016-02-21T03:03:55.105Z", "modified": "2016-02-21T03:03:55.105Z", "number": 61, "title": "Failed to load resource: the server responded with a status of 404 (Not Found) ;", "body": "I receive errors like this when access child page:\r\nFailed to load resource: the server responded with a status of 404 (Not Found) ; http://www.dailyhn.com/news/2016/01/08/d3urtm1uacryxt.cloudfront.net/static/bootstrap-3.3.6/css/bootstrap.min.2f624089c65f.css\r\n\r\nI don't know why...\r\n", "repo_owner": "evansd", "repo": "whitenoise", "raw": "{'created_at': '2016-01-11T10:34:52Z', 'locked': False, 'state': 'closed', 'milestone': None, 'id': 125915601, 'html_url': 'https://github.com/evansd/whitenoise/issues/61', 'repository_url': 'https://api.github.com/repos/evansd/whitenoise', 'comments_url': 'https://api.github.com/repos/evansd/whitenoise/issues/61/comments', 'assignee': None, 'closed_at': '2016-01-11T10:44:48Z', 'events_url': 'https://api.github.com/repos/evansd/whitenoise/issues/61/events', 'updated_at': '2016-01-11T11:10:06Z', 'body': \"I receive errors like this when access child page:\\r\\nFailed to load resource: the server responded with a status of 404 (Not Found) ; http://www.dailyhn.com/news/2016/01/08/d3urtm1uacryxt.cloudfront.net/static/bootstrap-3.3.6/css/bootstrap.min.2f624089c65f.css\\r\\n\\r\\nI don't know why...\\r\\n\", 'labels': [], 'number': 61, 'user': {'following_url': 'https://api.github.com/users/nikoladang/following{/other_user}', 'avatar_url': 'https://avatars.githubusercontent.com/u/2738713?v=3', 'received_events_url': 'https://api.github.com/users/nikoladang/received_events', 'starred_url': 'https://api.github.com/users/nikoladang/starred{/owner}{/repo}', 'html_url': 'https://github.com/nikoladang', 'site_admin': False, 'events_url': 'https://api.github.com/users/nikoladang/events{/privacy}', 'id': 2738713, 'gravatar_id': '', 'subscriptions_url': 'https://api.github.com/users/nikoladang/subscriptions', 'organizations_url': 'https://api.github.com/users/nikoladang/orgs', 'repos_url': 'https://api.github.com/users/nikoladang/repos', 'type': 'User', 'gists_url': 'https://api.github.com/users/nikoladang/gists{/gist_id}', 'url': 'https://api.github.com/users/nikoladang', 'login': 'nikoladang', 'followers_url': 'https://api.github.com/users/nikoladang/followers'}, 'labels_url': 'https://api.github.com/repos/evansd/whitenoise/issues/61/labels{/name}', 'url': 'https://api.github.com/repos/evansd/whitenoise/issues/61', 'title': 'Failed to load resource: the server responded with a status of 404 (Not Found) ;', 'comments': 3}"}}, {"model": "issues.issue", "pk": 13, "fields": {"created": "2016-02-21T03:03:55.857Z", "modified": "2016-02-21T03:03:55.857Z", "number": 60, "title": "Fix #55 - Drop support for Django < 1.8 and Python 2.6.", "body": "", "repo_owner": "evansd", "repo": "whitenoise", "raw": "{'created_at': '2015-12-31T22:57:26Z', 'locked': False, 'state': 'closed', 'milestone': None, 'pull_request': {'html_url': 'https://github.com/evansd/whitenoise/pull/60', 'diff_url': 'https://github.com/evansd/whitenoise/pull/60.diff', 'url': 'https://api.github.com/repos/evansd/whitenoise/pulls/60', 'patch_url': 'https://github.com/evansd/whitenoise/pull/60.patch'}, 'id': 124513247, 'html_url': 'https://github.com/evansd/whitenoise/pull/60', 'repository_url': 'https://api.github.com/repos/evansd/whitenoise', 'comments_url': 'https://api.github.com/repos/evansd/whitenoise/issues/60/comments', 'assignee': None, 'closed_at': '2016-02-08T23:55:52Z', 'events_url': 'https://api.github.com/repos/evansd/whitenoise/issues/60/events', 'updated_at': '2016-02-08T23:58:08Z', 'body': '', 'labels': [], 'number': 60, 'user': {'following_url': 'https://api.github.com/users/timgraham/following{/other_user}', 'avatar_url': 'https://avatars.githubusercontent.com/u/411869?v=3', 'received_events_url': 'https://api.github.com/users/timgraham/received_events', 'starred_url': 'https://api.github.com/users/timgraham/starred{/owner}{/repo}', 'html_url': 'https://github.com/timgraham', 'site_admin': False, 'events_url': 'https://api.github.com/users/timgraham/events{/privacy}', 'id': 411869, 'gravatar_id': '', 'subscriptions_url': 'https://api.github.com/users/timgraham/subscriptions', 'organizations_url': 'https://api.github.com/users/timgraham/orgs', 'repos_url': 'https://api.github.com/users/timgraham/repos', 'type': 'User', 'gists_url': 'https://api.github.com/users/timgraham/gists{/gist_id}', 'url': 'https://api.github.com/users/timgraham', 'login': 'timgraham', 'followers_url': 'https://api.github.com/users/timgraham/followers'}, 'labels_url': 'https://api.github.com/repos/evansd/whitenoise/issues/60/labels{/name}', 'url': 'https://api.github.com/repos/evansd/whitenoise/issues/60', 'title': 'Fix #55 - Drop support for Django < 1.8 and Python 2.6.', 'comments': 3}"}}, {"model": "issues.issue", "pk": 14, "fields": {"created": "2016-02-21T03:03:56.589Z", "modified": "2016-02-21T03:03:56.589Z", "number": 59, "title": "AWS Cloud Front supports GZIP - update docs", "body": "Hi David\r\n\r\nGreat project! A quick note -- it may be worth updating the FAQs because AWS Cloud Front now supports GZIP :+1: \r\n\r\nhttps://aws.amazon.com/blogs/aws/new-gzip-compression-support-for-amazon-cloudfront/\r\n\r\n", "repo_owner": "evansd", "repo": "whitenoise", "raw": "{'created_at': '2015-12-30T10:30:47Z', 'locked': False, 'state': 'open', 'milestone': None, 'id': 124331116, 'html_url': 'https://github.com/evansd/whitenoise/issues/59', 'repository_url': 'https://api.github.com/repos/evansd/whitenoise', 'comments_url': 'https://api.github.com/repos/evansd/whitenoise/issues/59/comments', 'assignee': None, 'closed_at': None, 'events_url': 'https://api.github.com/repos/evansd/whitenoise/issues/59/events', 'updated_at': '2016-02-10T16:30:39Z', 'body': 'Hi David\\r\\n\\r\\nGreat project! A quick note -- it may be worth updating the FAQs because AWS Cloud Front now supports GZIP :+1: \\r\\n\\r\\nhttps://aws.amazon.com/blogs/aws/new-gzip-compression-support-for-amazon-cloudfront/\\r\\n\\r\\n', 'labels': [], 'number': 59, 'user': {'following_url': 'https://api.github.com/users/gciding/following{/other_user}', 'avatar_url': 'https://avatars.githubusercontent.com/u/769267?v=3', 'received_events_url': 'https://api.github.com/users/gciding/received_events', 'starred_url': 'https://api.github.com/users/gciding/starred{/owner}{/repo}', 'html_url': 'https://github.com/gciding', 'site_admin': False, 'events_url': 'https://api.github.com/users/gciding/events{/privacy}', 'id': 769267, 'gravatar_id': '', 'subscriptions_url': 'https://api.github.com/users/gciding/subscriptions', 'organizations_url': 'https://api.github.com/users/gciding/orgs', 'repos_url': 'https://api.github.com/users/gciding/repos', 'type': 'User', 'gists_url': 'https://api.github.com/users/gciding/gists{/gist_id}', 'url': 'https://api.github.com/users/gciding', 'login': 'gciding', 'followers_url': 'https://api.github.com/users/gciding/followers'}, 'labels_url': 'https://api.github.com/repos/evansd/whitenoise/issues/59/labels{/name}', 'url': 'https://api.github.com/repos/evansd/whitenoise/issues/59', 'title': 'AWS Cloud Front supports GZIP - update docs', 'comments': 2}"}}, {"model": "issues.issue", "pk": 15, "fields": {"created": "2016-02-21T03:03:57.354Z", "modified": "2016-02-21T03:03:57.354Z", "number": 58, "title": "Are comments in CSS files respected?", "body": "I get an error that my CSS references a file which does not exist. I want to comment it out and deal with it at a later date, but both multiline and single line comments seem to be ignored and I still get the same error message.\r\n\r\nFor example,\r\n\r\n`\r\n/*url('../images/jumbotron-styled/bgbl.svg') bottom left no-repeat,*/\r\n`\r\n\r\non its own line returns the error\r\n\r\n> The CSS file 'css/usr/main.css' references a file which could not be found:\r\n>   css/images/jumbotron-styled/bgbl.svg\r\n\r\n> Please check the URL references in this CSS file, particularly any\r\n> relative paths which might be pointing to the wrong location.", "repo_owner": "evansd", "repo": "whitenoise", "raw": "{'created_at': '2015-12-29T00:37:24Z', 'locked': False, 'state': 'closed', 'milestone': None, 'id': 124145397, 'html_url': 'https://github.com/evansd/whitenoise/issues/58', 'repository_url': 'https://api.github.com/repos/evansd/whitenoise', 'comments_url': 'https://api.github.com/repos/evansd/whitenoise/issues/58/comments', 'assignee': None, 'closed_at': '2015-12-29T16:46:33Z', 'events_url': 'https://api.github.com/repos/evansd/whitenoise/issues/58/events', 'updated_at': '2015-12-29T16:46:33Z', 'body': \"I get an error that my CSS references a file which does not exist. I want to comment it out and deal with it at a later date, but both multiline and single line comments seem to be ignored and I still get the same error message.\\r\\n\\r\\nFor example,\\r\\n\\r\\n`\\r\\n/*url('../images/jumbotron-styled/bgbl.svg') bottom left no-repeat,*/\\r\\n`\\r\\n\\r\\non its own line returns the error\\r\\n\\r\\n> The CSS file 'css/usr/main.css' references a file which could not be found:\\r\\n>   css/images/jumbotron-styled/bgbl.svg\\r\\n\\r\\n> Please check the URL references in this CSS file, particularly any\\r\\n> relative paths which might be pointing to the wrong location.\", 'labels': [], 'number': 58, 'user': {'following_url': 'https://api.github.com/users/txsl/following{/other_user}', 'avatar_url': 'https://avatars.githubusercontent.com/u/1472925?v=3', 'received_events_url': 'https://api.github.com/users/txsl/received_events', 'starred_url': 'https://api.github.com/users/txsl/starred{/owner}{/repo}', 'html_url': 'https://github.com/txsl', 'site_admin': False, 'events_url': 'https://api.github.com/users/txsl/events{/privacy}', 'id': 1472925, 'gravatar_id': '', 'subscriptions_url': 'https://api.github.com/users/txsl/subscriptions', 'organizations_url': 'https://api.github.com/users/txsl/orgs', 'repos_url': 'https://api.github.com/users/txsl/repos', 'type': 'User', 'gists_url': 'https://api.github.com/users/txsl/gists{/gist_id}', 'url': 'https://api.github.com/users/txsl', 'login': 'txsl', 'followers_url': 'https://api.github.com/users/txsl/followers'}, 'labels_url': 'https://api.github.com/repos/evansd/whitenoise/issues/58/labels{/name}', 'url': 'https://api.github.com/repos/evansd/whitenoise/issues/58', 'title': 'Are comments in CSS files respected?', 'comments': 1}"}}, {"model": "issues.issue", "pk": 16, "fields": {"created": "2016-02-21T03:03:58.112Z", "modified": "2016-02-21T03:03:58.112Z", "number": 57, "title": "Make settings.STATIC_ROOT optional in development", "body": "In order for whitenoise to be drop in replacement for Django's static file serving in development, `settings.STATIC_ROOT` should be optional (instead, just relying on the staticfiles finders).", "repo_owner": "evansd", "repo": "whitenoise", "raw": "{'created_at': '2015-12-29T00:12:14Z', 'locked': False, 'state': 'closed', 'milestone': None, 'id': 124143860, 'html_url': 'https://github.com/evansd/whitenoise/issues/57', 'repository_url': 'https://api.github.com/repos/evansd/whitenoise', 'comments_url': 'https://api.github.com/repos/evansd/whitenoise/issues/57/comments', 'assignee': None, 'closed_at': '2016-01-08T11:21:04Z', 'events_url': 'https://api.github.com/repos/evansd/whitenoise/issues/57/events', 'updated_at': '2016-01-08T11:21:04Z', 'body': \"In order for whitenoise to be drop in replacement for Django's static file serving in development, `settings.STATIC_ROOT` should be optional (instead, just relying on the staticfiles finders).\", 'labels': [], 'number': 57, 'user': {'following_url': 'https://api.github.com/users/timgraham/following{/other_user}', 'avatar_url': 'https://avatars.githubusercontent.com/u/411869?v=3', 'received_events_url': 'https://api.github.com/users/timgraham/received_events', 'starred_url': 'https://api.github.com/users/timgraham/starred{/owner}{/repo}', 'html_url': 'https://github.com/timgraham', 'site_admin': False, 'events_url': 'https://api.github.com/users/timgraham/events{/privacy}', 'id': 411869, 'gravatar_id': '', 'subscriptions_url': 'https://api.github.com/users/timgraham/subscriptions', 'organizations_url': 'https://api.github.com/users/timgraham/orgs', 'repos_url': 'https://api.github.com/users/timgraham/repos', 'type': 'User', 'gists_url': 'https://api.github.com/users/timgraham/gists{/gist_id}', 'url': 'https://api.github.com/users/timgraham', 'login': 'timgraham', 'followers_url': 'https://api.github.com/users/timgraham/followers'}, 'labels_url': 'https://api.github.com/repos/evansd/whitenoise/issues/57/labels{/name}', 'url': 'https://api.github.com/repos/evansd/whitenoise/issues/57', 'title': 'Make settings.STATIC_ROOT optional in development', 'comments': 1}"}}, {"model": "issues.issue", "pk": 17, "fields": {"created": "2016-02-21T03:03:58.886Z", "modified": "2016-02-21T03:03:58.886Z", "number": 56, "title": "Remove deprecated django.conf.urls.patterns()", "body": "", "repo_owner": "evansd", "repo": "whitenoise", "raw": "{'created_at': '2015-12-28T23:19:13Z', 'locked': False, 'state': 'closed', 'milestone': None, 'pull_request': {'html_url': 'https://github.com/evansd/whitenoise/pull/56', 'diff_url': 'https://github.com/evansd/whitenoise/pull/56.diff', 'url': 'https://api.github.com/repos/evansd/whitenoise/pulls/56', 'patch_url': 'https://github.com/evansd/whitenoise/pull/56.patch'}, 'id': 124140001, 'html_url': 'https://github.com/evansd/whitenoise/pull/56', 'repository_url': 'https://api.github.com/repos/evansd/whitenoise', 'comments_url': 'https://api.github.com/repos/evansd/whitenoise/issues/56/comments', 'assignee': None, 'closed_at': '2015-12-29T17:32:16Z', 'events_url': 'https://api.github.com/repos/evansd/whitenoise/issues/56/events', 'updated_at': '2015-12-29T17:32:56Z', 'body': '', 'labels': [], 'number': 56, 'user': {'following_url': 'https://api.github.com/users/timgraham/following{/other_user}', 'avatar_url': 'https://avatars.githubusercontent.com/u/411869?v=3', 'received_events_url': 'https://api.github.com/users/timgraham/received_events', 'starred_url': 'https://api.github.com/users/timgraham/starred{/owner}{/repo}', 'html_url': 'https://github.com/timgraham', 'site_admin': False, 'events_url': 'https://api.github.com/users/timgraham/events{/privacy}', 'id': 411869, 'gravatar_id': '', 'subscriptions_url': 'https://api.github.com/users/timgraham/subscriptions', 'organizations_url': 'https://api.github.com/users/timgraham/orgs', 'repos_url': 'https://api.github.com/users/timgraham/repos', 'type': 'User', 'gists_url': 'https://api.github.com/users/timgraham/gists{/gist_id}', 'url': 'https://api.github.com/users/timgraham', 'login': 'timgraham', 'followers_url': 'https://api.github.com/users/timgraham/followers'}, 'labels_url': 'https://api.github.com/repos/evansd/whitenoise/issues/56/labels{/name}', 'url': 'https://api.github.com/repos/evansd/whitenoise/issues/56', 'title': 'Remove deprecated django.conf.urls.patterns()', 'comments': 0}"}}, {"model": "issues.issue", "pk": 18, "fields": {"created": "2016-02-21T03:03:59.645Z", "modified": "2016-02-21T03:03:59.645Z", "number": 55, "title": "Drop support for Django < 1.8", "body": "Django 1.7 and older are no longer supported. I propose to drop support for older versions to cleanup the code and ease future development.", "repo_owner": "evansd", "repo": "whitenoise", "raw": "{'created_at': '2015-12-28T23:12:12Z', 'locked': False, 'state': 'closed', 'milestone': None, 'id': 124139496, 'html_url': 'https://github.com/evansd/whitenoise/issues/55', 'repository_url': 'https://api.github.com/repos/evansd/whitenoise', 'comments_url': 'https://api.github.com/repos/evansd/whitenoise/issues/55/comments', 'assignee': None, 'closed_at': '2016-02-08T23:55:53Z', 'events_url': 'https://api.github.com/repos/evansd/whitenoise/issues/55/events', 'updated_at': '2016-02-08T23:55:53Z', 'body': 'Django 1.7 and older are no longer supported. I propose to drop support for older versions to cleanup the code and ease future development.', 'labels': [], 'number': 55, 'user': {'following_url': 'https://api.github.com/users/timgraham/following{/other_user}', 'avatar_url': 'https://avatars.githubusercontent.com/u/411869?v=3', 'received_events_url': 'https://api.github.com/users/timgraham/received_events', 'starred_url': 'https://api.github.com/users/timgraham/starred{/owner}{/repo}', 'html_url': 'https://github.com/timgraham', 'site_admin': False, 'events_url': 'https://api.github.com/users/timgraham/events{/privacy}', 'id': 411869, 'gravatar_id': '', 'subscriptions_url': 'https://api.github.com/users/timgraham/subscriptions', 'organizations_url': 'https://api.github.com/users/timgraham/orgs', 'repos_url': 'https://api.github.com/users/timgraham/repos', 'type': 'User', 'gists_url': 'https://api.github.com/users/timgraham/gists{/gist_id}', 'url': 'https://api.github.com/users/timgraham', 'login': 'timgraham', 'followers_url': 'https://api.github.com/users/timgraham/followers'}, 'labels_url': 'https://api.github.com/repos/evansd/whitenoise/issues/55/labels{/name}', 'url': 'https://api.github.com/repos/evansd/whitenoise/issues/55', 'title': 'Drop support for Django < 1.8', 'comments': 1}"}}, {"model": "issues.issue", "pk": 19, "fields": {"created": "2016-02-21T03:04:00.403Z", "modified": "2016-02-21T03:04:00.403Z", "number": 54, "title": "Add reference to wsgi-sslify in the docs", "body": "https://github.com/jacobian/wsgi-sslify\r\n\r\nAs mentioned in https://github.com/evansd/whitenoise/issues/53#issuecomment-166972824", "repo_owner": "evansd", "repo": "whitenoise", "raw": "{'created_at': '2015-12-23T19:10:43Z', 'locked': False, 'state': 'closed', 'milestone': None, 'id': 123709809, 'html_url': 'https://github.com/evansd/whitenoise/issues/54', 'repository_url': 'https://api.github.com/repos/evansd/whitenoise', 'comments_url': 'https://api.github.com/repos/evansd/whitenoise/issues/54/comments', 'assignee': None, 'closed_at': '2016-02-12T10:49:42Z', 'events_url': 'https://api.github.com/repos/evansd/whitenoise/issues/54/events', 'updated_at': '2016-02-12T10:49:42Z', 'body': 'https://github.com/jacobian/wsgi-sslify\\r\\n\\r\\nAs mentioned in https://github.com/evansd/whitenoise/issues/53#issuecomment-166972824', 'labels': [], 'number': 54, 'user': {'following_url': 'https://api.github.com/users/evansd/following{/other_user}', 'avatar_url': 'https://avatars.githubusercontent.com/u/19630?v=3', 'received_events_url': 'https://api.github.com/users/evansd/received_events', 'starred_url': 'https://api.github.com/users/evansd/starred{/owner}{/repo}', 'html_url': 'https://github.com/evansd', 'site_admin': False, 'events_url': 'https://api.github.com/users/evansd/events{/privacy}', 'id': 19630, 'gravatar_id': '', 'subscriptions_url': 'https://api.github.com/users/evansd/subscriptions', 'organizations_url': 'https://api.github.com/users/evansd/orgs', 'repos_url': 'https://api.github.com/users/evansd/repos', 'type': 'User', 'gists_url': 'https://api.github.com/users/evansd/gists{/gist_id}', 'url': 'https://api.github.com/users/evansd', 'login': 'evansd', 'followers_url': 'https://api.github.com/users/evansd/followers'}, 'labels_url': 'https://api.github.com/repos/evansd/whitenoise/issues/54/labels{/name}', 'url': 'https://api.github.com/repos/evansd/whitenoise/issues/54', 'title': 'Add reference to wsgi-sslify in the docs', 'comments': 0}"}}, {"model": "issues.issue", "pk": 20, "fields": {"created": "2016-02-21T03:04:01.157Z", "modified": "2016-02-21T03:04:01.157Z", "number": 53, "title": "Support redirecting to HTTPS / setting HSTS header", "body": "Typically redirecting HTTP requests to HTTPS or setting an HSTS header would be the responsibility of ngnix/Apache, however when using Heroku these aren't an option.\r\n\r\nOne might say that the wgsi app that WhiteNoise wraps should handle this instead ([example](https://docs.djangoproject.com/en/1.8/ref/settings/#std:setting-SECURE_SSL_REDIRECT)) -- since it could make the redirect when serving the homepage. \r\n\r\nHowever:\r\n(a) this doesn't protect direct requests to static assets served by WhiteNoise (even if HSTS was enabled, the first visit to the site might be to a WhiteNoise served file instead)\r\n(b) this doesn't help sites whose homepage is not dynamic, and is served by WhiteNoise itself (which is the case I hit, since the site UI is entirely Angular.js, with Django powering just the site API).\r\n\r\nIt's worth noting that when determining whether to redirect on Heroku, the `HTTP_X_FORWARDED_PROTO` header must be observed, since both HTTP and HTTPS requests arrive on the same port on the Heroku web dyno. (And similarly for Azure, one must check `x-arr-ssl`.)\r\n\r\nI see three options:\r\n1) Add support for redirects + HSTS in WhiteNoise.\r\n2) Add an option for only serving requests over HTTPS via WhiteNoise, and let anything else fall through to the wrapped wgsi app so it can respond with the redirect/HSTS header itself.\r\n3) Wontfix for WhiteNoise, but add recommendations to the docs for using some other wgsi wrapper that itself wraps WhiteNoise (though I'm struggling to find something generic).\r\n\r\n@evansd, what are your thoughts? :-)", "repo_owner": "evansd", "repo": "whitenoise", "raw": "{'created_at': '2015-12-23T18:29:15Z', 'locked': False, 'state': 'closed', 'milestone': None, 'id': 123704321, 'html_url': 'https://github.com/evansd/whitenoise/issues/53', 'repository_url': 'https://api.github.com/repos/evansd/whitenoise', 'comments_url': 'https://api.github.com/repos/evansd/whitenoise/issues/53/comments', 'assignee': None, 'closed_at': '2015-12-23T19:09:34Z', 'events_url': 'https://api.github.com/repos/evansd/whitenoise/issues/53/events', 'updated_at': '2015-12-23T19:25:29Z', 'body': \"Typically redirecting HTTP requests to HTTPS or setting an HSTS header would be the responsibility of ngnix/Apache, however when using Heroku these aren't an option.\\r\\n\\r\\nOne might say that the wgsi app that WhiteNoise wraps should handle this instead ([example](https://docs.djangoproject.com/en/1.8/ref/settings/#std:setting-SECURE_SSL_REDIRECT)) -- since it could make the redirect when serving the homepage. \\r\\n\\r\\nHowever:\\r\\n(a) this doesn't protect direct requests to static assets served by WhiteNoise (even if HSTS was enabled, the first visit to the site might be to a WhiteNoise served file instead)\\r\\n(b) this doesn't help sites whose homepage is not dynamic, and is served by WhiteNoise itself (which is the case I hit, since the site UI is entirely Angular.js, with Django powering just the site API).\\r\\n\\r\\nIt's worth noting that when determining whether to redirect on Heroku, the `HTTP_X_FORWARDED_PROTO` header must be observed, since both HTTP and HTTPS requests arrive on the same port on the Heroku web dyno. (And similarly for Azure, one must check `x-arr-ssl`.)\\r\\n\\r\\nI see three options:\\r\\n1) Add support for redirects + HSTS in WhiteNoise.\\r\\n2) Add an option for only serving requests over HTTPS via WhiteNoise, and let anything else fall through to the wrapped wgsi app so it can respond with the redirect/HSTS header itself.\\r\\n3) Wontfix for WhiteNoise, but add recommendations to the docs for using some other wgsi wrapper that itself wraps WhiteNoise (though I'm struggling to find something generic).\\r\\n\\r\\n@evansd, what are your thoughts? :-)\", 'labels': [], 'number': 53, 'user': {'following_url': 'https://api.github.com/users/edmorley/following{/other_user}', 'avatar_url': 'https://avatars.githubusercontent.com/u/501702?v=3', 'received_events_url': 'https://api.github.com/users/edmorley/received_events', 'starred_url': 'https://api.github.com/users/edmorley/starred{/owner}{/repo}', 'html_url': 'https://github.com/edmorley', 'site_admin': False, 'events_url': 'https://api.github.com/users/edmorley/events{/privacy}', 'id': 501702, 'gravatar_id': '', 'subscriptions_url': 'https://api.github.com/users/edmorley/subscriptions', 'organizations_url': 'https://api.github.com/users/edmorley/orgs', 'repos_url': 'https://api.github.com/users/edmorley/repos', 'type': 'User', 'gists_url': 'https://api.github.com/users/edmorley/gists{/gist_id}', 'url': 'https://api.github.com/users/edmorley', 'login': 'edmorley', 'followers_url': 'https://api.github.com/users/edmorley/followers'}, 'labels_url': 'https://api.github.com/repos/evansd/whitenoise/issues/53/labels{/name}', 'url': 'https://api.github.com/repos/evansd/whitenoise/issues/53', 'title': 'Support redirecting to HTTPS / setting HSTS header', 'comments': 2}"}}, {"model": "issues.issue", "pk": 21, "fields": {"created": "2016-02-21T03:04:01.893Z", "modified": "2016-02-21T03:04:01.893Z", "number": 52, "title": "SVGs showing up broken in the new Django 1.9 admin interface", "body": "@evansd have you seen this happen before?\r\n\r\nI haven't been able to dig into it very much yet.  If I gather any more info I'll update this issue.", "repo_owner": "evansd", "repo": "whitenoise", "raw": "{'created_at': '2015-12-23T18:05:58Z', 'locked': False, 'state': 'closed', 'milestone': None, 'id': 123701484, 'html_url': 'https://github.com/evansd/whitenoise/issues/52', 'repository_url': 'https://api.github.com/repos/evansd/whitenoise', 'comments_url': 'https://api.github.com/repos/evansd/whitenoise/issues/52/comments', 'assignee': None, 'closed_at': '2016-01-18T21:20:01Z', 'events_url': 'https://api.github.com/repos/evansd/whitenoise/issues/52/events', 'updated_at': '2016-01-18T21:20:01Z', 'body': \"@evansd have you seen this happen before?\\r\\n\\r\\nI haven't been able to dig into it very much yet.  If I gather any more info I'll update this issue.\", 'labels': [], 'number': 52, 'user': {'following_url': 'https://api.github.com/users/aj-may/following{/other_user}', 'avatar_url': 'https://avatars.githubusercontent.com/u/1403235?v=3', 'received_events_url': 'https://api.github.com/users/aj-may/received_events', 'starred_url': 'https://api.github.com/users/aj-may/starred{/owner}{/repo}', 'html_url': 'https://github.com/aj-may', 'site_admin': False, 'events_url': 'https://api.github.com/users/aj-may/events{/privacy}', 'id': 1403235, 'gravatar_id': '', 'subscriptions_url': 'https://api.github.com/users/aj-may/subscriptions', 'organizations_url': 'https://api.github.com/users/aj-may/orgs', 'repos_url': 'https://api.github.com/users/aj-may/repos', 'type': 'User', 'gists_url': 'https://api.github.com/users/aj-may/gists{/gist_id}', 'url': 'https://api.github.com/users/aj-may', 'login': 'aj-may', 'followers_url': 'https://api.github.com/users/aj-may/followers'}, 'labels_url': 'https://api.github.com/repos/evansd/whitenoise/issues/52/labels{/name}', 'url': 'https://api.github.com/repos/evansd/whitenoise/issues/52', 'title': 'SVGs showing up broken in the new Django 1.9 admin interface', 'comments': 3}"}}, {"model": "issues.issue", "pk": 22, "fields": {"created": "2016-02-21T03:05:05.075Z", "modified": "2016-02-21T03:05:05.075Z", "number": 51, "title": "Use current standard MIME type for WOFF fonts", "body": "The standard MIME type is apparently now `application/font-woff` rather than `application/x-font-woff` currently returned:\r\n\r\nhttp://www.w3.org/TR/WOFF/#appendix-b", "repo_owner": "evansd", "repo": "whitenoise", "raw": "{'created_at': '2015-11-17T15:49:27Z', 'locked': False, 'state': 'closed', 'milestone': None, 'pull_request': {'html_url': 'https://github.com/evansd/whitenoise/pull/51', 'diff_url': 'https://github.com/evansd/whitenoise/pull/51.diff', 'url': 'https://api.github.com/repos/evansd/whitenoise/pulls/51', 'patch_url': 'https://github.com/evansd/whitenoise/pull/51.patch'}, 'id': 117383945, 'html_url': 'https://github.com/evansd/whitenoise/pull/51', 'repository_url': 'https://api.github.com/repos/evansd/whitenoise', 'comments_url': 'https://api.github.com/repos/evansd/whitenoise/issues/51/comments', 'assignee': None, 'closed_at': '2015-11-17T20:52:18Z', 'events_url': 'https://api.github.com/repos/evansd/whitenoise/issues/51/events', 'updated_at': '2015-11-17T21:31:06Z', 'body': 'The standard MIME type is apparently now `application/font-woff` rather than `application/x-font-woff` currently returned:\\r\\n\\r\\nhttp://www.w3.org/TR/WOFF/#appendix-b', 'labels': [], 'number': 51, 'user': {'following_url': 'https://api.github.com/users/acdha/following{/other_user}', 'avatar_url': 'https://avatars.githubusercontent.com/u/46565?v=3', 'received_events_url': 'https://api.github.com/users/acdha/received_events', 'starred_url': 'https://api.github.com/users/acdha/starred{/owner}{/repo}', 'html_url': 'https://github.com/acdha', 'site_admin': False, 'events_url': 'https://api.github.com/users/acdha/events{/privacy}', 'id': 46565, 'gravatar_id': '', 'subscriptions_url': 'https://api.github.com/users/acdha/subscriptions', 'organizations_url': 'https://api.github.com/users/acdha/orgs', 'repos_url': 'https://api.github.com/users/acdha/repos', 'type': 'User', 'gists_url': 'https://api.github.com/users/acdha/gists{/gist_id}', 'url': 'https://api.github.com/users/acdha', 'login': 'acdha', 'followers_url': 'https://api.github.com/users/acdha/followers'}, 'labels_url': 'https://api.github.com/repos/evansd/whitenoise/issues/51/labels{/name}', 'url': 'https://api.github.com/repos/evansd/whitenoise/issues/51', 'title': 'Use current standard MIME type for WOFF fonts', 'comments': 2}"}}, {"model": "issues.issue", "pk": 23, "fields": {"created": "2016-02-21T03:05:05.795Z", "modified": "2016-02-21T03:05:05.795Z", "number": 50, "title": "Add ability to set a custom Content Type for specific files without an extension", "body": "Apple's `apple-app-site-association` file must be served with the `application/pkc7-mime` content type (see: https://developer.apple.com/library/ios/documentation/Security/Reference/SharedWebCredentialsRef/), but Whitenoise is serving it with `application/octet-stream`, because the file has no extension and as such `mimetypes` determines it should provide the default `octet-stream`.\r\n\r\nWould it be feasible to have some sort of file -> content type mapping which we could use whenever you would like to override the `mimetypes` library.\r\n", "repo_owner": "evansd", "repo": "whitenoise", "raw": "{'created_at': '2015-11-16T17:55:14Z', 'locked': False, 'state': 'closed', 'milestone': None, 'id': 117182567, 'html_url': 'https://github.com/evansd/whitenoise/issues/50', 'repository_url': 'https://api.github.com/repos/evansd/whitenoise', 'comments_url': 'https://api.github.com/repos/evansd/whitenoise/issues/50/comments', 'assignee': None, 'closed_at': '2015-11-16T19:31:02Z', 'events_url': 'https://api.github.com/repos/evansd/whitenoise/issues/50/events', 'updated_at': '2015-11-16T19:31:02Z', 'body': \"Apple's `apple-app-site-association` file must be served with the `application/pkc7-mime` content type (see: https://developer.apple.com/library/ios/documentation/Security/Reference/SharedWebCredentialsRef/), but Whitenoise is serving it with `application/octet-stream`, because the file has no extension and as such `mimetypes` determines it should provide the default `octet-stream`.\\r\\n\\r\\nWould it be feasible to have some sort of file -> content type mapping which we could use whenever you would like to override the `mimetypes` library.\\r\\n\", 'labels': [], 'number': 50, 'user': {'following_url': 'https://api.github.com/users/iserko/following{/other_user}', 'avatar_url': 'https://avatars.githubusercontent.com/u/473071?v=3', 'received_events_url': 'https://api.github.com/users/iserko/received_events', 'starred_url': 'https://api.github.com/users/iserko/starred{/owner}{/repo}', 'html_url': 'https://github.com/iserko', 'site_admin': False, 'events_url': 'https://api.github.com/users/iserko/events{/privacy}', 'id': 473071, 'gravatar_id': '', 'subscriptions_url': 'https://api.github.com/users/iserko/subscriptions', 'organizations_url': 'https://api.github.com/users/iserko/orgs', 'repos_url': 'https://api.github.com/users/iserko/repos', 'type': 'User', 'gists_url': 'https://api.github.com/users/iserko/gists{/gist_id}', 'url': 'https://api.github.com/users/iserko', 'login': 'iserko', 'followers_url': 'https://api.github.com/users/iserko/followers'}, 'labels_url': 'https://api.github.com/repos/evansd/whitenoise/issues/50/labels{/name}', 'url': 'https://api.github.com/repos/evansd/whitenoise/issues/50', 'title': 'Add ability to set a custom Content Type for specific files without an extension', 'comments': 2}"}}, {"model": "issues.issue", "pk": 24, "fields": {"created": "2016-02-21T03:05:06.564Z", "modified": "2016-02-21T03:05:06.564Z", "number": 49, "title": "Add the argparse dependency to whitenoise when installed on Python 2.6", "body": "A patch to potentially fix #47.", "repo_owner": "evansd", "repo": "whitenoise", "raw": "{'created_at': '2015-11-13T14:18:31Z', 'locked': False, 'state': 'closed', 'milestone': None, 'pull_request': {'html_url': 'https://github.com/evansd/whitenoise/pull/49', 'diff_url': 'https://github.com/evansd/whitenoise/pull/49.diff', 'url': 'https://api.github.com/repos/evansd/whitenoise/pulls/49', 'patch_url': 'https://github.com/evansd/whitenoise/pull/49.patch'}, 'id': 116776343, 'html_url': 'https://github.com/evansd/whitenoise/pull/49', 'repository_url': 'https://api.github.com/repos/evansd/whitenoise', 'comments_url': 'https://api.github.com/repos/evansd/whitenoise/issues/49/comments', 'assignee': None, 'closed_at': '2015-11-15T11:11:29Z', 'events_url': 'https://api.github.com/repos/evansd/whitenoise/issues/49/events', 'updated_at': '2015-11-15T11:12:17Z', 'body': 'A patch to potentially fix #47.', 'labels': [], 'number': 49, 'user': {'following_url': 'https://api.github.com/users/movermeyer/following{/other_user}', 'avatar_url': 'https://avatars.githubusercontent.com/u/1459385?v=3', 'received_events_url': 'https://api.github.com/users/movermeyer/received_events', 'starred_url': 'https://api.github.com/users/movermeyer/starred{/owner}{/repo}', 'html_url': 'https://github.com/movermeyer', 'site_admin': False, 'events_url': 'https://api.github.com/users/movermeyer/events{/privacy}', 'id': 1459385, 'gravatar_id': '', 'subscriptions_url': 'https://api.github.com/users/movermeyer/subscriptions', 'organizations_url': 'https://api.github.com/users/movermeyer/orgs', 'repos_url': 'https://api.github.com/users/movermeyer/repos', 'type': 'User', 'gists_url': 'https://api.github.com/users/movermeyer/gists{/gist_id}', 'url': 'https://api.github.com/users/movermeyer', 'login': 'movermeyer', 'followers_url': 'https://api.github.com/users/movermeyer/followers'}, 'labels_url': 'https://api.github.com/repos/evansd/whitenoise/issues/49/labels{/name}', 'url': 'https://api.github.com/repos/evansd/whitenoise/issues/49', 'title': 'Add the argparse dependency to whitenoise when installed on Python 2.6', 'comments': 6}"}}, {"model": "issues.issue", "pk": 25, "fields": {"created": "2016-02-21T03:05:07.283Z", "modified": "2016-02-21T03:05:07.284Z", "number": 48, "title": "Correct CND to CDN in django.rst", "body": "", "repo_owner": "evansd", "repo": "whitenoise", "raw": "{'created_at': '2015-11-11T19:28:58Z', 'locked': False, 'state': 'closed', 'milestone': None, 'pull_request': {'html_url': 'https://github.com/evansd/whitenoise/pull/48', 'diff_url': 'https://github.com/evansd/whitenoise/pull/48.diff', 'url': 'https://api.github.com/repos/evansd/whitenoise/pulls/48', 'patch_url': 'https://github.com/evansd/whitenoise/pull/48.patch'}, 'id': 116404670, 'html_url': 'https://github.com/evansd/whitenoise/pull/48', 'repository_url': 'https://api.github.com/repos/evansd/whitenoise', 'comments_url': 'https://api.github.com/repos/evansd/whitenoise/issues/48/comments', 'assignee': None, 'closed_at': '2015-11-11T19:38:16Z', 'events_url': 'https://api.github.com/repos/evansd/whitenoise/issues/48/events', 'updated_at': '2015-11-11T19:38:27Z', 'body': '', 'labels': [], 'number': 48, 'user': {'following_url': 'https://api.github.com/users/openjck/following{/other_user}', 'avatar_url': 'https://avatars.githubusercontent.com/u/933396?v=3', 'received_events_url': 'https://api.github.com/users/openjck/received_events', 'starred_url': 'https://api.github.com/users/openjck/starred{/owner}{/repo}', 'html_url': 'https://github.com/openjck', 'site_admin': False, 'events_url': 'https://api.github.com/users/openjck/events{/privacy}', 'id': 933396, 'gravatar_id': '', 'subscriptions_url': 'https://api.github.com/users/openjck/subscriptions', 'organizations_url': 'https://api.github.com/users/openjck/orgs', 'repos_url': 'https://api.github.com/users/openjck/repos', 'type': 'User', 'gists_url': 'https://api.github.com/users/openjck/gists{/gist_id}', 'url': 'https://api.github.com/users/openjck', 'login': 'openjck', 'followers_url': 'https://api.github.com/users/openjck/followers'}, 'labels_url': 'https://api.github.com/repos/evansd/whitenoise/issues/48/labels{/name}', 'url': 'https://api.github.com/repos/evansd/whitenoise/issues/48', 'title': 'Correct CND to CDN in django.rst', 'comments': 1}"}}, {"model": "issues.issue", "pk": 26, "fields": {"created": "2016-02-21T03:05:08.013Z", "modified": "2016-02-21T03:05:08.013Z", "number": 47, "title": "whitenoise is missing the argparse dependency when installed for Python 2.6", "body": "When you install whitenoise for Python 2.6:\r\n\r\n    pip install whitenoise\r\n\r\nIt does not download the 'argparse' dependency automatically. Note that this library is included in the standard library for Python >= 2.7 and >= 3.2\r\n\r\nIf you try to use the whitenoise library without it (example from [Graphite](https://github.com/graphite-project/graphite-web)), you get:\r\n\r\n    Traceback (most recent call last):\r\n      File \"/opt/graphite/conf/graphite.wsgi\", line 32, in <module>\r\n        from whitenoise.django import DjangoWhiteNoise\r\n      File \"/usr/lib/python2.6/site-packages/whitenoise/django.py\", line 32, in <module>\r\n        from .gzip import compress, extension_regex, GZIP_EXCLUDE_EXTENSIONS\r\n      File \"/usr/lib/python2.6/site-packages/whitenoise/gzip.py\", line 4, in <module>\r\n        import argparse\r\n    ImportError: No module named argparse", "repo_owner": "evansd", "repo": "whitenoise", "raw": "{'created_at': '2015-11-09T18:58:34Z', 'locked': False, 'state': 'closed', 'milestone': None, 'id': 115941624, 'html_url': 'https://github.com/evansd/whitenoise/issues/47', 'repository_url': 'https://api.github.com/repos/evansd/whitenoise', 'comments_url': 'https://api.github.com/repos/evansd/whitenoise/issues/47/comments', 'assignee': None, 'closed_at': '2015-11-15T11:10:42Z', 'events_url': 'https://api.github.com/repos/evansd/whitenoise/issues/47/events', 'updated_at': '2015-11-15T11:10:42Z', 'body': 'When you install whitenoise for Python 2.6:\\r\\n\\r\\n    pip install whitenoise\\r\\n\\r\\nIt does not download the \\'argparse\\' dependency automatically. Note that this library is included in the standard library for Python >= 2.7 and >= 3.2\\r\\n\\r\\nIf you try to use the whitenoise library without it (example from [Graphite](https://github.com/graphite-project/graphite-web)), you get:\\r\\n\\r\\n    Traceback (most recent call last):\\r\\n      File \"/opt/graphite/conf/graphite.wsgi\", line 32, in <module>\\r\\n        from whitenoise.django import DjangoWhiteNoise\\r\\n      File \"/usr/lib/python2.6/site-packages/whitenoise/django.py\", line 32, in <module>\\r\\n        from .gzip import compress, extension_regex, GZIP_EXCLUDE_EXTENSIONS\\r\\n      File \"/usr/lib/python2.6/site-packages/whitenoise/gzip.py\", line 4, in <module>\\r\\n        import argparse\\r\\n    ImportError: No module named argparse', 'labels': [], 'number': 47, 'user': {'following_url': 'https://api.github.com/users/movermeyer/following{/other_user}', 'avatar_url': 'https://avatars.githubusercontent.com/u/1459385?v=3', 'received_events_url': 'https://api.github.com/users/movermeyer/received_events', 'starred_url': 'https://api.github.com/users/movermeyer/starred{/owner}{/repo}', 'html_url': 'https://github.com/movermeyer', 'site_admin': False, 'events_url': 'https://api.github.com/users/movermeyer/events{/privacy}', 'id': 1459385, 'gravatar_id': '', 'subscriptions_url': 'https://api.github.com/users/movermeyer/subscriptions', 'organizations_url': 'https://api.github.com/users/movermeyer/orgs', 'repos_url': 'https://api.github.com/users/movermeyer/repos', 'type': 'User', 'gists_url': 'https://api.github.com/users/movermeyer/gists{/gist_id}', 'url': 'https://api.github.com/users/movermeyer', 'login': 'movermeyer', 'followers_url': 'https://api.github.com/users/movermeyer/followers'}, 'labels_url': 'https://api.github.com/repos/evansd/whitenoise/issues/47/labels{/name}', 'url': 'https://api.github.com/repos/evansd/whitenoise/issues/47', 'title': 'whitenoise is missing the argparse dependency when installed for Python 2.6', 'comments': 2}"}}, {"model": "issues.issue", "pk": 27, "fields": {"created": "2016-02-21T03:05:08.784Z", "modified": "2016-02-21T03:05:08.784Z", "number": 46, "title": "gzip.py module collides namespace with gzip module", "body": "gzip.py tries to import the gzip module but ends up importing itself. Apparently \".\" is added to the sys path by default. \".\" could be removed from the path but I think prettier way would be to rename gzip.py so that there is no name collision.\r\n\r\n```\r\n/usr/lib/python3.4/site-packages/whitenoise/gzip.py         \r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.4/site-packages/whitenoise/gzip.py\", line 6, in <module>\r\n    import gzip\r\n  File \"/usr/lib/python3.4/site-packages/whitenoise/gzip.py\", line 15, in <module>\r\n    GzipFile = gzip.GzipFile\r\nAttributeError: 'module' object has no attribute 'GzipFile'\r\n```", "repo_owner": "evansd", "repo": "whitenoise", "raw": "{'created_at': '2015-11-05T10:27:19Z', 'locked': False, 'state': 'closed', 'milestone': None, 'id': 115253837, 'html_url': 'https://github.com/evansd/whitenoise/issues/46', 'repository_url': 'https://api.github.com/repos/evansd/whitenoise', 'comments_url': 'https://api.github.com/repos/evansd/whitenoise/issues/46/comments', 'assignee': None, 'closed_at': '2015-11-05T14:57:33Z', 'events_url': 'https://api.github.com/repos/evansd/whitenoise/issues/46/events', 'updated_at': '2015-11-05T14:57:33Z', 'body': 'gzip.py tries to import the gzip module but ends up importing itself. Apparently \".\" is added to the sys path by default. \".\" could be removed from the path but I think prettier way would be to rename gzip.py so that there is no name collision.\\r\\n\\r\\n```\\r\\n/usr/lib/python3.4/site-packages/whitenoise/gzip.py         \\r\\nTraceback (most recent call last):\\r\\n  File \"/usr/lib/python3.4/site-packages/whitenoise/gzip.py\", line 6, in <module>\\r\\n    import gzip\\r\\n  File \"/usr/lib/python3.4/site-packages/whitenoise/gzip.py\", line 15, in <module>\\r\\n    GzipFile = gzip.GzipFile\\r\\nAttributeError: \\'module\\' object has no attribute \\'GzipFile\\'\\r\\n```', 'labels': [], 'number': 46, 'user': {'following_url': 'https://api.github.com/users/piotr1212/following{/other_user}', 'avatar_url': 'https://avatars.githubusercontent.com/u/2911066?v=3', 'received_events_url': 'https://api.github.com/users/piotr1212/received_events', 'starred_url': 'https://api.github.com/users/piotr1212/starred{/owner}{/repo}', 'html_url': 'https://github.com/piotr1212', 'site_admin': False, 'events_url': 'https://api.github.com/users/piotr1212/events{/privacy}', 'id': 2911066, 'gravatar_id': '', 'subscriptions_url': 'https://api.github.com/users/piotr1212/subscriptions', 'organizations_url': 'https://api.github.com/users/piotr1212/orgs', 'repos_url': 'https://api.github.com/users/piotr1212/repos', 'type': 'User', 'gists_url': 'https://api.github.com/users/piotr1212/gists{/gist_id}', 'url': 'https://api.github.com/users/piotr1212', 'login': 'piotr1212', 'followers_url': 'https://api.github.com/users/piotr1212/followers'}, 'labels_url': 'https://api.github.com/repos/evansd/whitenoise/issues/46/labels{/name}', 'url': 'https://api.github.com/repos/evansd/whitenoise/issues/46', 'title': 'gzip.py module collides namespace with gzip module', 'comments': 2}"}}, {"model": "issues.issue", "pk": 28, "fields": {"created": "2016-02-21T03:05:09.567Z", "modified": "2016-02-21T03:05:09.567Z", "number": 45, "title": "Ensure consistent mimetype definitions across environments", "body": "By default, the `mimetypes` module gets its data from system config files, which can differ between environments. Probably we want to ship with our own mimetype definitions to ensure consistency.\r\n\r\n(See issue #44) ", "repo_owner": "evansd", "repo": "whitenoise", "raw": "{'created_at': '2015-10-04T11:25:58Z', 'locked': False, 'state': 'open', 'milestone': None, 'id': 109675620, 'html_url': 'https://github.com/evansd/whitenoise/issues/45', 'repository_url': 'https://api.github.com/repos/evansd/whitenoise', 'comments_url': 'https://api.github.com/repos/evansd/whitenoise/issues/45/comments', 'assignee': None, 'closed_at': None, 'events_url': 'https://api.github.com/repos/evansd/whitenoise/issues/45/events', 'updated_at': '2015-10-04T11:25:58Z', 'body': 'By default, the `mimetypes` module gets its data from system config files, which can differ between environments. Probably we want to ship with our own mimetype definitions to ensure consistency.\\r\\n\\r\\n(See issue #44) ', 'labels': [], 'number': 45, 'user': {'following_url': 'https://api.github.com/users/evansd/following{/other_user}', 'avatar_url': 'https://avatars.githubusercontent.com/u/19630?v=3', 'received_events_url': 'https://api.github.com/users/evansd/received_events', 'starred_url': 'https://api.github.com/users/evansd/starred{/owner}{/repo}', 'html_url': 'https://github.com/evansd', 'site_admin': False, 'events_url': 'https://api.github.com/users/evansd/events{/privacy}', 'id': 19630, 'gravatar_id': '', 'subscriptions_url': 'https://api.github.com/users/evansd/subscriptions', 'organizations_url': 'https://api.github.com/users/evansd/orgs', 'repos_url': 'https://api.github.com/users/evansd/repos', 'type': 'User', 'gists_url': 'https://api.github.com/users/evansd/gists{/gist_id}', 'url': 'https://api.github.com/users/evansd', 'login': 'evansd', 'followers_url': 'https://api.github.com/users/evansd/followers'}, 'labels_url': 'https://api.github.com/repos/evansd/whitenoise/issues/45/labels{/name}', 'url': 'https://api.github.com/repos/evansd/whitenoise/issues/45', 'title': 'Ensure consistent mimetype definitions across environments', 'comments': 0}"}}, {"model": "issues.issue", "pk": 29, "fields": {"created": "2016-02-21T03:05:10.348Z", "modified": "2016-02-21T03:05:10.348Z", "number": 44, "title": "Extend EXTRA_MIMETYPES from Django settings?", "body": "It looks like the only way to extend EXTRA_MIMETYPES is by subclassing the `WhiteNoise` class. For Django projects, it might be nice to add mimetypes from `WHITENOISE_EXTRA_MIMETYPES` in `django.conf.settings` as well.\r\n\r\n(FWIW, the mime type I'm missing is `('image/svg+xml', '.svg')`. Not sure how common that problem is.)", "repo_owner": "evansd", "repo": "whitenoise", "raw": "{'created_at': '2015-10-01T17:12:28Z', 'locked': False, 'state': 'closed', 'milestone': None, 'id': 109343283, 'html_url': 'https://github.com/evansd/whitenoise/issues/44', 'repository_url': 'https://api.github.com/repos/evansd/whitenoise', 'comments_url': 'https://api.github.com/repos/evansd/whitenoise/issues/44/comments', 'assignee': None, 'closed_at': '2015-10-04T14:22:57Z', 'events_url': 'https://api.github.com/repos/evansd/whitenoise/issues/44/events', 'updated_at': '2015-10-04T14:22:57Z', 'body': \"It looks like the only way to extend EXTRA_MIMETYPES is by subclassing the `WhiteNoise` class. For Django projects, it might be nice to add mimetypes from `WHITENOISE_EXTRA_MIMETYPES` in `django.conf.settings` as well.\\r\\n\\r\\n(FWIW, the mime type I'm missing is `('image/svg+xml', '.svg')`. Not sure how common that problem is.)\", 'labels': [], 'number': 44, 'user': {'following_url': 'https://api.github.com/users/jcushman/following{/other_user}', 'avatar_url': 'https://avatars.githubusercontent.com/u/376272?v=3', 'received_events_url': 'https://api.github.com/users/jcushman/received_events', 'starred_url': 'https://api.github.com/users/jcushman/starred{/owner}{/repo}', 'html_url': 'https://github.com/jcushman', 'site_admin': False, 'events_url': 'https://api.github.com/users/jcushman/events{/privacy}', 'id': 376272, 'gravatar_id': '', 'subscriptions_url': 'https://api.github.com/users/jcushman/subscriptions', 'organizations_url': 'https://api.github.com/users/jcushman/orgs', 'repos_url': 'https://api.github.com/users/jcushman/repos', 'type': 'User', 'gists_url': 'https://api.github.com/users/jcushman/gists{/gist_id}', 'url': 'https://api.github.com/users/jcushman', 'login': 'jcushman', 'followers_url': 'https://api.github.com/users/jcushman/followers'}, 'labels_url': 'https://api.github.com/repos/evansd/whitenoise/issues/44/labels{/name}', 'url': 'https://api.github.com/repos/evansd/whitenoise/issues/44', 'title': 'Extend EXTRA_MIMETYPES from Django settings?', 'comments': 2}"}}, {"model": "issues.issue", "pk": 30, "fields": {"created": "2016-02-21T03:05:11.122Z", "modified": "2016-02-21T03:05:11.122Z", "number": 43, "title": "{% static %} doesn't include hash", "body": "Can't get the darn thing to work with \r\n`STATICFILES_STORAGE = 'whitenoise.django.GzipManifestStaticFilesStorage'`\r\n\r\n\r\nBut with my own homebrewed combination of django-pipeline and whitenoise:\r\n```\r\nfrom pipeline.storage import PipelineMixin\r\nfrom whitenoise.django import GzipManifestStaticFilesStorage\r\n\r\nclass GzipManifestPipelineStorage(PipelineMixin, GzipManifestStaticFilesStorage):\r\n    pass\r\n```\r\nand then \r\n`STATICFILES_STORAGE = 'app.storages.GzipManifestPipelineStorage'`\r\nat least the {% compressed_css %} tag of django-pipeline outputs the hash. but {%static%} still doesn't\r\n\r\nSo tl;dr: Following documentation the {%static%} tag outputs style.css instead of style.hash.css", "repo_owner": "evansd", "repo": "whitenoise", "raw": "{'created_at': '2015-09-29T13:19:29Z', 'locked': False, 'state': 'closed', 'milestone': None, 'id': 108867448, 'html_url': 'https://github.com/evansd/whitenoise/issues/43', 'repository_url': 'https://api.github.com/repos/evansd/whitenoise', 'comments_url': 'https://api.github.com/repos/evansd/whitenoise/issues/43/comments', 'assignee': None, 'closed_at': '2015-10-30T16:32:50Z', 'events_url': 'https://api.github.com/repos/evansd/whitenoise/issues/43/events', 'updated_at': '2015-10-30T16:32:50Z', 'body': \"Can't get the darn thing to work with \\r\\n`STATICFILES_STORAGE = 'whitenoise.django.GzipManifestStaticFilesStorage'`\\r\\n\\r\\n\\r\\nBut with my own homebrewed combination of django-pipeline and whitenoise:\\r\\n```\\r\\nfrom pipeline.storage import PipelineMixin\\r\\nfrom whitenoise.django import GzipManifestStaticFilesStorage\\r\\n\\r\\nclass GzipManifestPipelineStorage(PipelineMixin, GzipManifestStaticFilesStorage):\\r\\n    pass\\r\\n```\\r\\nand then \\r\\n`STATICFILES_STORAGE = 'app.storages.GzipManifestPipelineStorage'`\\r\\nat least the {% compressed_css %} tag of django-pipeline outputs the hash. but {%static%} still doesn't\\r\\n\\r\\nSo tl;dr: Following documentation the {%static%} tag outputs style.css instead of style.hash.css\", 'labels': [], 'number': 43, 'user': {'following_url': 'https://api.github.com/users/MaZZly/following{/other_user}', 'avatar_url': 'https://avatars.githubusercontent.com/u/1368281?v=3', 'received_events_url': 'https://api.github.com/users/MaZZly/received_events', 'starred_url': 'https://api.github.com/users/MaZZly/starred{/owner}{/repo}', 'html_url': 'https://github.com/MaZZly', 'site_admin': False, 'events_url': 'https://api.github.com/users/MaZZly/events{/privacy}', 'id': 1368281, 'gravatar_id': '', 'subscriptions_url': 'https://api.github.com/users/MaZZly/subscriptions', 'organizations_url': 'https://api.github.com/users/MaZZly/orgs', 'repos_url': 'https://api.github.com/users/MaZZly/repos', 'type': 'User', 'gists_url': 'https://api.github.com/users/MaZZly/gists{/gist_id}', 'url': 'https://api.github.com/users/MaZZly', 'login': 'MaZZly', 'followers_url': 'https://api.github.com/users/MaZZly/followers'}, 'labels_url': 'https://api.github.com/repos/evansd/whitenoise/issues/43/labels{/name}', 'url': 'https://api.github.com/repos/evansd/whitenoise/issues/43', 'title': \"{% static %} doesn't include hash\", 'comments': 3}"}}, {"model": "issues.issue", "pk": 31, "fields": {"created": "2016-02-21T03:05:13.617Z", "modified": "2016-02-21T03:05:13.617Z", "number": 42, "title": "More helpful startup error, avoid barfing on broken css", "body": "Two (mostly orthogonal) things here. I'm using Whitenoise with Django, and the whitenoise.django.GzipManifestStaticFilesStorage storage backend.\r\n\r\nFirst, if my STATIC_ROOT has broken symlinks in it, WhiteNoise will prevent the app from starting by raising a MissingFileError at startup. This patch makes that error more useful by specifying the path of the missing file. I would also love it if Whitenoise could handle this more gracefully somehow, but this at least lets me know where my problem is.\r\n\r\nSecond, if I have a CSS file with a broken reference in it, collectstatic bails and some portion of my other files won't get processed. When this happens on prod, this breaks all sorts of things: files aren't written to their hashed names, and if you're running `collectstatic --clear` then they're gone until the next successful collectstatic. My patch allows processing to continue if a referenced file can't be found, so that the only thing broken is the thing that's broken. \r\n\r\nThe current fail-fast behavior is cool for debugging my CSS, so it might be nice to have it in a config setting or something like that.\r\n\r\nI'd love some feedback on these ideas. Thanks!\r\n\r\nEvan", "repo_owner": "evansd", "repo": "whitenoise", "raw": "{'created_at': '2015-09-04T22:13:22Z', 'locked': False, 'state': 'closed', 'milestone': None, 'pull_request': {'html_url': 'https://github.com/evansd/whitenoise/pull/42', 'diff_url': 'https://github.com/evansd/whitenoise/pull/42.diff', 'url': 'https://api.github.com/repos/evansd/whitenoise/pulls/42', 'patch_url': 'https://github.com/evansd/whitenoise/pull/42.patch'}, 'id': 104978785, 'html_url': 'https://github.com/evansd/whitenoise/pull/42', 'repository_url': 'https://api.github.com/repos/evansd/whitenoise', 'comments_url': 'https://api.github.com/repos/evansd/whitenoise/issues/42/comments', 'assignee': None, 'closed_at': '2015-09-20T19:07:48Z', 'events_url': 'https://api.github.com/repos/evansd/whitenoise/issues/42/events', 'updated_at': '2015-09-20T19:07:48Z', 'body': \"Two (mostly orthogonal) things here. I'm using Whitenoise with Django, and the whitenoise.django.GzipManifestStaticFilesStorage storage backend.\\r\\n\\r\\nFirst, if my STATIC_ROOT has broken symlinks in it, WhiteNoise will prevent the app from starting by raising a MissingFileError at startup. This patch makes that error more useful by specifying the path of the missing file. I would also love it if Whitenoise could handle this more gracefully somehow, but this at least lets me know where my problem is.\\r\\n\\r\\nSecond, if I have a CSS file with a broken reference in it, collectstatic bails and some portion of my other files won't get processed. When this happens on prod, this breaks all sorts of things: files aren't written to their hashed names, and if you're running `collectstatic --clear` then they're gone until the next successful collectstatic. My patch allows processing to continue if a referenced file can't be found, so that the only thing broken is the thing that's broken. \\r\\n\\r\\nThe current fail-fast behavior is cool for debugging my CSS, so it might be nice to have it in a config setting or something like that.\\r\\n\\r\\nI'd love some feedback on these ideas. Thanks!\\r\\n\\r\\nEvan\", 'labels': [], 'number': 42, 'user': {'following_url': 'https://api.github.com/users/ezheidtmann/following{/other_user}', 'avatar_url': 'https://avatars.githubusercontent.com/u/1178915?v=3', 'received_events_url': 'https://api.github.com/users/ezheidtmann/received_events', 'starred_url': 'https://api.github.com/users/ezheidtmann/starred{/owner}{/repo}', 'html_url': 'https://github.com/ezheidtmann', 'site_admin': False, 'events_url': 'https://api.github.com/users/ezheidtmann/events{/privacy}', 'id': 1178915, 'gravatar_id': '', 'subscriptions_url': 'https://api.github.com/users/ezheidtmann/subscriptions', 'organizations_url': 'https://api.github.com/users/ezheidtmann/orgs', 'repos_url': 'https://api.github.com/users/ezheidtmann/repos', 'type': 'User', 'gists_url': 'https://api.github.com/users/ezheidtmann/gists{/gist_id}', 'url': 'https://api.github.com/users/ezheidtmann', 'login': 'ezheidtmann', 'followers_url': 'https://api.github.com/users/ezheidtmann/followers'}, 'labels_url': 'https://api.github.com/repos/evansd/whitenoise/issues/42/labels{/name}', 'url': 'https://api.github.com/repos/evansd/whitenoise/issues/42', 'title': 'More helpful startup error, avoid barfing on broken css', 'comments': 1}"}}, {"model": "issues.issue", "pk": 32, "fields": {"created": "2016-02-21T03:05:14.343Z", "modified": "2016-02-21T03:05:14.343Z", "number": 41, "title": "Report MissingFileError path", "body": "Using Whitenoise with Django. If my STATIC_ROOT has broken symlinks in it, WhiteNoise will prevent the app from starting by raising a MissingFileError at startup. This patch makes that error more useful by specifying the path of the missing file.\r\n\r\nI would also love it if Whitenoise could handle this more gracefully somehow.\r\n\r\nRelated Django issue: https://code.djangoproject.com/ticket/25346", "repo_owner": "evansd", "repo": "whitenoise", "raw": "{'created_at': '2015-09-04T21:13:50Z', 'locked': False, 'state': 'closed', 'milestone': None, 'pull_request': {'html_url': 'https://github.com/evansd/whitenoise/pull/41', 'diff_url': 'https://github.com/evansd/whitenoise/pull/41.diff', 'url': 'https://api.github.com/repos/evansd/whitenoise/pulls/41', 'patch_url': 'https://github.com/evansd/whitenoise/pull/41.patch'}, 'id': 104971281, 'html_url': 'https://github.com/evansd/whitenoise/pull/41', 'repository_url': 'https://api.github.com/repos/evansd/whitenoise', 'comments_url': 'https://api.github.com/repos/evansd/whitenoise/issues/41/comments', 'assignee': None, 'closed_at': '2015-09-20T18:53:16Z', 'events_url': 'https://api.github.com/repos/evansd/whitenoise/issues/41/events', 'updated_at': '2015-09-20T18:53:16Z', 'body': 'Using Whitenoise with Django. If my STATIC_ROOT has broken symlinks in it, WhiteNoise will prevent the app from starting by raising a MissingFileError at startup. This patch makes that error more useful by specifying the path of the missing file.\\r\\n\\r\\nI would also love it if Whitenoise could handle this more gracefully somehow.\\r\\n\\r\\nRelated Django issue: https://code.djangoproject.com/ticket/25346', 'labels': [], 'number': 41, 'user': {'following_url': 'https://api.github.com/users/ezheidtmann/following{/other_user}', 'avatar_url': 'https://avatars.githubusercontent.com/u/1178915?v=3', 'received_events_url': 'https://api.github.com/users/ezheidtmann/received_events', 'starred_url': 'https://api.github.com/users/ezheidtmann/starred{/owner}{/repo}', 'html_url': 'https://github.com/ezheidtmann', 'site_admin': False, 'events_url': 'https://api.github.com/users/ezheidtmann/events{/privacy}', 'id': 1178915, 'gravatar_id': '', 'subscriptions_url': 'https://api.github.com/users/ezheidtmann/subscriptions', 'organizations_url': 'https://api.github.com/users/ezheidtmann/orgs', 'repos_url': 'https://api.github.com/users/ezheidtmann/repos', 'type': 'User', 'gists_url': 'https://api.github.com/users/ezheidtmann/gists{/gist_id}', 'url': 'https://api.github.com/users/ezheidtmann', 'login': 'ezheidtmann', 'followers_url': 'https://api.github.com/users/ezheidtmann/followers'}, 'labels_url': 'https://api.github.com/repos/evansd/whitenoise/issues/41/labels{/name}', 'url': 'https://api.github.com/repos/evansd/whitenoise/issues/41', 'title': 'Report MissingFileError path', 'comments': 1}"}}, {"model": "issues.issue", "pk": 33, "fields": {"created": "2016-02-21T03:05:15.115Z", "modified": "2016-02-21T03:05:15.115Z", "number": 40, "title": "Reword \"empty prefix\" error message", "body": "As per comments here: https://github.com/evansd/whitenoise/commit/c8518b6f176b6a07806400c30ba6d55f9fdacce4#commitcomment-12785483", "repo_owner": "evansd", "repo": "whitenoise", "raw": "{'created_at': '2015-08-21T07:54:14Z', 'locked': False, 'state': 'closed', 'milestone': None, 'id': 102319443, 'html_url': 'https://github.com/evansd/whitenoise/issues/40', 'repository_url': 'https://api.github.com/repos/evansd/whitenoise', 'comments_url': 'https://api.github.com/repos/evansd/whitenoise/issues/40/comments', 'assignee': None, 'closed_at': '2015-08-25T20:49:23Z', 'events_url': 'https://api.github.com/repos/evansd/whitenoise/issues/40/events', 'updated_at': '2015-08-25T20:49:23Z', 'body': 'As per comments here: https://github.com/evansd/whitenoise/commit/c8518b6f176b6a07806400c30ba6d55f9fdacce4#commitcomment-12785483', 'labels': [], 'number': 40, 'user': {'following_url': 'https://api.github.com/users/evansd/following{/other_user}', 'avatar_url': 'https://avatars.githubusercontent.com/u/19630?v=3', 'received_events_url': 'https://api.github.com/users/evansd/received_events', 'starred_url': 'https://api.github.com/users/evansd/starred{/owner}{/repo}', 'html_url': 'https://github.com/evansd', 'site_admin': False, 'events_url': 'https://api.github.com/users/evansd/events{/privacy}', 'id': 19630, 'gravatar_id': '', 'subscriptions_url': 'https://api.github.com/users/evansd/subscriptions', 'organizations_url': 'https://api.github.com/users/evansd/orgs', 'repos_url': 'https://api.github.com/users/evansd/repos', 'type': 'User', 'gists_url': 'https://api.github.com/users/evansd/gists{/gist_id}', 'url': 'https://api.github.com/users/evansd', 'login': 'evansd', 'followers_url': 'https://api.github.com/users/evansd/followers'}, 'labels_url': 'https://api.github.com/repos/evansd/whitenoise/issues/40/labels{/name}', 'url': 'https://api.github.com/repos/evansd/whitenoise/issues/40', 'title': 'Reword \"empty prefix\" error message', 'comments': 0}"}}, {"model": "issues.issue", "pk": 34, "fields": {"created": "2016-02-21T03:05:15.810Z", "modified": "2016-02-21T03:05:15.811Z", "number": 39, "title": "Gzip compression not being enabled", "body": "I'm a newbie so forgive me if I made a mistake but I've triple checked everything and I can't seem to figure out why Gzip compression is not being enabled.\r\n\r\n**here is an example response header for a css file (from chrome dev-tools):**\r\n\r\n    HTTP/1.1 304 Not Modified\r\n    Content-Length: 0\r\n    Connection: keep-alive\r\n    Server: gunicorn/19.3.0\r\n    Date: Tue, 18 Aug 2015 14:11:07 GMT\r\n    Via: 1.1 vegur\r\n\r\npackage versions:\r\nDjango==1.8.3\r\ngunicorn==19.3.0\r\nwhitenoise==2.0.2\r\n\r\n**Static files configuration (settings.py)**\r\n\r\n    BASE_DIR = os.path.dirname(os.path.dirname(__file__))\r\n   \r\n    STATIC_URL = '/static/'\r\n    STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')\r\n    \r\n    STATICFILES_DIRS = (\r\n        os.path.join(BASE_DIR, \"static\"),\r\n    )\r\n\r\n**wsgi.py**\r\n    \r\n    import os\r\n    from django.core.wsgi import get_wsgi_application\r\n    \r\n    os.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"sikumim.settings\")\r\n    \r\n    application = get_wsgi_application()\r\n    \r\n    #HEROKU DEPLOYMENT\r\n    \r\n    from whitenoise.django import DjangoWhiteNoise\r\n    application = DjangoWhiteNoise(application)\r\n    \r\n    # Fix django closing connection to MemCachier after every request (#11331)\r\n    from django.core.cache.backends.memcached import BaseMemcachedCache\r\n    BaseMemcachedCache.close = lambda self, **kwargs: None\r\n\r\n**an example of how I'm loading static files in template:**\r\n    \r\n    {% load staticfiles %}\r\n    <link href=\"{% static \"css/base.css\" %}\" rel=\"stylesheet\" type=\"text/css\">\r\n\r\n**extra production settings for Gzip:**\r\n\r\n    STATICFILES_STORAGE = 'whitenoise.django.GzipManifestStaticFilesStorage'\r\n\r\n**Procfile:**\r\n\r\n    web: gunicorn sikumim.wsgi\r\n\r\n\r\n\r\n\r\n\r\n\r\n", "repo_owner": "evansd", "repo": "whitenoise", "raw": "{'created_at': '2015-08-18T14:20:54Z', 'locked': False, 'state': 'closed', 'milestone': None, 'id': 101668331, 'html_url': 'https://github.com/evansd/whitenoise/issues/39', 'repository_url': 'https://api.github.com/repos/evansd/whitenoise', 'comments_url': 'https://api.github.com/repos/evansd/whitenoise/issues/39/comments', 'assignee': None, 'closed_at': '2015-08-20T15:59:01Z', 'events_url': 'https://api.github.com/repos/evansd/whitenoise/issues/39/events', 'updated_at': '2015-08-20T15:59:01Z', 'body': 'I\\'m a newbie so forgive me if I made a mistake but I\\'ve triple checked everything and I can\\'t seem to figure out why Gzip compression is not being enabled.\\r\\n\\r\\n**here is an example response header for a css file (from chrome dev-tools):**\\r\\n\\r\\n    HTTP/1.1 304 Not Modified\\r\\n    Content-Length: 0\\r\\n    Connection: keep-alive\\r\\n    Server: gunicorn/19.3.0\\r\\n    Date: Tue, 18 Aug 2015 14:11:07 GMT\\r\\n    Via: 1.1 vegur\\r\\n\\r\\npackage versions:\\r\\nDjango==1.8.3\\r\\ngunicorn==19.3.0\\r\\nwhitenoise==2.0.2\\r\\n\\r\\n**Static files configuration (settings.py)**\\r\\n\\r\\n    BASE_DIR = os.path.dirname(os.path.dirname(__file__))\\r\\n   \\r\\n    STATIC_URL = \\'/static/\\'\\r\\n    STATIC_ROOT = os.path.join(BASE_DIR, \\'staticfiles\\')\\r\\n    \\r\\n    STATICFILES_DIRS = (\\r\\n        os.path.join(BASE_DIR, \"static\"),\\r\\n    )\\r\\n\\r\\n**wsgi.py**\\r\\n    \\r\\n    import os\\r\\n    from django.core.wsgi import get_wsgi_application\\r\\n    \\r\\n    os.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"sikumim.settings\")\\r\\n    \\r\\n    application = get_wsgi_application()\\r\\n    \\r\\n    #HEROKU DEPLOYMENT\\r\\n    \\r\\n    from whitenoise.django import DjangoWhiteNoise\\r\\n    application = DjangoWhiteNoise(application)\\r\\n    \\r\\n    # Fix django closing connection to MemCachier after every request (#11331)\\r\\n    from django.core.cache.backends.memcached import BaseMemcachedCache\\r\\n    BaseMemcachedCache.close = lambda self, **kwargs: None\\r\\n\\r\\n**an example of how I\\'m loading static files in template:**\\r\\n    \\r\\n    {% load staticfiles %}\\r\\n    <link href=\"{% static \"css/base.css\" %}\" rel=\"stylesheet\" type=\"text/css\">\\r\\n\\r\\n**extra production settings for Gzip:**\\r\\n\\r\\n    STATICFILES_STORAGE = \\'whitenoise.django.GzipManifestStaticFilesStorage\\'\\r\\n\\r\\n**Procfile:**\\r\\n\\r\\n    web: gunicorn sikumim.wsgi\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n', 'labels': [], 'number': 39, 'user': {'following_url': 'https://api.github.com/users/davegri/following{/other_user}', 'avatar_url': 'https://avatars.githubusercontent.com/u/13089569?v=3', 'received_events_url': 'https://api.github.com/users/davegri/received_events', 'starred_url': 'https://api.github.com/users/davegri/starred{/owner}{/repo}', 'html_url': 'https://github.com/davegri', 'site_admin': False, 'events_url': 'https://api.github.com/users/davegri/events{/privacy}', 'id': 13089569, 'gravatar_id': '', 'subscriptions_url': 'https://api.github.com/users/davegri/subscriptions', 'organizations_url': 'https://api.github.com/users/davegri/orgs', 'repos_url': 'https://api.github.com/users/davegri/repos', 'type': 'User', 'gists_url': 'https://api.github.com/users/davegri/gists{/gist_id}', 'url': 'https://api.github.com/users/davegri', 'login': 'davegri', 'followers_url': 'https://api.github.com/users/davegri/followers'}, 'labels_url': 'https://api.github.com/repos/evansd/whitenoise/issues/39/labels{/name}', 'url': 'https://api.github.com/repos/evansd/whitenoise/issues/39', 'title': 'Gzip compression not being enabled', 'comments': 2}"}}, {"model": "issues.issue", "pk": 35, "fields": {"created": "2016-02-21T03:05:16.562Z", "modified": "2016-02-21T03:05:16.562Z", "number": 38, "title": "Compression not working", "body": "Hey guys. I hope you can help.\r\n\r\nI have a setup running Django Pipeline with Django Whitenoise and everything seems to be working, but it doesn't. The gz files are generated perfectly, but it seems like whitenoise isn't serving the correct headers and thus, the browser doesn't fetch the gz files.\r\n\r\nMy setup is as follows\r\n```\r\nSTATICFILES_STORAGE = 'sonofatailor.cached_storage.GzipManifestPipelineStorage'\r\n```\r\nwhere the storage class is defined as follows\r\n\r\n```\r\nfrom pipeline.storage import PipelineMixin\r\nfrom whitenoise.django import GzipManifestStaticFilesStorage\r\n\r\nclass GzipManifestPipelineStorage(PipelineMixin, GzipManifestStaticFilesStorage):\r\n    pass\r\n```\r\n\r\nThis part seems to work great as stated above, and all the correct gz files are stored along side the other files\r\n\r\nMy wsgi.py looks lige this\r\n\r\n```\r\nimport os\r\nos.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"config.settings.prod\")\r\n\r\nfrom django.core.wsgi import get_wsgi_application\r\nfrom whitenoise.django import DjangoWhiteNoise\r\n\r\napplication = get_wsgi_application()\r\napplication = DjangoWhiteNoise(application)\r\n```\r\n\r\nAnd i run my application through apache with\r\n\r\n```\r\n[\"python\", \"sonofatailorapp/manage_prod.py\", \"runmodwsgi\", \"config.wsgi\", \"--port=80\", \"--log-to-terminal\", \"--startup-log\"]\r\n```\r\n\r\nwhere manage_prod.py looks like\r\n\r\n```\r\nimport os\r\nimport sys\r\n\r\nif __name__ == \"__main__\":\r\n    os.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"config.settings.prod\")\r\n\r\n    from django.core.management import execute_from_command_line\r\n\r\n    execute_from_command_line(sys.argv)\r\n```\r\n\r\nCan anybody spot, what i'm doing wrong ? \r\n\r\nThe page is here http://107.178.250.104/ \r\n\r\nand you can test that the gz file is there and available here\r\n\r\nhttp://107.178.250.104/static/scripts_dist/common.min.b947a82fca17.js\r\nhttp://107.178.250.104/static/scripts_dist/common.min.b947a82fca17.js.gz", "repo_owner": "evansd", "repo": "whitenoise", "raw": "{'created_at': '2015-07-21T14:24:18Z', 'locked': False, 'state': 'closed', 'milestone': None, 'id': 96328605, 'html_url': 'https://github.com/evansd/whitenoise/issues/38', 'repository_url': 'https://api.github.com/repos/evansd/whitenoise', 'comments_url': 'https://api.github.com/repos/evansd/whitenoise/issues/38/comments', 'assignee': None, 'closed_at': '2015-07-21T18:06:59Z', 'events_url': 'https://api.github.com/repos/evansd/whitenoise/issues/38/events', 'updated_at': '2015-07-21T18:06:59Z', 'body': 'Hey guys. I hope you can help.\\r\\n\\r\\nI have a setup running Django Pipeline with Django Whitenoise and everything seems to be working, but it doesn\\'t. The gz files are generated perfectly, but it seems like whitenoise isn\\'t serving the correct headers and thus, the browser doesn\\'t fetch the gz files.\\r\\n\\r\\nMy setup is as follows\\r\\n```\\r\\nSTATICFILES_STORAGE = \\'sonofatailor.cached_storage.GzipManifestPipelineStorage\\'\\r\\n```\\r\\nwhere the storage class is defined as follows\\r\\n\\r\\n```\\r\\nfrom pipeline.storage import PipelineMixin\\r\\nfrom whitenoise.django import GzipManifestStaticFilesStorage\\r\\n\\r\\nclass GzipManifestPipelineStorage(PipelineMixin, GzipManifestStaticFilesStorage):\\r\\n    pass\\r\\n```\\r\\n\\r\\nThis part seems to work great as stated above, and all the correct gz files are stored along side the other files\\r\\n\\r\\nMy wsgi.py looks lige this\\r\\n\\r\\n```\\r\\nimport os\\r\\nos.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"config.settings.prod\")\\r\\n\\r\\nfrom django.core.wsgi import get_wsgi_application\\r\\nfrom whitenoise.django import DjangoWhiteNoise\\r\\n\\r\\napplication = get_wsgi_application()\\r\\napplication = DjangoWhiteNoise(application)\\r\\n```\\r\\n\\r\\nAnd i run my application through apache with\\r\\n\\r\\n```\\r\\n[\"python\", \"sonofatailorapp/manage_prod.py\", \"runmodwsgi\", \"config.wsgi\", \"--port=80\", \"--log-to-terminal\", \"--startup-log\"]\\r\\n```\\r\\n\\r\\nwhere manage_prod.py looks like\\r\\n\\r\\n```\\r\\nimport os\\r\\nimport sys\\r\\n\\r\\nif __name__ == \"__main__\":\\r\\n    os.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"config.settings.prod\")\\r\\n\\r\\n    from django.core.management import execute_from_command_line\\r\\n\\r\\n    execute_from_command_line(sys.argv)\\r\\n```\\r\\n\\r\\nCan anybody spot, what i\\'m doing wrong ? \\r\\n\\r\\nThe page is here http://107.178.250.104/ \\r\\n\\r\\nand you can test that the gz file is there and available here\\r\\n\\r\\nhttp://107.178.250.104/static/scripts_dist/common.min.b947a82fca17.js\\r\\nhttp://107.178.250.104/static/scripts_dist/common.min.b947a82fca17.js.gz', 'labels': [], 'number': 38, 'user': {'following_url': 'https://api.github.com/users/jakobholmelund/following{/other_user}', 'avatar_url': 'https://avatars.githubusercontent.com/u/244930?v=3', 'received_events_url': 'https://api.github.com/users/jakobholmelund/received_events', 'starred_url': 'https://api.github.com/users/jakobholmelund/starred{/owner}{/repo}', 'html_url': 'https://github.com/jakobholmelund', 'site_admin': False, 'events_url': 'https://api.github.com/users/jakobholmelund/events{/privacy}', 'id': 244930, 'gravatar_id': '', 'subscriptions_url': 'https://api.github.com/users/jakobholmelund/subscriptions', 'organizations_url': 'https://api.github.com/users/jakobholmelund/orgs', 'repos_url': 'https://api.github.com/users/jakobholmelund/repos', 'type': 'User', 'gists_url': 'https://api.github.com/users/jakobholmelund/gists{/gist_id}', 'url': 'https://api.github.com/users/jakobholmelund', 'login': 'jakobholmelund', 'followers_url': 'https://api.github.com/users/jakobholmelund/followers'}, 'labels_url': 'https://api.github.com/repos/evansd/whitenoise/issues/38/labels{/name}', 'url': 'https://api.github.com/repos/evansd/whitenoise/issues/38', 'title': 'Compression not working', 'comments': 6}"}}, {"model": "issues.issue", "pk": 36, "fields": {"created": "2016-02-21T03:05:17.317Z", "modified": "2016-02-21T03:05:17.317Z", "number": 37, "title": "ValueError files not found", "body": "I get a 500 (404?) error when trying to use whitenoise locally.\r\n\r\n```\r\nValueError: The file 'css/bootstrap.css' could not be found with <whitenoise.django.GzipManifestStaticFilesStorage object at 0x10b13c050>.\r\n```\r\n\r\nWhenever `DEBUG` is `True`, everything works fine. When it's `False`, everything blows up. My static settings:\r\n\r\n```\r\nSTATICFILES_DIRS = (\r\n    os.path.join(BASE_DIR, 'static',),\r\n)\r\nSTATIC_URL = '/static/'\r\nSTATIC_ROOT = 'staticfiles'\r\nSTATICFILES_STORAGE = 'whitenoise.django.GzipManifestStaticFilesStorage'\r\n```", "repo_owner": "evansd", "repo": "whitenoise", "raw": "{'created_at': '2015-07-20T07:08:17Z', 'locked': False, 'state': 'closed', 'milestone': None, 'id': 96000850, 'html_url': 'https://github.com/evansd/whitenoise/issues/37', 'repository_url': 'https://api.github.com/repos/evansd/whitenoise', 'comments_url': 'https://api.github.com/repos/evansd/whitenoise/issues/37/comments', 'assignee': None, 'closed_at': '2015-07-20T16:55:24Z', 'events_url': 'https://api.github.com/repos/evansd/whitenoise/issues/37/events', 'updated_at': '2015-07-20T16:55:24Z', 'body': \"I get a 500 (404?) error when trying to use whitenoise locally.\\r\\n\\r\\n```\\r\\nValueError: The file 'css/bootstrap.css' could not be found with <whitenoise.django.GzipManifestStaticFilesStorage object at 0x10b13c050>.\\r\\n```\\r\\n\\r\\nWhenever `DEBUG` is `True`, everything works fine. When it's `False`, everything blows up. My static settings:\\r\\n\\r\\n```\\r\\nSTATICFILES_DIRS = (\\r\\n    os.path.join(BASE_DIR, 'static',),\\r\\n)\\r\\nSTATIC_URL = '/static/'\\r\\nSTATIC_ROOT = 'staticfiles'\\r\\nSTATICFILES_STORAGE = 'whitenoise.django.GzipManifestStaticFilesStorage'\\r\\n```\", 'labels': [], 'number': 37, 'user': {'following_url': 'https://api.github.com/users/richardcornish/following{/other_user}', 'avatar_url': 'https://avatars.githubusercontent.com/u/76278?v=3', 'received_events_url': 'https://api.github.com/users/richardcornish/received_events', 'starred_url': 'https://api.github.com/users/richardcornish/starred{/owner}{/repo}', 'html_url': 'https://github.com/richardcornish', 'site_admin': False, 'events_url': 'https://api.github.com/users/richardcornish/events{/privacy}', 'id': 76278, 'gravatar_id': '', 'subscriptions_url': 'https://api.github.com/users/richardcornish/subscriptions', 'organizations_url': 'https://api.github.com/users/richardcornish/orgs', 'repos_url': 'https://api.github.com/users/richardcornish/repos', 'type': 'User', 'gists_url': 'https://api.github.com/users/richardcornish/gists{/gist_id}', 'url': 'https://api.github.com/users/richardcornish', 'login': 'richardcornish', 'followers_url': 'https://api.github.com/users/richardcornish/followers'}, 'labels_url': 'https://api.github.com/repos/evansd/whitenoise/issues/37/labels{/name}', 'url': 'https://api.github.com/repos/evansd/whitenoise/issues/37', 'title': 'ValueError files not found', 'comments': 2}"}}, {"model": "issues.issue", "pk": 37, "fields": {"created": "2016-02-21T03:05:18.061Z", "modified": "2016-02-21T03:05:18.061Z", "number": 36, "title": "2.0 broke STATIC_URL handling in Django for absolute URLs", "body": "Firstly, thanks for Whitenoise, I've really appreciated it.\r\n\r\nI've bumped into a small problem with Whitenoise 2.0. I have the following as my ``STATIC_URL``:\r\n\r\n    STATIC_URL = 'https://static.example.com/'\r\n\r\nThis makes whitenoise fail to load correctly, since get_prefix_url returns ``'/'``, and so you get the odd error (from [here](https://github.com/evansd/whitenoise/blob/39de5e09270b85c43ce994a90c5e8a2e1e284a10/whitenoise/django.py#L70)):\r\n\r\n> Both STATIC_URL and STATIC_ROOT settings must be configured to use DjangoWhiteNoise\r\n\r\nReverting to ``whitenoise==1.0.6`` works. I think the breaking change is 25f5757b41f5d876252dff873ecb88b177793a3e.\r\n\r\nI'm not quite sure what the breaking change was intending to do, so I'm not quite sure what an appropriate patch would be. I think it's something to do with local development based on [the release notes of 2.0](https://github.com/evansd/whitenoise/blob/master/CHANGELOG.rst#v20).", "repo_owner": "evansd", "repo": "whitenoise", "raw": "{'created_at': '2015-07-02T21:13:59Z', 'locked': False, 'state': 'closed', 'milestone': None, 'id': 92737005, 'html_url': 'https://github.com/evansd/whitenoise/issues/36', 'repository_url': 'https://api.github.com/repos/evansd/whitenoise', 'comments_url': 'https://api.github.com/repos/evansd/whitenoise/issues/36/comments', 'assignee': None, 'closed_at': '2015-07-03T09:35:49Z', 'events_url': 'https://api.github.com/repos/evansd/whitenoise/issues/36/events', 'updated_at': '2015-11-19T18:08:23Z', 'body': \"Firstly, thanks for Whitenoise, I've really appreciated it.\\r\\n\\r\\nI've bumped into a small problem with Whitenoise 2.0. I have the following as my ``STATIC_URL``:\\r\\n\\r\\n    STATIC_URL = 'https://static.example.com/'\\r\\n\\r\\nThis makes whitenoise fail to load correctly, since get_prefix_url returns ``'/'``, and so you get the odd error (from [here](https://github.com/evansd/whitenoise/blob/39de5e09270b85c43ce994a90c5e8a2e1e284a10/whitenoise/django.py#L70)):\\r\\n\\r\\n> Both STATIC_URL and STATIC_ROOT settings must be configured to use DjangoWhiteNoise\\r\\n\\r\\nReverting to ``whitenoise==1.0.6`` works. I think the breaking change is 25f5757b41f5d876252dff873ecb88b177793a3e.\\r\\n\\r\\nI'm not quite sure what the breaking change was intending to do, so I'm not quite sure what an appropriate patch would be. I think it's something to do with local development based on [the release notes of 2.0](https://github.com/evansd/whitenoise/blob/master/CHANGELOG.rst#v20).\", 'labels': [], 'number': 36, 'user': {'following_url': 'https://api.github.com/users/dominicrodger/following{/other_user}', 'avatar_url': 'https://avatars.githubusercontent.com/u/1047389?v=3', 'received_events_url': 'https://api.github.com/users/dominicrodger/received_events', 'starred_url': 'https://api.github.com/users/dominicrodger/starred{/owner}{/repo}', 'html_url': 'https://github.com/dominicrodger', 'site_admin': False, 'events_url': 'https://api.github.com/users/dominicrodger/events{/privacy}', 'id': 1047389, 'gravatar_id': '', 'subscriptions_url': 'https://api.github.com/users/dominicrodger/subscriptions', 'organizations_url': 'https://api.github.com/users/dominicrodger/orgs', 'repos_url': 'https://api.github.com/users/dominicrodger/repos', 'type': 'User', 'gists_url': 'https://api.github.com/users/dominicrodger/gists{/gist_id}', 'url': 'https://api.github.com/users/dominicrodger', 'login': 'dominicrodger', 'followers_url': 'https://api.github.com/users/dominicrodger/followers'}, 'labels_url': 'https://api.github.com/repos/evansd/whitenoise/issues/36/labels{/name}', 'url': 'https://api.github.com/repos/evansd/whitenoise/issues/36', 'title': '2.0 broke STATIC_URL handling in Django for absolute URLs', 'comments': 17}"}}, {"model": "issues.issue", "pk": 38, "fields": {"created": "2016-02-21T03:05:18.855Z", "modified": "2016-02-21T03:05:18.855Z", "number": 35, "title": "DEBUG=False not working due to Suffixes", "body": "When using whitenoise in `DEBUG=True`, templates request files like:\r\n`/static/rest_framework/css/bootstrap-tweaks.css`\r\nwhich are properly served up.\r\n\r\nWith  `DEBUG=False` the template requests:\r\n`/static/rest_framework/css/bootstrap-tweaks.964c59eecf05.css` and this file is not properly served.\r\n\r\nWhat is causing this suffix to be inserted?\r\n\r\nWhen I am running with `DEBUG=False` , If I manually navigate to `/static/rest_framework/css/bootstrap-tweaks.css`, the content is served.", "repo_owner": "evansd", "repo": "whitenoise", "raw": "{'created_at': '2015-07-01T18:42:08Z', 'locked': False, 'state': 'closed', 'milestone': None, 'id': 92458198, 'html_url': 'https://github.com/evansd/whitenoise/issues/35', 'repository_url': 'https://api.github.com/repos/evansd/whitenoise', 'comments_url': 'https://api.github.com/repos/evansd/whitenoise/issues/35/comments', 'assignee': None, 'closed_at': '2015-07-01T20:46:10Z', 'events_url': 'https://api.github.com/repos/evansd/whitenoise/issues/35/events', 'updated_at': '2015-07-01T21:25:08Z', 'body': 'When using whitenoise in `DEBUG=True`, templates request files like:\\r\\n`/static/rest_framework/css/bootstrap-tweaks.css`\\r\\nwhich are properly served up.\\r\\n\\r\\nWith  `DEBUG=False` the template requests:\\r\\n`/static/rest_framework/css/bootstrap-tweaks.964c59eecf05.css` and this file is not properly served.\\r\\n\\r\\nWhat is causing this suffix to be inserted?\\r\\n\\r\\nWhen I am running with `DEBUG=False` , If I manually navigate to `/static/rest_framework/css/bootstrap-tweaks.css`, the content is served.', 'labels': [], 'number': 35, 'user': {'following_url': 'https://api.github.com/users/cancan101/following{/other_user}', 'avatar_url': 'https://avatars.githubusercontent.com/u/51059?v=3', 'received_events_url': 'https://api.github.com/users/cancan101/received_events', 'starred_url': 'https://api.github.com/users/cancan101/starred{/owner}{/repo}', 'html_url': 'https://github.com/cancan101', 'site_admin': False, 'events_url': 'https://api.github.com/users/cancan101/events{/privacy}', 'id': 51059, 'gravatar_id': '', 'subscriptions_url': 'https://api.github.com/users/cancan101/subscriptions', 'organizations_url': 'https://api.github.com/users/cancan101/orgs', 'repos_url': 'https://api.github.com/users/cancan101/repos', 'type': 'User', 'gists_url': 'https://api.github.com/users/cancan101/gists{/gist_id}', 'url': 'https://api.github.com/users/cancan101', 'login': 'cancan101', 'followers_url': 'https://api.github.com/users/cancan101/followers'}, 'labels_url': 'https://api.github.com/repos/evansd/whitenoise/issues/35/labels{/name}', 'url': 'https://api.github.com/repos/evansd/whitenoise/issues/35', 'title': 'DEBUG=False not working due to Suffixes', 'comments': 10}"}}, {"model": "issues.issue", "pk": 39, "fields": {"created": "2016-02-21T03:05:19.622Z", "modified": "2016-02-21T03:05:19.622Z", "number": 34, "title": "Collectstatic on heroku with assets not in repo?", "body": "How can I use Whitenoise on Heroku with static assets I don't include in my git repo?\r\n\r\nI install lots of js tools via bower, and try to keep my repo clean by excluding my bower installs (but leaving the bower.json).  This means that those static files are not in the files Heroku sees on push, so collectstatic() can't include them in the manifest.  When I was using django pipeline, I got around this by running collectstatic() with production settings from my local repo (that had the bower installs) and writing to s3.  \r\n\r\nWhat is the best way to proceed?  I guess I could git submodule all of the tools I use, but this would quickly slow down my deploys and make my slug bigger than I desire.  Alternatively, I could include my build artifacts (but not the bower sources) in my repo, but that seems unclean.", "repo_owner": "evansd", "repo": "whitenoise", "raw": "{'created_at': '2015-06-16T15:20:58Z', 'locked': False, 'state': 'open', 'milestone': None, 'id': 88758100, 'html_url': 'https://github.com/evansd/whitenoise/issues/34', 'repository_url': 'https://api.github.com/repos/evansd/whitenoise', 'comments_url': 'https://api.github.com/repos/evansd/whitenoise/issues/34/comments', 'assignee': None, 'closed_at': None, 'events_url': 'https://api.github.com/repos/evansd/whitenoise/issues/34/events', 'updated_at': '2015-10-20T09:33:06Z', 'body': \"How can I use Whitenoise on Heroku with static assets I don't include in my git repo?\\r\\n\\r\\nI install lots of js tools via bower, and try to keep my repo clean by excluding my bower installs (but leaving the bower.json).  This means that those static files are not in the files Heroku sees on push, so collectstatic() can't include them in the manifest.  When I was using django pipeline, I got around this by running collectstatic() with production settings from my local repo (that had the bower installs) and writing to s3.  \\r\\n\\r\\nWhat is the best way to proceed?  I guess I could git submodule all of the tools I use, but this would quickly slow down my deploys and make my slug bigger than I desire.  Alternatively, I could include my build artifacts (but not the bower sources) in my repo, but that seems unclean.\", 'labels': [], 'number': 34, 'user': {'following_url': 'https://api.github.com/users/bwarren2/following{/other_user}', 'avatar_url': 'https://avatars.githubusercontent.com/u/1693541?v=3', 'received_events_url': 'https://api.github.com/users/bwarren2/received_events', 'starred_url': 'https://api.github.com/users/bwarren2/starred{/owner}{/repo}', 'html_url': 'https://github.com/bwarren2', 'site_admin': False, 'events_url': 'https://api.github.com/users/bwarren2/events{/privacy}', 'id': 1693541, 'gravatar_id': '', 'subscriptions_url': 'https://api.github.com/users/bwarren2/subscriptions', 'organizations_url': 'https://api.github.com/users/bwarren2/orgs', 'repos_url': 'https://api.github.com/users/bwarren2/repos', 'type': 'User', 'gists_url': 'https://api.github.com/users/bwarren2/gists{/gist_id}', 'url': 'https://api.github.com/users/bwarren2', 'login': 'bwarren2', 'followers_url': 'https://api.github.com/users/bwarren2/followers'}, 'labels_url': 'https://api.github.com/repos/evansd/whitenoise/issues/34/labels{/name}', 'url': 'https://api.github.com/repos/evansd/whitenoise/issues/34', 'title': 'Collectstatic on heroku with assets not in repo?', 'comments': 6}"}}, {"model": "issues.issue", "pk": 40, "fields": {"created": "2016-02-21T03:05:20.382Z", "modified": "2016-02-21T03:05:20.383Z", "number": 33, "title": "Enable debug reloading", "body": "Hiya,\r\n\r\nI'm a fan of whitenoise and its approach, but for a few reasons I wound up needing to be able to handle some staticserver-related stuff without reloading the server every time, and personally speaking I don't like making django (even in development) handle serving static/media. I'm definitely aware this isn't 100% the norm, but figured I'd throw my changes over as a pull request anyway.\r\n\r\nThis does a few things:\r\n- Try to use **[scandir/walk](https://github.com/benhoyt/scandir)** if possible; it's in Python 3.5, and available as a module in Python 2.6+. According to the author of `scandir` it's faster than `os.walk`, and was merged into 3.5 as a result/overhaul. Falls back to `os.walk` if the user happens to not have it.\r\n- If the server is in debug mode (e.g, specifically, if Django is in development mode) and a check for a file in `self.files` fails, it'll re-scan to see if the file was recently added (just requires setting `WHITENOISE_DEBUG` in `settings.py`, which I just pointed at `DEBUG`).\r\n\r\nAt least for my needs, this isn't intrusive at all and has worked out pretty well so far. While I'm developing it's been much more pleasant to use than the builtin static serving stuff, and in production it functions more or less as originally authored.\r\n\r\nI theorize that even if WHITENOISE_DEBUG was set in production with a CDN tossed in front of it that things would likely still run fine, but I've not tested it yet - no real incentive to and haven't thought said theory all the way through. Hope this is something that others would find useful!", "repo_owner": "evansd", "repo": "whitenoise", "raw": "{'created_at': '2015-05-26T08:15:47Z', 'locked': False, 'state': 'closed', 'milestone': None, 'pull_request': {'html_url': 'https://github.com/evansd/whitenoise/pull/33', 'diff_url': 'https://github.com/evansd/whitenoise/pull/33.diff', 'url': 'https://api.github.com/repos/evansd/whitenoise/pulls/33', 'patch_url': 'https://github.com/evansd/whitenoise/pull/33.patch'}, 'id': 80852654, 'html_url': 'https://github.com/evansd/whitenoise/pull/33', 'repository_url': 'https://api.github.com/repos/evansd/whitenoise', 'comments_url': 'https://api.github.com/repos/evansd/whitenoise/issues/33/comments', 'assignee': None, 'closed_at': '2015-06-20T11:41:48Z', 'events_url': 'https://api.github.com/repos/evansd/whitenoise/issues/33/events', 'updated_at': '2015-06-20T11:41:48Z', 'body': \"Hiya,\\r\\n\\r\\nI'm a fan of whitenoise and its approach, but for a few reasons I wound up needing to be able to handle some staticserver-related stuff without reloading the server every time, and personally speaking I don't like making django (even in development) handle serving static/media. I'm definitely aware this isn't 100% the norm, but figured I'd throw my changes over as a pull request anyway.\\r\\n\\r\\nThis does a few things:\\r\\n- Try to use **[scandir/walk](https://github.com/benhoyt/scandir)** if possible; it's in Python 3.5, and available as a module in Python 2.6+. According to the author of `scandir` it's faster than `os.walk`, and was merged into 3.5 as a result/overhaul. Falls back to `os.walk` if the user happens to not have it.\\r\\n- If the server is in debug mode (e.g, specifically, if Django is in development mode) and a check for a file in `self.files` fails, it'll re-scan to see if the file was recently added (just requires setting `WHITENOISE_DEBUG` in `settings.py`, which I just pointed at `DEBUG`).\\r\\n\\r\\nAt least for my needs, this isn't intrusive at all and has worked out pretty well so far. While I'm developing it's been much more pleasant to use than the builtin static serving stuff, and in production it functions more or less as originally authored.\\r\\n\\r\\nI theorize that even if WHITENOISE_DEBUG was set in production with a CDN tossed in front of it that things would likely still run fine, but I've not tested it yet - no real incentive to and haven't thought said theory all the way through. Hope this is something that others would find useful!\", 'labels': [], 'number': 33, 'user': {'following_url': 'https://api.github.com/users/ryanmcgrath/following{/other_user}', 'avatar_url': 'https://avatars.githubusercontent.com/u/22712?v=3', 'received_events_url': 'https://api.github.com/users/ryanmcgrath/received_events', 'starred_url': 'https://api.github.com/users/ryanmcgrath/starred{/owner}{/repo}', 'html_url': 'https://github.com/ryanmcgrath', 'site_admin': False, 'events_url': 'https://api.github.com/users/ryanmcgrath/events{/privacy}', 'id': 22712, 'gravatar_id': '', 'subscriptions_url': 'https://api.github.com/users/ryanmcgrath/subscriptions', 'organizations_url': 'https://api.github.com/users/ryanmcgrath/orgs', 'repos_url': 'https://api.github.com/users/ryanmcgrath/repos', 'type': 'User', 'gists_url': 'https://api.github.com/users/ryanmcgrath/gists{/gist_id}', 'url': 'https://api.github.com/users/ryanmcgrath', 'login': 'ryanmcgrath', 'followers_url': 'https://api.github.com/users/ryanmcgrath/followers'}, 'labels_url': 'https://api.github.com/repos/evansd/whitenoise/issues/33/labels{/name}', 'url': 'https://api.github.com/repos/evansd/whitenoise/issues/33', 'title': 'Enable debug reloading', 'comments': 4}"}}, {"model": "issues.issue", "pk": 41, "fields": {"created": "2016-02-21T03:05:21.101Z", "modified": "2016-02-21T03:05:21.101Z", "number": 32, "title": "Serving media files", "body": "Is there any option in DjangoWhiteNoise to serve media files like MediaCling of dj-static?", "repo_owner": "evansd", "repo": "whitenoise", "raw": "{'created_at': '2015-05-23T06:34:44Z', 'locked': False, 'state': 'closed', 'milestone': None, 'id': 79752508, 'html_url': 'https://github.com/evansd/whitenoise/issues/32', 'repository_url': 'https://api.github.com/repos/evansd/whitenoise', 'comments_url': 'https://api.github.com/repos/evansd/whitenoise/issues/32/comments', 'assignee': None, 'closed_at': '2015-05-23T07:10:12Z', 'events_url': 'https://api.github.com/repos/evansd/whitenoise/issues/32/events', 'updated_at': '2016-01-07T16:30:57Z', 'body': 'Is there any option in DjangoWhiteNoise to serve media files like MediaCling of dj-static?', 'labels': [], 'number': 32, 'user': {'following_url': 'https://api.github.com/users/moonstruck/following{/other_user}', 'avatar_url': 'https://avatars.githubusercontent.com/u/127849?v=3', 'received_events_url': 'https://api.github.com/users/moonstruck/received_events', 'starred_url': 'https://api.github.com/users/moonstruck/starred{/owner}{/repo}', 'html_url': 'https://github.com/moonstruck', 'site_admin': False, 'events_url': 'https://api.github.com/users/moonstruck/events{/privacy}', 'id': 127849, 'gravatar_id': '', 'subscriptions_url': 'https://api.github.com/users/moonstruck/subscriptions', 'organizations_url': 'https://api.github.com/users/moonstruck/orgs', 'repos_url': 'https://api.github.com/users/moonstruck/repos', 'type': 'User', 'gists_url': 'https://api.github.com/users/moonstruck/gists{/gist_id}', 'url': 'https://api.github.com/users/moonstruck', 'login': 'moonstruck', 'followers_url': 'https://api.github.com/users/moonstruck/followers'}, 'labels_url': 'https://api.github.com/repos/evansd/whitenoise/issues/32/labels{/name}', 'url': 'https://api.github.com/repos/evansd/whitenoise/issues/32', 'title': 'Serving media files', 'comments': 3}"}}, {"model": "issues.issue", "pk": 42, "fields": {"created": "2016-02-21T03:06:23.133Z", "modified": "2016-02-21T03:06:23.133Z", "number": 31, "title": "UWSGI and Whitenoise", "body": "Hello,\r\n\r\nI am running 2 docker containers: 1) nginx proxy and 2) uwsgi with my django 1.8 app.\r\nI have to solve the static files issue since nginx normally handles the static files so I found whitenoise.\r\nI followed the simple howto and changed my wsgi.py:\r\n```\r\nimport os\r\n\r\nfrom django.core.wsgi import get_wsgi_application\r\nfrom whitenoise.django import DjangoWhiteNoise\r\n\r\nos.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"ironman.settings\")\r\n#os.environ(\"DJANGO_SETTINGS_MODULE\", \"ironman.settings\")\r\n\r\napplication = get_wsgi_application()\r\napplication = DjangoWhiteNoise(application)\r\n```\r\n\r\nand my settings.py:\r\n\r\n```\r\nWSGI_APPLICATION = 'ironman.wsgi.application'\r\nBASE_DIR = os.path.dirname(os.path.abspath(__file__))\r\nSTATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')\r\nSTATIC_URL = '/static/'\r\n\r\nSTATICFILES_DIRS = (\r\n    os.path.join(BASE_DIR, 'static'),\r\n)\r\n```\r\nAnd I loaded the staticcontent app:\r\n\r\n```\r\n    'django.contrib.staticfiles',\r\n```\r\n\r\nThe error I am getting from UWSGI:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"./ironman/wsgi.py\", line 13, in <module>\r\n    from whitenoise.django import DjangoWhiteNoise\r\n  File \"/usr/local/lib/python2.7/dist-packages/whitenoise/django.py\", line 14, in <module>\r\n    from django.contrib.staticfiles.storage import staticfiles_storage\r\n  File \"/usr/local/lib/python2.7/dist-packages/django/contrib/staticfiles/storage.py\", line 12, in <module>\r\n    from django.core.cache import (\r\n  File \"/usr/local/lib/python2.7/dist-packages/django/core/cache/__init__.py\", line 34, in <module>\r\n    if DEFAULT_CACHE_ALIAS not in settings.CACHES:\r\n  File \"/usr/local/lib/python2.7/dist-packages/django/conf/__init__.py\", line 48, in __getattr__\r\n    self._setup(name)\r\n  File \"/usr/local/lib/python2.7/dist-packages/django/conf/__init__.py\", line 42, in _setup\r\n    % (desc, ENVIRONMENT_VARIABLE))\r\ndjango.core.exceptions.ImproperlyConfigured: Requested setting CACHES, but settings are not configured. You must either define the environment variable DJANGO_SETTING\r\nS_MODULE or call settings.configure() before accessing settings.\r\n```\r\n\r\nI've tried setting the CACHES and DEFAULT_CACHE_ALIAS  in my settings.py but to no effect.\r\n\r\nWhat am I doing wrong?\r\n\r\nThanks for all the help.\r\n\r\nMichiel", "repo_owner": "evansd", "repo": "whitenoise", "raw": "{'created_at': '2015-05-21T08:29:09Z', 'locked': False, 'state': 'closed', 'milestone': None, 'id': 78890121, 'html_url': 'https://github.com/evansd/whitenoise/issues/31', 'repository_url': 'https://api.github.com/repos/evansd/whitenoise', 'comments_url': 'https://api.github.com/repos/evansd/whitenoise/issues/31/comments', 'assignee': None, 'closed_at': '2015-05-21T09:03:25Z', 'events_url': 'https://api.github.com/repos/evansd/whitenoise/issues/31/events', 'updated_at': '2015-06-28T20:09:31Z', 'body': 'Hello,\\r\\n\\r\\nI am running 2 docker containers: 1) nginx proxy and 2) uwsgi with my django 1.8 app.\\r\\nI have to solve the static files issue since nginx normally handles the static files so I found whitenoise.\\r\\nI followed the simple howto and changed my wsgi.py:\\r\\n```\\r\\nimport os\\r\\n\\r\\nfrom django.core.wsgi import get_wsgi_application\\r\\nfrom whitenoise.django import DjangoWhiteNoise\\r\\n\\r\\nos.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"ironman.settings\")\\r\\n#os.environ(\"DJANGO_SETTINGS_MODULE\", \"ironman.settings\")\\r\\n\\r\\napplication = get_wsgi_application()\\r\\napplication = DjangoWhiteNoise(application)\\r\\n```\\r\\n\\r\\nand my settings.py:\\r\\n\\r\\n```\\r\\nWSGI_APPLICATION = \\'ironman.wsgi.application\\'\\r\\nBASE_DIR = os.path.dirname(os.path.abspath(__file__))\\r\\nSTATIC_ROOT = os.path.join(BASE_DIR, \\'staticfiles\\')\\r\\nSTATIC_URL = \\'/static/\\'\\r\\n\\r\\nSTATICFILES_DIRS = (\\r\\n    os.path.join(BASE_DIR, \\'static\\'),\\r\\n)\\r\\n```\\r\\nAnd I loaded the staticcontent app:\\r\\n\\r\\n```\\r\\n    \\'django.contrib.staticfiles\\',\\r\\n```\\r\\n\\r\\nThe error I am getting from UWSGI:\\r\\n\\r\\n```\\r\\nTraceback (most recent call last):\\r\\n  File \"./ironman/wsgi.py\", line 13, in <module>\\r\\n    from whitenoise.django import DjangoWhiteNoise\\r\\n  File \"/usr/local/lib/python2.7/dist-packages/whitenoise/django.py\", line 14, in <module>\\r\\n    from django.contrib.staticfiles.storage import staticfiles_storage\\r\\n  File \"/usr/local/lib/python2.7/dist-packages/django/contrib/staticfiles/storage.py\", line 12, in <module>\\r\\n    from django.core.cache import (\\r\\n  File \"/usr/local/lib/python2.7/dist-packages/django/core/cache/__init__.py\", line 34, in <module>\\r\\n    if DEFAULT_CACHE_ALIAS not in settings.CACHES:\\r\\n  File \"/usr/local/lib/python2.7/dist-packages/django/conf/__init__.py\", line 48, in __getattr__\\r\\n    self._setup(name)\\r\\n  File \"/usr/local/lib/python2.7/dist-packages/django/conf/__init__.py\", line 42, in _setup\\r\\n    % (desc, ENVIRONMENT_VARIABLE))\\r\\ndjango.core.exceptions.ImproperlyConfigured: Requested setting CACHES, but settings are not configured. You must either define the environment variable DJANGO_SETTING\\r\\nS_MODULE or call settings.configure() before accessing settings.\\r\\n```\\r\\n\\r\\nI\\'ve tried setting the CACHES and DEFAULT_CACHE_ALIAS  in my settings.py but to no effect.\\r\\n\\r\\nWhat am I doing wrong?\\r\\n\\r\\nThanks for all the help.\\r\\n\\r\\nMichiel', 'labels': [], 'number': 31, 'user': {'following_url': 'https://api.github.com/users/chiel1980/following{/other_user}', 'avatar_url': 'https://avatars.githubusercontent.com/u/5485100?v=3', 'received_events_url': 'https://api.github.com/users/chiel1980/received_events', 'starred_url': 'https://api.github.com/users/chiel1980/starred{/owner}{/repo}', 'html_url': 'https://github.com/chiel1980', 'site_admin': False, 'events_url': 'https://api.github.com/users/chiel1980/events{/privacy}', 'id': 5485100, 'gravatar_id': '', 'subscriptions_url': 'https://api.github.com/users/chiel1980/subscriptions', 'organizations_url': 'https://api.github.com/users/chiel1980/orgs', 'repos_url': 'https://api.github.com/users/chiel1980/repos', 'type': 'User', 'gists_url': 'https://api.github.com/users/chiel1980/gists{/gist_id}', 'url': 'https://api.github.com/users/chiel1980', 'login': 'chiel1980', 'followers_url': 'https://api.github.com/users/chiel1980/followers'}, 'labels_url': 'https://api.github.com/repos/evansd/whitenoise/issues/31/labels{/name}', 'url': 'https://api.github.com/repos/evansd/whitenoise/issues/31', 'title': 'UWSGI and Whitenoise', 'comments': 5}"}}, {"model": "issues.issue", "pk": 43, "fields": {"created": "2016-02-21T03:06:23.907Z", "modified": "2016-02-21T03:06:23.907Z", "number": 30, "title": "Fix README typo", "body": "", "repo_owner": "evansd", "repo": "whitenoise", "raw": "{'created_at': '2015-05-06T12:07:37Z', 'locked': False, 'state': 'closed', 'milestone': None, 'pull_request': {'html_url': 'https://github.com/evansd/whitenoise/pull/30', 'diff_url': 'https://github.com/evansd/whitenoise/pull/30.diff', 'url': 'https://api.github.com/repos/evansd/whitenoise/pulls/30', 'patch_url': 'https://github.com/evansd/whitenoise/pull/30.patch'}, 'id': 73597220, 'html_url': 'https://github.com/evansd/whitenoise/pull/30', 'repository_url': 'https://api.github.com/repos/evansd/whitenoise', 'comments_url': 'https://api.github.com/repos/evansd/whitenoise/issues/30/comments', 'assignee': None, 'closed_at': '2015-05-06T12:10:05Z', 'events_url': 'https://api.github.com/repos/evansd/whitenoise/issues/30/events', 'updated_at': '2015-05-06T12:10:05Z', 'body': '', 'labels': [], 'number': 30, 'user': {'following_url': 'https://api.github.com/users/graingert/following{/other_user}', 'avatar_url': 'https://avatars.githubusercontent.com/u/413772?v=3', 'received_events_url': 'https://api.github.com/users/graingert/received_events', 'starred_url': 'https://api.github.com/users/graingert/starred{/owner}{/repo}', 'html_url': 'https://github.com/graingert', 'site_admin': False, 'events_url': 'https://api.github.com/users/graingert/events{/privacy}', 'id': 413772, 'gravatar_id': '', 'subscriptions_url': 'https://api.github.com/users/graingert/subscriptions', 'organizations_url': 'https://api.github.com/users/graingert/orgs', 'repos_url': 'https://api.github.com/users/graingert/repos', 'type': 'User', 'gists_url': 'https://api.github.com/users/graingert/gists{/gist_id}', 'url': 'https://api.github.com/users/graingert', 'login': 'graingert', 'followers_url': 'https://api.github.com/users/graingert/followers'}, 'labels_url': 'https://api.github.com/repos/evansd/whitenoise/issues/30/labels{/name}', 'url': 'https://api.github.com/repos/evansd/whitenoise/issues/30', 'title': 'Fix README typo', 'comments': 0}"}}, {"model": "issues.issue", "pk": 44, "fields": {"created": "2016-02-21T03:06:24.616Z", "modified": "2016-02-21T03:06:24.616Z", "number": 29, "title": "Compress/Pre-compiler Documentation", "body": "Would love to see some documentation on how to get this to work with django compressor and SCSS or LESS precompilers. ", "repo_owner": "evansd", "repo": "whitenoise", "raw": "{'created_at': '2015-03-04T23:18:22Z', 'locked': False, 'state': 'closed', 'milestone': None, 'id': 59878918, 'html_url': 'https://github.com/evansd/whitenoise/issues/29', 'repository_url': 'https://api.github.com/repos/evansd/whitenoise', 'comments_url': 'https://api.github.com/repos/evansd/whitenoise/issues/29/comments', 'assignee': None, 'closed_at': '2016-02-12T10:49:42Z', 'events_url': 'https://api.github.com/repos/evansd/whitenoise/issues/29/events', 'updated_at': '2016-02-12T10:52:02Z', 'body': 'Would love to see some documentation on how to get this to work with django compressor and SCSS or LESS precompilers. ', 'labels': [], 'number': 29, 'user': {'following_url': 'https://api.github.com/users/northborn/following{/other_user}', 'avatar_url': 'https://avatars.githubusercontent.com/u/419899?v=3', 'received_events_url': 'https://api.github.com/users/northborn/received_events', 'starred_url': 'https://api.github.com/users/northborn/starred{/owner}{/repo}', 'html_url': 'https://github.com/northborn', 'site_admin': False, 'events_url': 'https://api.github.com/users/northborn/events{/privacy}', 'id': 419899, 'gravatar_id': '', 'subscriptions_url': 'https://api.github.com/users/northborn/subscriptions', 'organizations_url': 'https://api.github.com/users/northborn/orgs', 'repos_url': 'https://api.github.com/users/northborn/repos', 'type': 'User', 'gists_url': 'https://api.github.com/users/northborn/gists{/gist_id}', 'url': 'https://api.github.com/users/northborn', 'login': 'northborn', 'followers_url': 'https://api.github.com/users/northborn/followers'}, 'labels_url': 'https://api.github.com/repos/evansd/whitenoise/issues/29/labels{/name}', 'url': 'https://api.github.com/repos/evansd/whitenoise/issues/29', 'title': 'Compress/Pre-compiler Documentation', 'comments': 5}"}}, {"model": "issues.issue", "pk": 45, "fields": {"created": "2016-02-21T03:06:25.391Z", "modified": "2016-02-21T03:06:25.391Z", "number": 28, "title": "Example with Bottle?", "body": "I am using [bottle](http://bottlepy.org) on Heroku. Heroku recommends your project for static file serving from a Python app.\r\n\r\nLooking at your WSGI example, I am unsure how well it can be integrated. I am using [gunicorn](http://gunicorn.org) as my server.", "repo_owner": "evansd", "repo": "whitenoise", "raw": "{'created_at': '2015-02-14T14:36:26Z', 'locked': False, 'state': 'closed', 'milestone': None, 'id': 57694879, 'html_url': 'https://github.com/evansd/whitenoise/issues/28', 'repository_url': 'https://api.github.com/repos/evansd/whitenoise', 'comments_url': 'https://api.github.com/repos/evansd/whitenoise/issues/28/comments', 'assignee': None, 'closed_at': '2015-02-17T10:06:27Z', 'events_url': 'https://api.github.com/repos/evansd/whitenoise/issues/28/events', 'updated_at': '2015-02-21T08:32:32Z', 'body': 'I am using [bottle](http://bottlepy.org) on Heroku. Heroku recommends your project for static file serving from a Python app.\\r\\n\\r\\nLooking at your WSGI example, I am unsure how well it can be integrated. I am using [gunicorn](http://gunicorn.org) as my server.', 'labels': [], 'number': 28, 'user': {'following_url': 'https://api.github.com/users/AlecTaylor/following{/other_user}', 'avatar_url': 'https://avatars.githubusercontent.com/u/212027?v=3', 'received_events_url': 'https://api.github.com/users/AlecTaylor/received_events', 'starred_url': 'https://api.github.com/users/AlecTaylor/starred{/owner}{/repo}', 'html_url': 'https://github.com/AlecTaylor', 'site_admin': False, 'events_url': 'https://api.github.com/users/AlecTaylor/events{/privacy}', 'id': 212027, 'gravatar_id': '', 'subscriptions_url': 'https://api.github.com/users/AlecTaylor/subscriptions', 'organizations_url': 'https://api.github.com/users/AlecTaylor/orgs', 'repos_url': 'https://api.github.com/users/AlecTaylor/repos', 'type': 'User', 'gists_url': 'https://api.github.com/users/AlecTaylor/gists{/gist_id}', 'url': 'https://api.github.com/users/AlecTaylor', 'login': 'AlecTaylor', 'followers_url': 'https://api.github.com/users/AlecTaylor/followers'}, 'labels_url': 'https://api.github.com/repos/evansd/whitenoise/issues/28/labels{/name}', 'url': 'https://api.github.com/repos/evansd/whitenoise/issues/28', 'title': 'Example with Bottle?', 'comments': 3}"}}, {"model": "issues.issue", "pk": 46, "fields": {"created": "2016-02-21T03:06:26.163Z", "modified": "2016-02-21T03:06:26.163Z", "number": 27, "title": "make_helpful_exception() in whitenoise.django.py produces AttributeError: 'ValueError' object has no attribute 'message'", "body": "The code in make_helpful_exception() assumes the existence of the \"message\" attribute of the BaseException class.  That attribute was deprecated in Python 2.6 and removed in Python 3.  The exception message is now referenced in args.\r\n\r\nHere is the applicable line of whitenoise.django.py (line 135):\r\n\r\nmatch = self.ERROR_MSG_RE.search(exception.message)\r\n\r\nFrom your documentation, it doesn't look like Whitenoise intends to support Python versions older than 2.7, so fixing the problem should be as easy as changing the line to this:\r\n\r\nmatch = self.ERROR_MSG_RE.search(exception.args[0])\r\n\r\n...and making the same alteration a few lines later:\r\n\r\norig_message=exception.args[0]\r\n", "repo_owner": "evansd", "repo": "whitenoise", "raw": "{'created_at': '2014-12-11T22:19:56Z', 'locked': False, 'state': 'closed', 'milestone': None, 'id': 51746095, 'html_url': 'https://github.com/evansd/whitenoise/issues/27', 'repository_url': 'https://api.github.com/repos/evansd/whitenoise', 'comments_url': 'https://api.github.com/repos/evansd/whitenoise/issues/27/comments', 'assignee': None, 'closed_at': '2014-12-12T09:59:30Z', 'events_url': 'https://api.github.com/repos/evansd/whitenoise/issues/27/events', 'updated_at': '2014-12-12T09:59:30Z', 'body': 'The code in make_helpful_exception() assumes the existence of the \"message\" attribute of the BaseException class.  That attribute was deprecated in Python 2.6 and removed in Python 3.  The exception message is now referenced in args.\\r\\n\\r\\nHere is the applicable line of whitenoise.django.py (line 135):\\r\\n\\r\\nmatch = self.ERROR_MSG_RE.search(exception.message)\\r\\n\\r\\nFrom your documentation, it doesn\\'t look like Whitenoise intends to support Python versions older than 2.7, so fixing the problem should be as easy as changing the line to this:\\r\\n\\r\\nmatch = self.ERROR_MSG_RE.search(exception.args[0])\\r\\n\\r\\n...and making the same alteration a few lines later:\\r\\n\\r\\norig_message=exception.args[0]\\r\\n', 'labels': [], 'number': 27, 'user': {'following_url': 'https://api.github.com/users/abbottc/following{/other_user}', 'avatar_url': 'https://avatars.githubusercontent.com/u/5771879?v=3', 'received_events_url': 'https://api.github.com/users/abbottc/received_events', 'starred_url': 'https://api.github.com/users/abbottc/starred{/owner}{/repo}', 'html_url': 'https://github.com/abbottc', 'site_admin': False, 'events_url': 'https://api.github.com/users/abbottc/events{/privacy}', 'id': 5771879, 'gravatar_id': '', 'subscriptions_url': 'https://api.github.com/users/abbottc/subscriptions', 'organizations_url': 'https://api.github.com/users/abbottc/orgs', 'repos_url': 'https://api.github.com/users/abbottc/repos', 'type': 'User', 'gists_url': 'https://api.github.com/users/abbottc/gists{/gist_id}', 'url': 'https://api.github.com/users/abbottc', 'login': 'abbottc', 'followers_url': 'https://api.github.com/users/abbottc/followers'}, 'labels_url': 'https://api.github.com/repos/evansd/whitenoise/issues/27/labels{/name}', 'url': 'https://api.github.com/repos/evansd/whitenoise/issues/27', 'title': \"make_helpful_exception() in whitenoise.django.py produces AttributeError: 'ValueError' object has no attribute 'message'\", 'comments': 0}"}}, {"model": "issues.issue", "pk": 47, "fields": {"created": "2016-02-21T03:06:26.926Z", "modified": "2016-02-21T03:06:26.927Z", "number": 26, "title": "Not working with django-assets", "body": "I'm using django-assets to minify/merge my assets. All the files are correctly generated when running collectstatic but the packed files (from django-assets) are never served.\r\n \r\nExample code from my webpages:\r\n```\r\n<script type=\"text/javascript\" src=\"/static/gen/packed.js?5df0a1aa\"></script> <!-- generated using django-assets loop -->\r\n<script type='text/javascript' src='/static/js/contact_me.95b1c452b73b.js'></script> <!-- normal static call -->\r\n```", "repo_owner": "evansd", "repo": "whitenoise", "raw": "{'created_at': '2014-12-07T12:27:02Z', 'locked': False, 'state': 'closed', 'milestone': None, 'id': 51216401, 'html_url': 'https://github.com/evansd/whitenoise/issues/26', 'repository_url': 'https://api.github.com/repos/evansd/whitenoise', 'comments_url': 'https://api.github.com/repos/evansd/whitenoise/issues/26/comments', 'assignee': None, 'closed_at': '2014-12-07T12:43:06Z', 'events_url': 'https://api.github.com/repos/evansd/whitenoise/issues/26/events', 'updated_at': '2014-12-08T09:32:34Z', 'body': 'I\\'m using django-assets to minify/merge my assets. All the files are correctly generated when running collectstatic but the packed files (from django-assets) are never served.\\r\\n \\r\\nExample code from my webpages:\\r\\n```\\r\\n<script type=\"text/javascript\" src=\"/static/gen/packed.js?5df0a1aa\"></script> <!-- generated using django-assets loop -->\\r\\n<script type=\\'text/javascript\\' src=\\'/static/js/contact_me.95b1c452b73b.js\\'></script> <!-- normal static call -->\\r\\n```', 'labels': [], 'number': 26, 'user': {'following_url': 'https://api.github.com/users/lfrodrigues/following{/other_user}', 'avatar_url': 'https://avatars.githubusercontent.com/u/301004?v=3', 'received_events_url': 'https://api.github.com/users/lfrodrigues/received_events', 'starred_url': 'https://api.github.com/users/lfrodrigues/starred{/owner}{/repo}', 'html_url': 'https://github.com/lfrodrigues', 'site_admin': False, 'events_url': 'https://api.github.com/users/lfrodrigues/events{/privacy}', 'id': 301004, 'gravatar_id': '', 'subscriptions_url': 'https://api.github.com/users/lfrodrigues/subscriptions', 'organizations_url': 'https://api.github.com/users/lfrodrigues/orgs', 'repos_url': 'https://api.github.com/users/lfrodrigues/repos', 'type': 'User', 'gists_url': 'https://api.github.com/users/lfrodrigues/gists{/gist_id}', 'url': 'https://api.github.com/users/lfrodrigues', 'login': 'lfrodrigues', 'followers_url': 'https://api.github.com/users/lfrodrigues/followers'}, 'labels_url': 'https://api.github.com/repos/evansd/whitenoise/issues/26/labels{/name}', 'url': 'https://api.github.com/repos/evansd/whitenoise/issues/26', 'title': 'Not working with django-assets', 'comments': 6}"}}, {"model": "issues.issue", "pk": 48, "fields": {"created": "2016-02-21T03:06:27.675Z", "modified": "2016-02-21T03:06:27.675Z", "number": 25, "title": "When DEBUG=True DjangoWhiteNoise does not look at AppDirectories for static files", "body": "When DEBUG=True DjangoWhiteNoise does not look at AppDirectories for static files", "repo_owner": "evansd", "repo": "whitenoise", "raw": "{'created_at': '2014-11-29T19:48:44Z', 'locked': False, 'state': 'closed', 'milestone': None, 'id': 50435297, 'html_url': 'https://github.com/evansd/whitenoise/issues/25', 'repository_url': 'https://api.github.com/repos/evansd/whitenoise', 'comments_url': 'https://api.github.com/repos/evansd/whitenoise/issues/25/comments', 'assignee': None, 'closed_at': '2014-11-30T12:28:12Z', 'events_url': 'https://api.github.com/repos/evansd/whitenoise/issues/25/events', 'updated_at': '2015-06-20T11:47:27Z', 'body': 'When DEBUG=True DjangoWhiteNoise does not look at AppDirectories for static files', 'labels': [], 'number': 25, 'user': {'following_url': 'https://api.github.com/users/pykler/following{/other_user}', 'avatar_url': 'https://avatars.githubusercontent.com/u/45146?v=3', 'received_events_url': 'https://api.github.com/users/pykler/received_events', 'starred_url': 'https://api.github.com/users/pykler/starred{/owner}{/repo}', 'html_url': 'https://github.com/pykler', 'site_admin': False, 'events_url': 'https://api.github.com/users/pykler/events{/privacy}', 'id': 45146, 'gravatar_id': '', 'subscriptions_url': 'https://api.github.com/users/pykler/subscriptions', 'organizations_url': 'https://api.github.com/users/pykler/orgs', 'repos_url': 'https://api.github.com/users/pykler/repos', 'type': 'User', 'gists_url': 'https://api.github.com/users/pykler/gists{/gist_id}', 'url': 'https://api.github.com/users/pykler', 'login': 'pykler', 'followers_url': 'https://api.github.com/users/pykler/followers'}, 'labels_url': 'https://api.github.com/repos/evansd/whitenoise/issues/25/labels{/name}', 'url': 'https://api.github.com/repos/evansd/whitenoise/issues/25', 'title': 'When DEBUG=True DjangoWhiteNoise does not look at AppDirectories for static files', 'comments': 3}"}}, {"model": "issues.issue", "pk": 49, "fields": {"created": "2016-02-21T03:06:28.438Z", "modified": "2016-02-21T03:06:28.439Z", "number": 24, "title": "Don't throw on empty files", "body": "Attempting to compress an empty file will make white noise throw a division by 0 exception, since the empty file's size is 0, and the ratio is computed by division.\r\n\r\nEmpty files obviously don't need compression anyway, so we can just get rid of it.\r\n\r\nOne might ask, \"Why have an empty file in the static dir?\" See heroku's [guide](https://devcenter.heroku.com/articles/django-assets) for serving static assets with heroku: \r\n\r\n> Django won\u2019t automatically create the collectstatic target directory, so we recommend adding a dummy file to your repository ...", "repo_owner": "evansd", "repo": "whitenoise", "raw": "{'created_at': '2014-11-25T19:20:05Z', 'locked': False, 'state': 'closed', 'milestone': None, 'pull_request': {'html_url': 'https://github.com/evansd/whitenoise/pull/24', 'diff_url': 'https://github.com/evansd/whitenoise/pull/24.diff', 'url': 'https://api.github.com/repos/evansd/whitenoise/pulls/24', 'patch_url': 'https://github.com/evansd/whitenoise/pull/24.patch'}, 'id': 50071585, 'html_url': 'https://github.com/evansd/whitenoise/pull/24', 'repository_url': 'https://api.github.com/repos/evansd/whitenoise', 'comments_url': 'https://api.github.com/repos/evansd/whitenoise/issues/24/comments', 'assignee': None, 'closed_at': '2014-11-25T21:14:13Z', 'events_url': 'https://api.github.com/repos/evansd/whitenoise/issues/24/events', 'updated_at': '2014-11-26T01:28:55Z', 'body': 'Attempting to compress an empty file will make white noise throw a division by 0 exception, since the empty file\\'s size is 0, and the ratio is computed by division.\\r\\n\\r\\nEmpty files obviously don\\'t need compression anyway, so we can just get rid of it.\\r\\n\\r\\nOne might ask, \"Why have an empty file in the static dir?\" See heroku\\'s [guide](https://devcenter.heroku.com/articles/django-assets) for serving static assets with heroku: \\r\\n\\r\\n> Django won\u2019t automatically create the collectstatic target directory, so we recommend adding a dummy file to your repository ...', 'labels': [], 'number': 24, 'user': {'following_url': 'https://api.github.com/users/ryanrhee/following{/other_user}', 'avatar_url': 'https://avatars.githubusercontent.com/u/242548?v=3', 'received_events_url': 'https://api.github.com/users/ryanrhee/received_events', 'starred_url': 'https://api.github.com/users/ryanrhee/starred{/owner}{/repo}', 'html_url': 'https://github.com/ryanrhee', 'site_admin': False, 'events_url': 'https://api.github.com/users/ryanrhee/events{/privacy}', 'id': 242548, 'gravatar_id': '', 'subscriptions_url': 'https://api.github.com/users/ryanrhee/subscriptions', 'organizations_url': 'https://api.github.com/users/ryanrhee/orgs', 'repos_url': 'https://api.github.com/users/ryanrhee/repos', 'type': 'User', 'gists_url': 'https://api.github.com/users/ryanrhee/gists{/gist_id}', 'url': 'https://api.github.com/users/ryanrhee', 'login': 'ryanrhee', 'followers_url': 'https://api.github.com/users/ryanrhee/followers'}, 'labels_url': 'https://api.github.com/repos/evansd/whitenoise/issues/24/labels{/name}', 'url': 'https://api.github.com/repos/evansd/whitenoise/issues/24', 'title': \"Don't throw on empty files\", 'comments': 4}"}}, {"model": "issues.issue", "pk": 50, "fields": {"created": "2016-02-21T03:06:29.207Z", "modified": "2016-02-21T03:06:29.207Z", "number": 23, "title": "Allow the OPTIONS HTTP request", "body": "This update takes care of adding the OPTIONS HTTP request type.\r\n\r\nfixes #22 ", "repo_owner": "evansd", "repo": "whitenoise", "raw": "{'created_at': '2014-11-14T01:47:52Z', 'locked': False, 'state': 'closed', 'milestone': None, 'pull_request': {'html_url': 'https://github.com/evansd/whitenoise/pull/23', 'diff_url': 'https://github.com/evansd/whitenoise/pull/23.diff', 'url': 'https://api.github.com/repos/evansd/whitenoise/pulls/23', 'patch_url': 'https://github.com/evansd/whitenoise/pull/23.patch'}, 'id': 48720111, 'html_url': 'https://github.com/evansd/whitenoise/pull/23', 'repository_url': 'https://api.github.com/repos/evansd/whitenoise', 'comments_url': 'https://api.github.com/repos/evansd/whitenoise/issues/23/comments', 'assignee': None, 'closed_at': '2014-11-16T17:49:58Z', 'events_url': 'https://api.github.com/repos/evansd/whitenoise/issues/23/events', 'updated_at': '2014-11-16T17:49:58Z', 'body': 'This update takes care of adding the OPTIONS HTTP request type.\\r\\n\\r\\nfixes #22 ', 'labels': [], 'number': 23, 'user': {'following_url': 'https://api.github.com/users/craigruks/following{/other_user}', 'avatar_url': 'https://avatars.githubusercontent.com/u/69945?v=3', 'received_events_url': 'https://api.github.com/users/craigruks/received_events', 'starred_url': 'https://api.github.com/users/craigruks/starred{/owner}{/repo}', 'html_url': 'https://github.com/craigruks', 'site_admin': False, 'events_url': 'https://api.github.com/users/craigruks/events{/privacy}', 'id': 69945, 'gravatar_id': '', 'subscriptions_url': 'https://api.github.com/users/craigruks/subscriptions', 'organizations_url': 'https://api.github.com/users/craigruks/orgs', 'repos_url': 'https://api.github.com/users/craigruks/repos', 'type': 'User', 'gists_url': 'https://api.github.com/users/craigruks/gists{/gist_id}', 'url': 'https://api.github.com/users/craigruks', 'login': 'craigruks', 'followers_url': 'https://api.github.com/users/craigruks/followers'}, 'labels_url': 'https://api.github.com/repos/evansd/whitenoise/issues/23/labels{/name}', 'url': 'https://api.github.com/repos/evansd/whitenoise/issues/23', 'title': 'Allow the OPTIONS HTTP request', 'comments': 0}"}}, {"model": "issues.issue", "pk": 51, "fields": {"created": "2016-02-21T03:06:29.976Z", "modified": "2016-02-21T03:06:29.976Z", "number": 22, "title": "OPTIONS HTTP request support", "body": "Currently whitenoise only allows GET and HEAD HTTP requests. If you put a CDN in front of whitenoise and attempt to GET an asset across domains, the browser send a preflight ORIGINS HTTP request first, to see if it can then GET the asset. Therefore it would be nice to have the ORIGINS HTTP request permitted as well.", "repo_owner": "evansd", "repo": "whitenoise", "raw": "{'created_at': '2014-11-14T01:45:50Z', 'locked': False, 'state': 'closed', 'milestone': None, 'id': 48719982, 'html_url': 'https://github.com/evansd/whitenoise/issues/22', 'repository_url': 'https://api.github.com/repos/evansd/whitenoise', 'comments_url': 'https://api.github.com/repos/evansd/whitenoise/issues/22/comments', 'assignee': None, 'closed_at': '2014-11-14T19:46:36Z', 'events_url': 'https://api.github.com/repos/evansd/whitenoise/issues/22/events', 'updated_at': '2014-11-14T19:46:36Z', 'body': 'Currently whitenoise only allows GET and HEAD HTTP requests. If you put a CDN in front of whitenoise and attempt to GET an asset across domains, the browser send a preflight ORIGINS HTTP request first, to see if it can then GET the asset. Therefore it would be nice to have the ORIGINS HTTP request permitted as well.', 'labels': [], 'number': 22, 'user': {'following_url': 'https://api.github.com/users/craigruks/following{/other_user}', 'avatar_url': 'https://avatars.githubusercontent.com/u/69945?v=3', 'received_events_url': 'https://api.github.com/users/craigruks/received_events', 'starred_url': 'https://api.github.com/users/craigruks/starred{/owner}{/repo}', 'html_url': 'https://github.com/craigruks', 'site_admin': False, 'events_url': 'https://api.github.com/users/craigruks/events{/privacy}', 'id': 69945, 'gravatar_id': '', 'subscriptions_url': 'https://api.github.com/users/craigruks/subscriptions', 'organizations_url': 'https://api.github.com/users/craigruks/orgs', 'repos_url': 'https://api.github.com/users/craigruks/repos', 'type': 'User', 'gists_url': 'https://api.github.com/users/craigruks/gists{/gist_id}', 'url': 'https://api.github.com/users/craigruks', 'login': 'craigruks', 'followers_url': 'https://api.github.com/users/craigruks/followers'}, 'labels_url': 'https://api.github.com/repos/evansd/whitenoise/issues/22/labels{/name}', 'url': 'https://api.github.com/repos/evansd/whitenoise/issues/22', 'title': 'OPTIONS HTTP request support', 'comments': 2}"}}, {"model": "issues.issue", "pk": 52, "fields": {"created": "2016-02-21T03:06:30.746Z", "modified": "2016-02-21T03:06:30.746Z", "number": 21, "title": "Directions to restrict CloudFront to static dir", "body": "Leverage CloudFront behaviors to prevent your entire site from being cloned and public on CloudFront.\r\n\r\nfixes #20 ", "repo_owner": "evansd", "repo": "whitenoise", "raw": "{'created_at': '2014-11-07T22:03:26Z', 'locked': False, 'state': 'closed', 'milestone': None, 'pull_request': {'html_url': 'https://github.com/evansd/whitenoise/pull/21', 'diff_url': 'https://github.com/evansd/whitenoise/pull/21.diff', 'url': 'https://api.github.com/repos/evansd/whitenoise/pulls/21', 'patch_url': 'https://github.com/evansd/whitenoise/pull/21.patch'}, 'id': 48136302, 'html_url': 'https://github.com/evansd/whitenoise/pull/21', 'repository_url': 'https://api.github.com/repos/evansd/whitenoise', 'comments_url': 'https://api.github.com/repos/evansd/whitenoise/issues/21/comments', 'assignee': None, 'closed_at': '2014-11-10T13:56:15Z', 'events_url': 'https://api.github.com/repos/evansd/whitenoise/issues/21/events', 'updated_at': '2014-11-10T13:56:15Z', 'body': 'Leverage CloudFront behaviors to prevent your entire site from being cloned and public on CloudFront.\\r\\n\\r\\nfixes #20 ', 'labels': [], 'number': 21, 'user': {'following_url': 'https://api.github.com/users/craigruks/following{/other_user}', 'avatar_url': 'https://avatars.githubusercontent.com/u/69945?v=3', 'received_events_url': 'https://api.github.com/users/craigruks/received_events', 'starred_url': 'https://api.github.com/users/craigruks/starred{/owner}{/repo}', 'html_url': 'https://github.com/craigruks', 'site_admin': False, 'events_url': 'https://api.github.com/users/craigruks/events{/privacy}', 'id': 69945, 'gravatar_id': '', 'subscriptions_url': 'https://api.github.com/users/craigruks/subscriptions', 'organizations_url': 'https://api.github.com/users/craigruks/orgs', 'repos_url': 'https://api.github.com/users/craigruks/repos', 'type': 'User', 'gists_url': 'https://api.github.com/users/craigruks/gists{/gist_id}', 'url': 'https://api.github.com/users/craigruks', 'login': 'craigruks', 'followers_url': 'https://api.github.com/users/craigruks/followers'}, 'labels_url': 'https://api.github.com/repos/evansd/whitenoise/issues/21/labels{/name}', 'url': 'https://api.github.com/repos/evansd/whitenoise/issues/21', 'title': 'Directions to restrict CloudFront to static dir', 'comments': 0}"}}, {"model": "issues.issue", "pk": 53, "fields": {"created": "2016-02-21T03:06:31.508Z", "modified": "2016-02-21T03:06:31.508Z", "number": 20, "title": "Documentation creates clone of application on CloudFront", "body": "Hi! Using your documentation, I set CloudFront to point to my application and then served static assets using CloudFront. This works great, however if you go to a URL from the application using the CloudFront domain, it shows a static clone of that view. This creates issues with web crawlers and users mistaking the CloudFront instance for the application.", "repo_owner": "evansd", "repo": "whitenoise", "raw": "{'created_at': '2014-11-07T21:57:34Z', 'locked': False, 'state': 'closed', 'milestone': None, 'id': 48135728, 'html_url': 'https://github.com/evansd/whitenoise/issues/20', 'repository_url': 'https://api.github.com/repos/evansd/whitenoise', 'comments_url': 'https://api.github.com/repos/evansd/whitenoise/issues/20/comments', 'assignee': None, 'closed_at': '2014-11-10T13:56:15Z', 'events_url': 'https://api.github.com/repos/evansd/whitenoise/issues/20/events', 'updated_at': '2014-11-11T19:24:20Z', 'body': 'Hi! Using your documentation, I set CloudFront to point to my application and then served static assets using CloudFront. This works great, however if you go to a URL from the application using the CloudFront domain, it shows a static clone of that view. This creates issues with web crawlers and users mistaking the CloudFront instance for the application.', 'labels': [], 'number': 20, 'user': {'following_url': 'https://api.github.com/users/craigruks/following{/other_user}', 'avatar_url': 'https://avatars.githubusercontent.com/u/69945?v=3', 'received_events_url': 'https://api.github.com/users/craigruks/received_events', 'starred_url': 'https://api.github.com/users/craigruks/starred{/owner}{/repo}', 'html_url': 'https://github.com/craigruks', 'site_admin': False, 'events_url': 'https://api.github.com/users/craigruks/events{/privacy}', 'id': 69945, 'gravatar_id': '', 'subscriptions_url': 'https://api.github.com/users/craigruks/subscriptions', 'organizations_url': 'https://api.github.com/users/craigruks/orgs', 'repos_url': 'https://api.github.com/users/craigruks/repos', 'type': 'User', 'gists_url': 'https://api.github.com/users/craigruks/gists{/gist_id}', 'url': 'https://api.github.com/users/craigruks', 'login': 'craigruks', 'followers_url': 'https://api.github.com/users/craigruks/followers'}, 'labels_url': 'https://api.github.com/repos/evansd/whitenoise/issues/20/labels{/name}', 'url': 'https://api.github.com/repos/evansd/whitenoise/issues/20', 'title': 'Documentation creates clone of application on CloudFront', 'comments': 2}"}}, {"model": "issues.issue", "pk": 54, "fields": {"created": "2016-02-21T03:06:32.282Z", "modified": "2016-02-21T03:06:32.282Z", "number": 19, "title": "Document the fact that modifying files at runtime won't work with WhiteNoise", "body": "Make it clear that WhiteNoise is for serving fixed sets of static files in production. And suggest workarounds/alternatives for serving files in development.", "repo_owner": "evansd", "repo": "whitenoise", "raw": "{'created_at': '2014-09-11T15:06:15Z', 'locked': False, 'state': 'closed', 'milestone': None, 'id': 42534660, 'html_url': 'https://github.com/evansd/whitenoise/issues/19', 'repository_url': 'https://api.github.com/repos/evansd/whitenoise', 'comments_url': 'https://api.github.com/repos/evansd/whitenoise/issues/19/comments', 'assignee': None, 'closed_at': '2015-06-20T11:53:49Z', 'events_url': 'https://api.github.com/repos/evansd/whitenoise/issues/19/events', 'updated_at': '2015-06-20T11:53:49Z', 'body': 'Make it clear that WhiteNoise is for serving fixed sets of static files in production. And suggest workarounds/alternatives for serving files in development.', 'labels': [], 'number': 19, 'user': {'following_url': 'https://api.github.com/users/evansd/following{/other_user}', 'avatar_url': 'https://avatars.githubusercontent.com/u/19630?v=3', 'received_events_url': 'https://api.github.com/users/evansd/received_events', 'starred_url': 'https://api.github.com/users/evansd/starred{/owner}{/repo}', 'html_url': 'https://github.com/evansd', 'site_admin': False, 'events_url': 'https://api.github.com/users/evansd/events{/privacy}', 'id': 19630, 'gravatar_id': '', 'subscriptions_url': 'https://api.github.com/users/evansd/subscriptions', 'organizations_url': 'https://api.github.com/users/evansd/orgs', 'repos_url': 'https://api.github.com/users/evansd/repos', 'type': 'User', 'gists_url': 'https://api.github.com/users/evansd/gists{/gist_id}', 'url': 'https://api.github.com/users/evansd', 'login': 'evansd', 'followers_url': 'https://api.github.com/users/evansd/followers'}, 'labels_url': 'https://api.github.com/repos/evansd/whitenoise/issues/19/labels{/name}', 'url': 'https://api.github.com/repos/evansd/whitenoise/issues/19', 'title': \"Document the fact that modifying files at runtime won't work with WhiteNoise\", 'comments': 5}"}}, {"model": "issues.issue", "pk": 55, "fields": {"created": "2016-02-21T03:06:33.065Z", "modified": "2016-02-21T03:06:33.066Z", "number": 18, "title": "Recognize files created after WhiteNoise is started", "body": "WhiteNoise does not seem to recognize files added to the static directory after it is started", "repo_owner": "evansd", "repo": "whitenoise", "raw": "{'created_at': '2014-09-11T14:50:52Z', 'locked': False, 'state': 'closed', 'milestone': None, 'id': 42532591, 'html_url': 'https://github.com/evansd/whitenoise/issues/18', 'repository_url': 'https://api.github.com/repos/evansd/whitenoise', 'comments_url': 'https://api.github.com/repos/evansd/whitenoise/issues/18/comments', 'assignee': None, 'closed_at': '2014-09-11T15:06:56Z', 'events_url': 'https://api.github.com/repos/evansd/whitenoise/issues/18/events', 'updated_at': '2015-06-20T11:49:45Z', 'body': 'WhiteNoise does not seem to recognize files added to the static directory after it is started', 'labels': [], 'number': 18, 'user': {'following_url': 'https://api.github.com/users/thenewguy/following{/other_user}', 'avatar_url': 'https://avatars.githubusercontent.com/u/77731?v=3', 'received_events_url': 'https://api.github.com/users/thenewguy/received_events', 'starred_url': 'https://api.github.com/users/thenewguy/starred{/owner}{/repo}', 'html_url': 'https://github.com/thenewguy', 'site_admin': False, 'events_url': 'https://api.github.com/users/thenewguy/events{/privacy}', 'id': 77731, 'gravatar_id': '', 'subscriptions_url': 'https://api.github.com/users/thenewguy/subscriptions', 'organizations_url': 'https://api.github.com/users/thenewguy/orgs', 'repos_url': 'https://api.github.com/users/thenewguy/repos', 'type': 'User', 'gists_url': 'https://api.github.com/users/thenewguy/gists{/gist_id}', 'url': 'https://api.github.com/users/thenewguy', 'login': 'thenewguy', 'followers_url': 'https://api.github.com/users/thenewguy/followers'}, 'labels_url': 'https://api.github.com/repos/evansd/whitenoise/issues/18/labels{/name}', 'url': 'https://api.github.com/repos/evansd/whitenoise/issues/18', 'title': 'Recognize files created after WhiteNoise is started', 'comments': 4}"}}, {"model": "issues.issue", "pk": 56, "fields": {"created": "2016-02-21T03:06:33.816Z", "modified": "2016-02-21T03:06:33.816Z", "number": 17, "title": "Document storage backend requirements for compatibility", "body": "It would be helpful to add the requirements of the storage backend that whitenoise uses to the documentation for subclassing.  For example, does it require that the storage backend supply a local file path, or could it use a remote storage backend?", "repo_owner": "evansd", "repo": "whitenoise", "raw": "{'created_at': '2014-09-10T13:04:47Z', 'locked': False, 'state': 'closed', 'milestone': None, 'id': 42410054, 'html_url': 'https://github.com/evansd/whitenoise/issues/17', 'repository_url': 'https://api.github.com/repos/evansd/whitenoise', 'comments_url': 'https://api.github.com/repos/evansd/whitenoise/issues/17/comments', 'assignee': None, 'closed_at': '2016-02-16T22:59:09Z', 'events_url': 'https://api.github.com/repos/evansd/whitenoise/issues/17/events', 'updated_at': '2016-02-17T09:36:41Z', 'body': 'It would be helpful to add the requirements of the storage backend that whitenoise uses to the documentation for subclassing.  For example, does it require that the storage backend supply a local file path, or could it use a remote storage backend?', 'labels': [], 'number': 17, 'user': {'following_url': 'https://api.github.com/users/thenewguy/following{/other_user}', 'avatar_url': 'https://avatars.githubusercontent.com/u/77731?v=3', 'received_events_url': 'https://api.github.com/users/thenewguy/received_events', 'starred_url': 'https://api.github.com/users/thenewguy/starred{/owner}{/repo}', 'html_url': 'https://github.com/thenewguy', 'site_admin': False, 'events_url': 'https://api.github.com/users/thenewguy/events{/privacy}', 'id': 77731, 'gravatar_id': '', 'subscriptions_url': 'https://api.github.com/users/thenewguy/subscriptions', 'organizations_url': 'https://api.github.com/users/thenewguy/orgs', 'repos_url': 'https://api.github.com/users/thenewguy/repos', 'type': 'User', 'gists_url': 'https://api.github.com/users/thenewguy/gists{/gist_id}', 'url': 'https://api.github.com/users/thenewguy', 'login': 'thenewguy', 'followers_url': 'https://api.github.com/users/thenewguy/followers'}, 'labels_url': 'https://api.github.com/repos/evansd/whitenoise/issues/17/labels{/name}', 'url': 'https://api.github.com/repos/evansd/whitenoise/issues/17', 'title': 'Document storage backend requirements for compatibility', 'comments': 7}"}}, {"model": "issues.issue", "pk": 57, "fields": {"created": "2016-02-21T03:06:34.571Z", "modified": "2016-02-21T03:06:34.571Z", "number": 16, "title": "Spelling in README", "body": "Change:\r\n* **Settting** far-future cache headers on content which won't change\r\n\r\nto\r\n\r\n* **Setting** far-future cache headers on content which won't change", "repo_owner": "evansd", "repo": "whitenoise", "raw": "{'created_at': '2014-08-26T18:51:08Z', 'locked': False, 'state': 'closed', 'milestone': None, 'pull_request': {'html_url': 'https://github.com/evansd/whitenoise/pull/16', 'diff_url': 'https://github.com/evansd/whitenoise/pull/16.diff', 'url': 'https://api.github.com/repos/evansd/whitenoise/pulls/16', 'patch_url': 'https://github.com/evansd/whitenoise/pull/16.patch'}, 'id': 41207463, 'html_url': 'https://github.com/evansd/whitenoise/pull/16', 'repository_url': 'https://api.github.com/repos/evansd/whitenoise', 'comments_url': 'https://api.github.com/repos/evansd/whitenoise/issues/16/comments', 'assignee': None, 'closed_at': '2014-08-26T19:24:49Z', 'events_url': 'https://api.github.com/repos/evansd/whitenoise/issues/16/events', 'updated_at': '2014-08-26T19:24:49Z', 'body': \"Change:\\r\\n* **Settting** far-future cache headers on content which won't change\\r\\n\\r\\nto\\r\\n\\r\\n* **Setting** far-future cache headers on content which won't change\", 'labels': [], 'number': 16, 'user': {'following_url': 'https://api.github.com/users/eshim/following{/other_user}', 'avatar_url': 'https://avatars.githubusercontent.com/u/1820001?v=3', 'received_events_url': 'https://api.github.com/users/eshim/received_events', 'starred_url': 'https://api.github.com/users/eshim/starred{/owner}{/repo}', 'html_url': 'https://github.com/eshim', 'site_admin': False, 'events_url': 'https://api.github.com/users/eshim/events{/privacy}', 'id': 1820001, 'gravatar_id': '', 'subscriptions_url': 'https://api.github.com/users/eshim/subscriptions', 'organizations_url': 'https://api.github.com/users/eshim/orgs', 'repos_url': 'https://api.github.com/users/eshim/repos', 'type': 'User', 'gists_url': 'https://api.github.com/users/eshim/gists{/gist_id}', 'url': 'https://api.github.com/users/eshim', 'login': 'eshim', 'followers_url': 'https://api.github.com/users/eshim/followers'}, 'labels_url': 'https://api.github.com/repos/evansd/whitenoise/issues/16/labels{/name}', 'url': 'https://api.github.com/repos/evansd/whitenoise/issues/16', 'title': 'Spelling in README', 'comments': 0}"}}, {"model": "issues.issue", "pk": 58, "fields": {"created": "2016-02-21T03:06:35.332Z", "modified": "2016-02-21T03:06:35.332Z", "number": 15, "title": "Added PyPy to the build matrix", "body": "", "repo_owner": "evansd", "repo": "whitenoise", "raw": "{'created_at': '2014-08-07T08:48:13Z', 'locked': False, 'state': 'closed', 'milestone': None, 'pull_request': {'html_url': 'https://github.com/evansd/whitenoise/pull/15', 'diff_url': 'https://github.com/evansd/whitenoise/pull/15.diff', 'url': 'https://api.github.com/repos/evansd/whitenoise/pulls/15', 'patch_url': 'https://github.com/evansd/whitenoise/pull/15.patch'}, 'id': 39704948, 'html_url': 'https://github.com/evansd/whitenoise/pull/15', 'repository_url': 'https://api.github.com/repos/evansd/whitenoise', 'comments_url': 'https://api.github.com/repos/evansd/whitenoise/issues/15/comments', 'assignee': None, 'closed_at': '2014-08-07T09:03:35Z', 'events_url': 'https://api.github.com/repos/evansd/whitenoise/issues/15/events', 'updated_at': '2014-08-09T14:53:14Z', 'body': '', 'labels': [], 'number': 15, 'user': {'following_url': 'https://api.github.com/users/thedrow/following{/other_user}', 'avatar_url': 'https://avatars.githubusercontent.com/u/48936?v=3', 'received_events_url': 'https://api.github.com/users/thedrow/received_events', 'starred_url': 'https://api.github.com/users/thedrow/starred{/owner}{/repo}', 'html_url': 'https://github.com/thedrow', 'site_admin': False, 'events_url': 'https://api.github.com/users/thedrow/events{/privacy}', 'id': 48936, 'gravatar_id': '', 'subscriptions_url': 'https://api.github.com/users/thedrow/subscriptions', 'organizations_url': 'https://api.github.com/users/thedrow/orgs', 'repos_url': 'https://api.github.com/users/thedrow/repos', 'type': 'User', 'gists_url': 'https://api.github.com/users/thedrow/gists{/gist_id}', 'url': 'https://api.github.com/users/thedrow', 'login': 'thedrow', 'followers_url': 'https://api.github.com/users/thedrow/followers'}, 'labels_url': 'https://api.github.com/repos/evansd/whitenoise/issues/15/labels{/name}', 'url': 'https://api.github.com/repos/evansd/whitenoise/issues/15', 'title': 'Added PyPy to the build matrix', 'comments': 1}"}}, {"model": "issues.issue", "pk": 59, "fields": {"created": "2016-02-21T03:06:36.081Z", "modified": "2016-02-21T03:06:36.082Z", "number": 14, "title": "Are relative paths a problem for GzipManifestFileStorage?", "body": "Hi David\r\n\r\nJust got this when running `collectstatic` locally (Django 1.6.5), which I'm assuming is still required behaviour with whitenoise wrapping the core WSGI app:\r\n\r\n```\r\nPost-processing 'yj/css/page_specific/badge.css' failed!\r\n...\r\nValueError: The file 'yj/css/images/icons/arrow-down-black.svg' could not be found with <whitenoise.django.GzipManifestStaticFilesStorage object at 0x10310ee50>.\r\n```\r\n\r\nThat arrow-down-black.svg is referenced in the compiled badge.css file as \r\n```\r\nbackground-image:url(\"../images/icons/arrow-down-black.svg\")\r\n```\r\n\r\nIs it the relative path that's breaking things here? \r\n\r\nI appreciate this is UserError, not a bug, but a steer would we welcome, as I've not noticed any gotchas in the docs.\r\n\r\nCheers\r\nSteve", "repo_owner": "evansd", "repo": "whitenoise", "raw": "{'created_at': '2014-06-30T17:05:17Z', 'locked': False, 'state': 'closed', 'milestone': None, 'id': 36816865, 'html_url': 'https://github.com/evansd/whitenoise/issues/14', 'repository_url': 'https://api.github.com/repos/evansd/whitenoise', 'comments_url': 'https://api.github.com/repos/evansd/whitenoise/issues/14/comments', 'assignee': None, 'closed_at': '2014-06-30T17:20:32Z', 'events_url': 'https://api.github.com/repos/evansd/whitenoise/issues/14/events', 'updated_at': '2014-07-03T21:04:45Z', 'body': 'Hi David\\r\\n\\r\\nJust got this when running `collectstatic` locally (Django 1.6.5), which I\\'m assuming is still required behaviour with whitenoise wrapping the core WSGI app:\\r\\n\\r\\n```\\r\\nPost-processing \\'yj/css/page_specific/badge.css\\' failed!\\r\\n...\\r\\nValueError: The file \\'yj/css/images/icons/arrow-down-black.svg\\' could not be found with <whitenoise.django.GzipManifestStaticFilesStorage object at 0x10310ee50>.\\r\\n```\\r\\n\\r\\nThat arrow-down-black.svg is referenced in the compiled badge.css file as \\r\\n```\\r\\nbackground-image:url(\"../images/icons/arrow-down-black.svg\")\\r\\n```\\r\\n\\r\\nIs it the relative path that\\'s breaking things here? \\r\\n\\r\\nI appreciate this is UserError, not a bug, but a steer would we welcome, as I\\'ve not noticed any gotchas in the docs.\\r\\n\\r\\nCheers\\r\\nSteve', 'labels': [], 'number': 14, 'user': {'following_url': 'https://api.github.com/users/stevejalim/following{/other_user}', 'avatar_url': 'https://avatars.githubusercontent.com/u/101457?v=3', 'received_events_url': 'https://api.github.com/users/stevejalim/received_events', 'starred_url': 'https://api.github.com/users/stevejalim/starred{/owner}{/repo}', 'html_url': 'https://github.com/stevejalim', 'site_admin': False, 'events_url': 'https://api.github.com/users/stevejalim/events{/privacy}', 'id': 101457, 'gravatar_id': '', 'subscriptions_url': 'https://api.github.com/users/stevejalim/subscriptions', 'organizations_url': 'https://api.github.com/users/stevejalim/orgs', 'repos_url': 'https://api.github.com/users/stevejalim/repos', 'type': 'User', 'gists_url': 'https://api.github.com/users/stevejalim/gists{/gist_id}', 'url': 'https://api.github.com/users/stevejalim', 'login': 'stevejalim', 'followers_url': 'https://api.github.com/users/stevejalim/followers'}, 'labels_url': 'https://api.github.com/repos/evansd/whitenoise/issues/14/labels{/name}', 'url': 'https://api.github.com/repos/evansd/whitenoise/issues/14', 'title': 'Are relative paths a problem for GzipManifestFileStorage?', 'comments': 7}"}}, {"model": "issues.issue", "pk": 60, "fields": {"created": "2016-02-21T03:06:36.846Z", "modified": "2016-02-21T03:06:36.847Z", "number": 13, "title": "Add add_file method for specific paths", "body": "# examples\r\napplication.add_file('/path/to/favicon.ico', '/favicon.ico')\r\napplication.add_file('/path/to/frontend/index.html', '/')", "repo_owner": "evansd", "repo": "whitenoise", "raw": "{'created_at': '2014-06-25T22:03:26Z', 'locked': False, 'state': 'closed', 'milestone': None, 'pull_request': {'html_url': 'https://github.com/evansd/whitenoise/pull/13', 'diff_url': 'https://github.com/evansd/whitenoise/pull/13.diff', 'url': 'https://api.github.com/repos/evansd/whitenoise/pulls/13', 'patch_url': 'https://github.com/evansd/whitenoise/pull/13.patch'}, 'id': 36527008, 'html_url': 'https://github.com/evansd/whitenoise/pull/13', 'repository_url': 'https://api.github.com/repos/evansd/whitenoise', 'comments_url': 'https://api.github.com/repos/evansd/whitenoise/issues/13/comments', 'assignee': None, 'closed_at': '2014-06-25T22:31:44Z', 'events_url': 'https://api.github.com/repos/evansd/whitenoise/issues/13/events', 'updated_at': '2015-06-20T10:23:58Z', 'body': \"# examples\\r\\napplication.add_file('/path/to/favicon.ico', '/favicon.ico')\\r\\napplication.add_file('/path/to/frontend/index.html', '/')\", 'labels': [], 'number': 13, 'user': {'following_url': 'https://api.github.com/users/pterk/following{/other_user}', 'avatar_url': 'https://avatars.githubusercontent.com/u/188764?v=3', 'received_events_url': 'https://api.github.com/users/pterk/received_events', 'starred_url': 'https://api.github.com/users/pterk/starred{/owner}{/repo}', 'html_url': 'https://github.com/pterk', 'site_admin': False, 'events_url': 'https://api.github.com/users/pterk/events{/privacy}', 'id': 188764, 'gravatar_id': '', 'subscriptions_url': 'https://api.github.com/users/pterk/subscriptions', 'organizations_url': 'https://api.github.com/users/pterk/orgs', 'repos_url': 'https://api.github.com/users/pterk/repos', 'type': 'User', 'gists_url': 'https://api.github.com/users/pterk/gists{/gist_id}', 'url': 'https://api.github.com/users/pterk', 'login': 'pterk', 'followers_url': 'https://api.github.com/users/pterk/followers'}, 'labels_url': 'https://api.github.com/repos/evansd/whitenoise/issues/13/labels{/name}', 'url': 'https://api.github.com/repos/evansd/whitenoise/issues/13', 'title': 'Add add_file method for specific paths', 'comments': 6}"}}, {"model": "issues.issue", "pk": 61, "fields": {"created": "2016-02-21T03:06:38.914Z", "modified": "2016-02-21T03:06:38.915Z", "number": 12, "title": "Support index files", "body": "Eg: if there's an `foo/index.html` it should be served at `foo/`. Also, `foo` should redirect to `foo/`.", "repo_owner": "evansd", "repo": "whitenoise", "raw": "{'created_at': '2014-06-10T12:53:09Z', 'locked': False, 'state': 'closed', 'milestone': None, 'id': 35378481, 'html_url': 'https://github.com/evansd/whitenoise/issues/12', 'repository_url': 'https://api.github.com/repos/evansd/whitenoise', 'comments_url': 'https://api.github.com/repos/evansd/whitenoise/issues/12/comments', 'assignee': None, 'closed_at': '2014-06-10T17:46:42Z', 'events_url': 'https://api.github.com/repos/evansd/whitenoise/issues/12/events', 'updated_at': '2015-07-08T09:11:40Z', 'body': \"Eg: if there's an `foo/index.html` it should be served at `foo/`. Also, `foo` should redirect to `foo/`.\", 'labels': [], 'number': 12, 'user': {'following_url': 'https://api.github.com/users/ionelmc/following{/other_user}', 'avatar_url': 'https://avatars.githubusercontent.com/u/129501?v=3', 'received_events_url': 'https://api.github.com/users/ionelmc/received_events', 'starred_url': 'https://api.github.com/users/ionelmc/starred{/owner}{/repo}', 'html_url': 'https://github.com/ionelmc', 'site_admin': False, 'events_url': 'https://api.github.com/users/ionelmc/events{/privacy}', 'id': 129501, 'gravatar_id': '', 'subscriptions_url': 'https://api.github.com/users/ionelmc/subscriptions', 'organizations_url': 'https://api.github.com/users/ionelmc/orgs', 'repos_url': 'https://api.github.com/users/ionelmc/repos', 'type': 'User', 'gists_url': 'https://api.github.com/users/ionelmc/gists{/gist_id}', 'url': 'https://api.github.com/users/ionelmc', 'login': 'ionelmc', 'followers_url': 'https://api.github.com/users/ionelmc/followers'}, 'labels_url': 'https://api.github.com/repos/evansd/whitenoise/issues/12/labels{/name}', 'url': 'https://api.github.com/repos/evansd/whitenoise/issues/12', 'title': 'Support index files', 'comments': 2}"}}, {"model": "issues.issue", "pk": 62, "fields": {"created": "2016-02-21T03:07:40.938Z", "modified": "2016-02-21T03:07:40.938Z", "number": 11, "title": "Error on checking for file modification", "body": "I was modifying javascript source code during running wsgi application with `whitenoise`.\r\nSometimes I got Internal Server Error from static file serving.\r\n\r\nubuntu 14.04 64bit\r\npython 3.4.1\r\nwhitenoise 1.0.2\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/aodag/works/my.cms/.venv/lib/python3.4/site-packages/whitenoise/base.py\", line 63, in __call__\r\n    return self.serve(static_file, environ, start_response)\r\n  File \"/home/aodag/works/my.cms/.venv/lib/python3.4/site-packages/whitenoise/base.py\", line 70, in serve\r\n    if self.file_not_modified(static_file, environ):\r\n  File \"/home/aodag/works/my.cms/.venv/lib/python3.4/site-packages/whitenoise/base.py\", line 95, in file_not_modified\r\n    return parsedate(last_requested) >= static_file.mtime\r\nTypeError: unorderable types: tuple() >= int()\r\n```", "repo_owner": "evansd", "repo": "whitenoise", "raw": "{'created_at': '2014-05-25T00:35:43Z', 'locked': False, 'state': 'closed', 'milestone': None, 'id': 34248676, 'html_url': 'https://github.com/evansd/whitenoise/issues/11', 'repository_url': 'https://api.github.com/repos/evansd/whitenoise', 'comments_url': 'https://api.github.com/repos/evansd/whitenoise/issues/11/comments', 'assignee': None, 'closed_at': '2014-06-08T22:03:00Z', 'events_url': 'https://api.github.com/repos/evansd/whitenoise/issues/11/events', 'updated_at': '2014-06-12T11:19:51Z', 'body': 'I was modifying javascript source code during running wsgi application with `whitenoise`.\\r\\nSometimes I got Internal Server Error from static file serving.\\r\\n\\r\\nubuntu 14.04 64bit\\r\\npython 3.4.1\\r\\nwhitenoise 1.0.2\\r\\n\\r\\n```\\r\\nTraceback (most recent call last):\\r\\n  File \"/home/aodag/works/my.cms/.venv/lib/python3.4/site-packages/whitenoise/base.py\", line 63, in __call__\\r\\n    return self.serve(static_file, environ, start_response)\\r\\n  File \"/home/aodag/works/my.cms/.venv/lib/python3.4/site-packages/whitenoise/base.py\", line 70, in serve\\r\\n    if self.file_not_modified(static_file, environ):\\r\\n  File \"/home/aodag/works/my.cms/.venv/lib/python3.4/site-packages/whitenoise/base.py\", line 95, in file_not_modified\\r\\n    return parsedate(last_requested) >= static_file.mtime\\r\\nTypeError: unorderable types: tuple() >= int()\\r\\n```', 'labels': [], 'number': 11, 'user': {'following_url': 'https://api.github.com/users/aodag/following{/other_user}', 'avatar_url': 'https://avatars.githubusercontent.com/u/218344?v=3', 'received_events_url': 'https://api.github.com/users/aodag/received_events', 'starred_url': 'https://api.github.com/users/aodag/starred{/owner}{/repo}', 'html_url': 'https://github.com/aodag', 'site_admin': False, 'events_url': 'https://api.github.com/users/aodag/events{/privacy}', 'id': 218344, 'gravatar_id': '', 'subscriptions_url': 'https://api.github.com/users/aodag/subscriptions', 'organizations_url': 'https://api.github.com/users/aodag/orgs', 'repos_url': 'https://api.github.com/users/aodag/repos', 'type': 'User', 'gists_url': 'https://api.github.com/users/aodag/gists{/gist_id}', 'url': 'https://api.github.com/users/aodag', 'login': 'aodag', 'followers_url': 'https://api.github.com/users/aodag/followers'}, 'labels_url': 'https://api.github.com/repos/evansd/whitenoise/issues/11/labels{/name}', 'url': 'https://api.github.com/repos/evansd/whitenoise/issues/11', 'title': 'Error on checking for file modification', 'comments': 2}"}}, {"model": "issues.issue", "pk": 63, "fields": {"created": "2016-02-21T03:07:41.684Z", "modified": "2016-02-21T03:07:41.684Z", "number": 10, "title": "ManifestStaticFilesStorage vs CachedStaticFilesStorage", "body": "Why do you use ManifestStaticFilesStorage instead of CachedStaticFilesStorage?\r\n\r\nIt seems like the Cached one would be better on a system like heroku, because the Django docs say that\r\n\r\n> This is mostly useful for situations in which you don\u2019t have access to the file system.\r\n\r\nWhat are the advantages of the Manifest?", "repo_owner": "evansd", "repo": "whitenoise", "raw": "{'created_at': '2014-05-20T12:45:06Z', 'locked': False, 'state': 'closed', 'milestone': None, 'id': 33884274, 'html_url': 'https://github.com/evansd/whitenoise/issues/10', 'repository_url': 'https://api.github.com/repos/evansd/whitenoise', 'comments_url': 'https://api.github.com/repos/evansd/whitenoise/issues/10/comments', 'assignee': None, 'closed_at': '2014-06-08T22:06:50Z', 'events_url': 'https://api.github.com/repos/evansd/whitenoise/issues/10/events', 'updated_at': '2015-10-14T10:44:36Z', 'body': 'Why do you use ManifestStaticFilesStorage instead of CachedStaticFilesStorage?\\r\\n\\r\\nIt seems like the Cached one would be better on a system like heroku, because the Django docs say that\\r\\n\\r\\n> This is mostly useful for situations in which you don\u2019t have access to the file system.\\r\\n\\r\\nWhat are the advantages of the Manifest?', 'labels': [], 'number': 10, 'user': {'following_url': 'https://api.github.com/users/saulshanabrook/following{/other_user}', 'avatar_url': 'https://avatars.githubusercontent.com/u/1186124?v=3', 'received_events_url': 'https://api.github.com/users/saulshanabrook/received_events', 'starred_url': 'https://api.github.com/users/saulshanabrook/starred{/owner}{/repo}', 'html_url': 'https://github.com/saulshanabrook', 'site_admin': False, 'events_url': 'https://api.github.com/users/saulshanabrook/events{/privacy}', 'id': 1186124, 'gravatar_id': '', 'subscriptions_url': 'https://api.github.com/users/saulshanabrook/subscriptions', 'organizations_url': 'https://api.github.com/users/saulshanabrook/orgs', 'repos_url': 'https://api.github.com/users/saulshanabrook/repos', 'type': 'User', 'gists_url': 'https://api.github.com/users/saulshanabrook/gists{/gist_id}', 'url': 'https://api.github.com/users/saulshanabrook', 'login': 'saulshanabrook', 'followers_url': 'https://api.github.com/users/saulshanabrook/followers'}, 'labels_url': 'https://api.github.com/repos/evansd/whitenoise/issues/10/labels{/name}', 'url': 'https://api.github.com/repos/evansd/whitenoise/issues/10', 'title': 'ManifestStaticFilesStorage vs CachedStaticFilesStorage', 'comments': 3}"}}, {"model": "issues.issue", "pk": 64, "fields": {"created": "2016-02-21T03:07:42.463Z", "modified": "2016-02-21T03:07:42.463Z", "number": 9, "title": "Fix typo in base docs", "body": "I was wondering why I would run WhiteNoise behind a Canadian.\r\n\r\n> if you're running WhiteNoise behind a CND,", "repo_owner": "evansd", "repo": "whitenoise", "raw": "{'created_at': '2014-04-17T23:20:00Z', 'locked': False, 'state': 'closed', 'milestone': None, 'pull_request': {'html_url': 'https://github.com/evansd/whitenoise/pull/9', 'diff_url': 'https://github.com/evansd/whitenoise/pull/9.diff', 'url': 'https://api.github.com/repos/evansd/whitenoise/pulls/9', 'patch_url': 'https://github.com/evansd/whitenoise/pull/9.patch'}, 'id': 31771094, 'html_url': 'https://github.com/evansd/whitenoise/pull/9', 'repository_url': 'https://api.github.com/repos/evansd/whitenoise', 'comments_url': 'https://api.github.com/repos/evansd/whitenoise/issues/9/comments', 'assignee': None, 'closed_at': '2014-04-18T16:05:23Z', 'events_url': 'https://api.github.com/repos/evansd/whitenoise/issues/9/events', 'updated_at': '2014-07-19T00:59:44Z', 'body': \"I was wondering why I would run WhiteNoise behind a Canadian.\\r\\n\\r\\n> if you're running WhiteNoise behind a CND,\", 'labels': [], 'number': 9, 'user': {'following_url': 'https://api.github.com/users/crccheck/following{/other_user}', 'avatar_url': 'https://avatars.githubusercontent.com/u/189908?v=3', 'received_events_url': 'https://api.github.com/users/crccheck/received_events', 'starred_url': 'https://api.github.com/users/crccheck/starred{/owner}{/repo}', 'html_url': 'https://github.com/crccheck', 'site_admin': False, 'events_url': 'https://api.github.com/users/crccheck/events{/privacy}', 'id': 189908, 'gravatar_id': '', 'subscriptions_url': 'https://api.github.com/users/crccheck/subscriptions', 'organizations_url': 'https://api.github.com/users/crccheck/orgs', 'repos_url': 'https://api.github.com/users/crccheck/repos', 'type': 'User', 'gists_url': 'https://api.github.com/users/crccheck/gists{/gist_id}', 'url': 'https://api.github.com/users/crccheck', 'login': 'crccheck', 'followers_url': 'https://api.github.com/users/crccheck/followers'}, 'labels_url': 'https://api.github.com/repos/evansd/whitenoise/issues/9/labels{/name}', 'url': 'https://api.github.com/repos/evansd/whitenoise/issues/9', 'title': 'Fix typo in base docs', 'comments': 1}"}}, {"model": "issues.issue", "pk": 65, "fields": {"created": "2016-02-21T03:07:43.173Z", "modified": "2016-02-21T03:07:43.173Z", "number": 8, "title": "Minor nitpick: When using on Python 3 the chained Exception output is confusing", "body": "Because Whitenoise does this in it's ``__call__`` method:\r\n\r\n```\r\ntry:\r\n    static_file = self.files[environ['PATH_INFO']]\r\nexcept KeyError:\r\n    return self.application(environ, start_response)\r\nelse:\r\n    return self.serve(static_file, environ, start_response)\r\n```\r\n\r\nIf the application itself raises an exception the chained exception looks like this:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/Users/dstufft/.virtualenvs/warehouse/lib/python3.4/site-packages/whitenoise/base.py\", line 48, in __call__\r\n    static_file = self.files[environ['PATH_INFO']]\r\nKeyError: '/account/login/'\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/Users/dstufft/projects/warehouse/warehouse/accounts/db.py\", line 70, in user_authenticate\r\n    password_hash,\r\n  File \"/Users/dstufft/.virtualenvs/warehouse/lib/python3.4/site-packages/passlib/context.py\", line 2613, in verify_and_update\r\n    record = self._get_or_identify_record(hash, scheme, category)\r\n  File \"/Users/dstufft/.virtualenvs/warehouse/lib/python3.4/site-packages/passlib/context.py\", line 2258, in _get_or_identify_record\r\n    return self._identify_record(hash, category)\r\n  File \"/Users/dstufft/.virtualenvs/warehouse/lib/python3.4/site-packages/passlib/context.py\", line 1455, in identify_record\r\n    raise ValueError(\"hash could not be identified\")\r\nValueError: hash could not be identified\r\n```\r\n\r\nWhich is confusing when you first look at it why the exception is inside of Whitenoise for something that obviously isn't a static file.\r\n\r\nIt would be cool for this code to be something more like:\r\n\r\n```\r\nstatic_file = environ.get('PATH_INFO')\r\nif static_file is None:\r\n    return self.application(environ, start_response)\r\nelse:\r\n    return self.serve(static_file, environ, start_response)\r\n```", "repo_owner": "evansd", "repo": "whitenoise", "raw": "{'created_at': '2014-04-06T00:00:03Z', 'locked': False, 'state': 'closed', 'milestone': None, 'id': 30927025, 'html_url': 'https://github.com/evansd/whitenoise/issues/8', 'repository_url': 'https://api.github.com/repos/evansd/whitenoise', 'comments_url': 'https://api.github.com/repos/evansd/whitenoise/issues/8/comments', 'assignee': None, 'closed_at': '2014-04-06T11:18:06Z', 'events_url': 'https://api.github.com/repos/evansd/whitenoise/issues/8/events', 'updated_at': '2014-04-06T11:18:06Z', 'body': 'Because Whitenoise does this in it\\'s ``__call__`` method:\\r\\n\\r\\n```\\r\\ntry:\\r\\n    static_file = self.files[environ[\\'PATH_INFO\\']]\\r\\nexcept KeyError:\\r\\n    return self.application(environ, start_response)\\r\\nelse:\\r\\n    return self.serve(static_file, environ, start_response)\\r\\n```\\r\\n\\r\\nIf the application itself raises an exception the chained exception looks like this:\\r\\n\\r\\n```\\r\\nTraceback (most recent call last):\\r\\n  File \"/Users/dstufft/.virtualenvs/warehouse/lib/python3.4/site-packages/whitenoise/base.py\", line 48, in __call__\\r\\n    static_file = self.files[environ[\\'PATH_INFO\\']]\\r\\nKeyError: \\'/account/login/\\'\\r\\n\\r\\nDuring handling of the above exception, another exception occurred:\\r\\n\\r\\nTraceback (most recent call last):\\r\\n  File \"/Users/dstufft/projects/warehouse/warehouse/accounts/db.py\", line 70, in user_authenticate\\r\\n    password_hash,\\r\\n  File \"/Users/dstufft/.virtualenvs/warehouse/lib/python3.4/site-packages/passlib/context.py\", line 2613, in verify_and_update\\r\\n    record = self._get_or_identify_record(hash, scheme, category)\\r\\n  File \"/Users/dstufft/.virtualenvs/warehouse/lib/python3.4/site-packages/passlib/context.py\", line 2258, in _get_or_identify_record\\r\\n    return self._identify_record(hash, category)\\r\\n  File \"/Users/dstufft/.virtualenvs/warehouse/lib/python3.4/site-packages/passlib/context.py\", line 1455, in identify_record\\r\\n    raise ValueError(\"hash could not be identified\")\\r\\nValueError: hash could not be identified\\r\\n```\\r\\n\\r\\nWhich is confusing when you first look at it why the exception is inside of Whitenoise for something that obviously isn\\'t a static file.\\r\\n\\r\\nIt would be cool for this code to be something more like:\\r\\n\\r\\n```\\r\\nstatic_file = environ.get(\\'PATH_INFO\\')\\r\\nif static_file is None:\\r\\n    return self.application(environ, start_response)\\r\\nelse:\\r\\n    return self.serve(static_file, environ, start_response)\\r\\n```', 'labels': [], 'number': 8, 'user': {'following_url': 'https://api.github.com/users/dstufft/following{/other_user}', 'avatar_url': 'https://avatars.githubusercontent.com/u/145979?v=3', 'received_events_url': 'https://api.github.com/users/dstufft/received_events', 'starred_url': 'https://api.github.com/users/dstufft/starred{/owner}{/repo}', 'html_url': 'https://github.com/dstufft', 'site_admin': False, 'events_url': 'https://api.github.com/users/dstufft/events{/privacy}', 'id': 145979, 'gravatar_id': '', 'subscriptions_url': 'https://api.github.com/users/dstufft/subscriptions', 'organizations_url': 'https://api.github.com/users/dstufft/orgs', 'repos_url': 'https://api.github.com/users/dstufft/repos', 'type': 'User', 'gists_url': 'https://api.github.com/users/dstufft/gists{/gist_id}', 'url': 'https://api.github.com/users/dstufft', 'login': 'dstufft', 'followers_url': 'https://api.github.com/users/dstufft/followers'}, 'labels_url': 'https://api.github.com/repos/evansd/whitenoise/issues/8/labels{/name}', 'url': 'https://api.github.com/repos/evansd/whitenoise/issues/8', 'title': 'Minor nitpick: When using on Python 3 the chained Exception output is confusing', 'comments': 2}"}}, {"model": "issues.issue", "pk": 66, "fields": {"created": "2016-02-21T03:07:43.938Z", "modified": "2016-02-21T03:07:43.938Z", "number": 7, "title": "Add GZIP option to collect static", "body": "I think it would make sense to have an option to run `gzipstatic` after `collectstatic`. I have added this feature under an optional setting `WHITENOISE_GZIP_COLLECTSTATIC`. \r\n\r\nIt might seem to be a little weird to override the collectstatic command, but it seems to somewhat of an accepted practice. django-storages [just did the same thing](https://bitbucket.org/david/django-storages/pull-request/89/add-fast-collectstatic-management-command/diff#comment-1357341) with their fast collectstatic command. South also does the same with `syncdb`.\r\n\r\nI think my code is right, but I can not get the tests to pass. It must have something to do with the shared `setUpClass` and `tearDownClass` methods, because my new tests pass fine, but they break existing tests. When I comment out my tests, or change the call from `collecstatic` to  `gzipstatic`, the other tests pass as well. I tried to figure out how it breaks the other tests, but was unable. I also made a go at refactoring the tests to change the `setUpClass` to `setUp` to see if that would make the tests less dependent on the state of others, but that seemed to break things as well. Would love to get some feedback or ideas on what to do.", "repo_owner": "evansd", "repo": "whitenoise", "raw": "{'created_at': '2014-03-14T20:54:20Z', 'locked': False, 'state': 'closed', 'milestone': None, 'pull_request': {'html_url': 'https://github.com/evansd/whitenoise/pull/7', 'diff_url': 'https://github.com/evansd/whitenoise/pull/7.diff', 'url': 'https://api.github.com/repos/evansd/whitenoise/pulls/7', 'patch_url': 'https://github.com/evansd/whitenoise/pull/7.patch'}, 'id': 29469525, 'html_url': 'https://github.com/evansd/whitenoise/pull/7', 'repository_url': 'https://api.github.com/repos/evansd/whitenoise', 'comments_url': 'https://api.github.com/repos/evansd/whitenoise/issues/7/comments', 'assignee': None, 'closed_at': '2014-03-15T11:08:23Z', 'events_url': 'https://api.github.com/repos/evansd/whitenoise/issues/7/events', 'updated_at': '2014-06-24T05:29:20Z', 'body': 'I think it would make sense to have an option to run `gzipstatic` after `collectstatic`. I have added this feature under an optional setting `WHITENOISE_GZIP_COLLECTSTATIC`. \\r\\n\\r\\nIt might seem to be a little weird to override the collectstatic command, but it seems to somewhat of an accepted practice. django-storages [just did the same thing](https://bitbucket.org/david/django-storages/pull-request/89/add-fast-collectstatic-management-command/diff#comment-1357341) with their fast collectstatic command. South also does the same with `syncdb`.\\r\\n\\r\\nI think my code is right, but I can not get the tests to pass. It must have something to do with the shared `setUpClass` and `tearDownClass` methods, because my new tests pass fine, but they break existing tests. When I comment out my tests, or change the call from `collecstatic` to  `gzipstatic`, the other tests pass as well. I tried to figure out how it breaks the other tests, but was unable. I also made a go at refactoring the tests to change the `setUpClass` to `setUp` to see if that would make the tests less dependent on the state of others, but that seemed to break things as well. Would love to get some feedback or ideas on what to do.', 'labels': [], 'number': 7, 'user': {'following_url': 'https://api.github.com/users/saulshanabrook/following{/other_user}', 'avatar_url': 'https://avatars.githubusercontent.com/u/1186124?v=3', 'received_events_url': 'https://api.github.com/users/saulshanabrook/received_events', 'starred_url': 'https://api.github.com/users/saulshanabrook/starred{/owner}{/repo}', 'html_url': 'https://github.com/saulshanabrook', 'site_admin': False, 'events_url': 'https://api.github.com/users/saulshanabrook/events{/privacy}', 'id': 1186124, 'gravatar_id': '', 'subscriptions_url': 'https://api.github.com/users/saulshanabrook/subscriptions', 'organizations_url': 'https://api.github.com/users/saulshanabrook/orgs', 'repos_url': 'https://api.github.com/users/saulshanabrook/repos', 'type': 'User', 'gists_url': 'https://api.github.com/users/saulshanabrook/gists{/gist_id}', 'url': 'https://api.github.com/users/saulshanabrook', 'login': 'saulshanabrook', 'followers_url': 'https://api.github.com/users/saulshanabrook/followers'}, 'labels_url': 'https://api.github.com/repos/evansd/whitenoise/issues/7/labels{/name}', 'url': 'https://api.github.com/repos/evansd/whitenoise/issues/7', 'title': 'Add GZIP option to collect static', 'comments': 2}"}}, {"model": "issues.issue", "pk": 67, "fields": {"created": "2016-02-21T03:07:44.705Z", "modified": "2016-02-21T03:07:44.706Z", "number": 6, "title": "Serve Top Level Files with Django", "body": "How would I serve files like `favicon.ico` with the Django setup?", "repo_owner": "evansd", "repo": "whitenoise", "raw": "{'created_at': '2014-03-14T17:38:20Z', 'locked': False, 'state': 'closed', 'milestone': None, 'id': 29455361, 'html_url': 'https://github.com/evansd/whitenoise/issues/6', 'repository_url': 'https://api.github.com/repos/evansd/whitenoise', 'comments_url': 'https://api.github.com/repos/evansd/whitenoise/issues/6/comments', 'assignee': None, 'closed_at': '2014-03-14T17:46:34Z', 'events_url': 'https://api.github.com/repos/evansd/whitenoise/issues/6/events', 'updated_at': '2014-03-14T17:47:15Z', 'body': 'How would I serve files like `favicon.ico` with the Django setup?', 'labels': [], 'number': 6, 'user': {'following_url': 'https://api.github.com/users/saulshanabrook/following{/other_user}', 'avatar_url': 'https://avatars.githubusercontent.com/u/1186124?v=3', 'received_events_url': 'https://api.github.com/users/saulshanabrook/received_events', 'starred_url': 'https://api.github.com/users/saulshanabrook/starred{/owner}{/repo}', 'html_url': 'https://github.com/saulshanabrook', 'site_admin': False, 'events_url': 'https://api.github.com/users/saulshanabrook/events{/privacy}', 'id': 1186124, 'gravatar_id': '', 'subscriptions_url': 'https://api.github.com/users/saulshanabrook/subscriptions', 'organizations_url': 'https://api.github.com/users/saulshanabrook/orgs', 'repos_url': 'https://api.github.com/users/saulshanabrook/repos', 'type': 'User', 'gists_url': 'https://api.github.com/users/saulshanabrook/gists{/gist_id}', 'url': 'https://api.github.com/users/saulshanabrook', 'login': 'saulshanabrook', 'followers_url': 'https://api.github.com/users/saulshanabrook/followers'}, 'labels_url': 'https://api.github.com/repos/evansd/whitenoise/issues/6/labels{/name}', 'url': 'https://api.github.com/repos/evansd/whitenoise/issues/6', 'title': 'Serve Top Level Files with Django', 'comments': 2}"}}, {"model": "issues.issue", "pk": 68, "fields": {"created": "2016-02-21T03:07:45.476Z", "modified": "2016-02-21T03:07:45.477Z", "number": 5, "title": "Should Whitenoise set CORS headers by default for all files?", "body": "Currently, Whitenoise sets an `Access-Control-Allow-Origin: *` header by default for all font files. This was done so that your fonts continue to work in Firefox if you're using a CDN.\r\n\r\nI've since discovered other cases where CORS headers are needed, for instance the [respond.js](https://github.com/scottjehl/Respond) media query polyfill for IE which loads stylesheets over XHR.\r\n\r\nI'm tempted to set  `Access-Control-Allow-Origin: *` header by default for **all** files. My reasoning is that:\r\n  1. it will mean that putting a CDN in front of Whitenoise _just works_, without any nasty cross-origin surprises;\r\n  2. given that Whitenoise only serves public, static files there are no security implications to allowing cross-origin requests.\r\n\r\nI'm aware though that automatically setting these headers is a slightly surprising thing for an application to do and I'd really welcome feedback on whether people think it's a good idea.", "repo_owner": "evansd", "repo": "whitenoise", "raw": "{'created_at': '2014-03-12T09:26:29Z', 'locked': False, 'state': 'closed', 'milestone': None, 'id': 29247942, 'html_url': 'https://github.com/evansd/whitenoise/issues/5', 'repository_url': 'https://api.github.com/repos/evansd/whitenoise', 'comments_url': 'https://api.github.com/repos/evansd/whitenoise/issues/5/comments', 'assignee': None, 'closed_at': '2014-03-26T17:29:34Z', 'events_url': 'https://api.github.com/repos/evansd/whitenoise/issues/5/events', 'updated_at': '2014-03-26T17:29:34Z', 'body': \"Currently, Whitenoise sets an `Access-Control-Allow-Origin: *` header by default for all font files. This was done so that your fonts continue to work in Firefox if you're using a CDN.\\r\\n\\r\\nI've since discovered other cases where CORS headers are needed, for instance the [respond.js](https://github.com/scottjehl/Respond) media query polyfill for IE which loads stylesheets over XHR.\\r\\n\\r\\nI'm tempted to set  `Access-Control-Allow-Origin: *` header by default for **all** files. My reasoning is that:\\r\\n  1. it will mean that putting a CDN in front of Whitenoise _just works_, without any nasty cross-origin surprises;\\r\\n  2. given that Whitenoise only serves public, static files there are no security implications to allowing cross-origin requests.\\r\\n\\r\\nI'm aware though that automatically setting these headers is a slightly surprising thing for an application to do and I'd really welcome feedback on whether people think it's a good idea.\", 'labels': [{'color': 'cc317c', 'url': 'https://api.github.com/repos/evansd/whitenoise/labels/question', 'name': 'question'}], 'number': 5, 'user': {'following_url': 'https://api.github.com/users/evansd/following{/other_user}', 'avatar_url': 'https://avatars.githubusercontent.com/u/19630?v=3', 'received_events_url': 'https://api.github.com/users/evansd/received_events', 'starred_url': 'https://api.github.com/users/evansd/starred{/owner}{/repo}', 'html_url': 'https://github.com/evansd', 'site_admin': False, 'events_url': 'https://api.github.com/users/evansd/events{/privacy}', 'id': 19630, 'gravatar_id': '', 'subscriptions_url': 'https://api.github.com/users/evansd/subscriptions', 'organizations_url': 'https://api.github.com/users/evansd/orgs', 'repos_url': 'https://api.github.com/users/evansd/repos', 'type': 'User', 'gists_url': 'https://api.github.com/users/evansd/gists{/gist_id}', 'url': 'https://api.github.com/users/evansd', 'login': 'evansd', 'followers_url': 'https://api.github.com/users/evansd/followers'}, 'labels_url': 'https://api.github.com/repos/evansd/whitenoise/issues/5/labels{/name}', 'url': 'https://api.github.com/repos/evansd/whitenoise/issues/5', 'title': 'Should Whitenoise set CORS headers by default for all files?', 'comments': 1}"}}, {"model": "issues.issue", "pk": 69, "fields": {"created": "2016-02-21T03:07:46.194Z", "modified": "2016-02-21T03:07:46.194Z", "number": 4, "title": "Installing from PyPI doesn't install include Django management command", "body": "Only the 'whitenoise' package was given in setup.py (and not also whitenoise.management and whitenoise.management.commands) which led to these packages not being included in site-packages after installing from PyPI. This patch fixes that.\r\n\r\nFor reference, installing v0.12:\r\n\r\n```bash\r\n$ pip install --find-links ./lib --no-index whitenoise==0.12\r\nDownloading/unpacking whitenoise==0.12\r\nSuccessfully installed whitenoise\r\n$ tree venv/lib/python3.3/site-packages/whitenoise\r\nvenv/lib/python3.3/site-packages/whitenoise\r\n\u251c\u2500\u2500 __init__.py\r\n\u251c\u2500\u2500 base.py\r\n\u251c\u2500\u2500 django.py\r\n\u2514\u2500\u2500 gzip.py\r\n```\r\n\r\nInstalling fixed version (v0.13):\r\n\r\n```bash\r\n$ pip install --find-links ./lib --no-index whitenoise==0.13\r\nDownloading/unpacking whitenoise==0.13\r\nSuccessfully installed whitenoise\r\n$ tree venv/lib/python3.3/site-packages/whitenoise\r\nvenv/lib/python3.3/site-packages/whitenoise\r\n\u251c\u2500\u2500 __init__.py\r\n\u251c\u2500\u2500 base.py\r\n\u251c\u2500\u2500 django.py\r\n\u251c\u2500\u2500 gzip.py\r\n\u2514\u2500\u2500 management\r\n    \u251c\u2500\u2500 __init__.py\r\n    \u2514\u2500\u2500 commands\r\n        \u251c\u2500\u2500 __init__.py\r\n        \u2514\u2500\u2500 gzipstatic.py\r\n```", "repo_owner": "evansd", "repo": "whitenoise", "raw": "{'created_at': '2014-03-11T23:29:38Z', 'locked': False, 'state': 'closed', 'milestone': None, 'pull_request': {'html_url': 'https://github.com/evansd/whitenoise/pull/4', 'diff_url': 'https://github.com/evansd/whitenoise/pull/4.diff', 'url': 'https://api.github.com/repos/evansd/whitenoise/pulls/4', 'patch_url': 'https://github.com/evansd/whitenoise/pull/4.patch'}, 'id': 29224424, 'html_url': 'https://github.com/evansd/whitenoise/pull/4', 'repository_url': 'https://api.github.com/repos/evansd/whitenoise', 'comments_url': 'https://api.github.com/repos/evansd/whitenoise/issues/4/comments', 'assignee': None, 'closed_at': '2014-03-12T07:51:25Z', 'events_url': 'https://api.github.com/repos/evansd/whitenoise/issues/4/events', 'updated_at': '2014-07-14T11:45:58Z', 'body': \"Only the 'whitenoise' package was given in setup.py (and not also whitenoise.management and whitenoise.management.commands) which led to these packages not being included in site-packages after installing from PyPI. This patch fixes that.\\r\\n\\r\\nFor reference, installing v0.12:\\r\\n\\r\\n```bash\\r\\n$ pip install --find-links ./lib --no-index whitenoise==0.12\\r\\nDownloading/unpacking whitenoise==0.12\\r\\nSuccessfully installed whitenoise\\r\\n$ tree venv/lib/python3.3/site-packages/whitenoise\\r\\nvenv/lib/python3.3/site-packages/whitenoise\\r\\n\u251c\u2500\u2500 __init__.py\\r\\n\u251c\u2500\u2500 base.py\\r\\n\u251c\u2500\u2500 django.py\\r\\n\u2514\u2500\u2500 gzip.py\\r\\n```\\r\\n\\r\\nInstalling fixed version (v0.13):\\r\\n\\r\\n```bash\\r\\n$ pip install --find-links ./lib --no-index whitenoise==0.13\\r\\nDownloading/unpacking whitenoise==0.13\\r\\nSuccessfully installed whitenoise\\r\\n$ tree venv/lib/python3.3/site-packages/whitenoise\\r\\nvenv/lib/python3.3/site-packages/whitenoise\\r\\n\u251c\u2500\u2500 __init__.py\\r\\n\u251c\u2500\u2500 base.py\\r\\n\u251c\u2500\u2500 django.py\\r\\n\u251c\u2500\u2500 gzip.py\\r\\n\u2514\u2500\u2500 management\\r\\n    \u251c\u2500\u2500 __init__.py\\r\\n    \u2514\u2500\u2500 commands\\r\\n        \u251c\u2500\u2500 __init__.py\\r\\n        \u2514\u2500\u2500 gzipstatic.py\\r\\n```\", 'labels': [], 'number': 4, 'user': {'following_url': 'https://api.github.com/users/mkai/following{/other_user}', 'avatar_url': 'https://avatars.githubusercontent.com/u/322750?v=3', 'received_events_url': 'https://api.github.com/users/mkai/received_events', 'starred_url': 'https://api.github.com/users/mkai/starred{/owner}{/repo}', 'html_url': 'https://github.com/mkai', 'site_admin': False, 'events_url': 'https://api.github.com/users/mkai/events{/privacy}', 'id': 322750, 'gravatar_id': '', 'subscriptions_url': 'https://api.github.com/users/mkai/subscriptions', 'organizations_url': 'https://api.github.com/users/mkai/orgs', 'repos_url': 'https://api.github.com/users/mkai/repos', 'type': 'User', 'gists_url': 'https://api.github.com/users/mkai/gists{/gist_id}', 'url': 'https://api.github.com/users/mkai', 'login': 'mkai', 'followers_url': 'https://api.github.com/users/mkai/followers'}, 'labels_url': 'https://api.github.com/repos/evansd/whitenoise/issues/4/labels{/name}', 'url': 'https://api.github.com/repos/evansd/whitenoise/issues/4', 'title': \"Installing from PyPI doesn't install include Django management command\", 'comments': 1}"}}, {"model": "issues.issue", "pk": 70, "fields": {"created": "2016-02-21T03:07:46.949Z", "modified": "2016-02-21T03:07:46.949Z", "number": 3, "title": "Deterministically compress files", "body": "Gzip contains a timestamp in the compressed stream. If you don't explicitly give it one then the Python module will include the current time instead. This means that if you just blindly compress everything anytime a file changes and try to commit those artifacts then you end up with a new .gz file everytime. This change will make it so that the output is the same as long as the files are the same (including modification time).\r\n\r\nIf you accept this I'd love a new release with it as well :)", "repo_owner": "evansd", "repo": "whitenoise", "raw": "{'created_at': '2014-03-06T00:07:54Z', 'locked': False, 'state': 'closed', 'milestone': None, 'pull_request': {'html_url': 'https://github.com/evansd/whitenoise/pull/3', 'diff_url': 'https://github.com/evansd/whitenoise/pull/3.diff', 'url': 'https://api.github.com/repos/evansd/whitenoise/pulls/3', 'patch_url': 'https://github.com/evansd/whitenoise/pull/3.patch'}, 'id': 28838790, 'html_url': 'https://github.com/evansd/whitenoise/pull/3', 'repository_url': 'https://api.github.com/repos/evansd/whitenoise', 'comments_url': 'https://api.github.com/repos/evansd/whitenoise/issues/3/comments', 'assignee': None, 'closed_at': '2014-03-06T14:35:53Z', 'events_url': 'https://api.github.com/repos/evansd/whitenoise/issues/3/events', 'updated_at': '2014-07-03T01:28:33Z', 'body': \"Gzip contains a timestamp in the compressed stream. If you don't explicitly give it one then the Python module will include the current time instead. This means that if you just blindly compress everything anytime a file changes and try to commit those artifacts then you end up with a new .gz file everytime. This change will make it so that the output is the same as long as the files are the same (including modification time).\\r\\n\\r\\nIf you accept this I'd love a new release with it as well :)\", 'labels': [], 'number': 3, 'user': {'following_url': 'https://api.github.com/users/dstufft/following{/other_user}', 'avatar_url': 'https://avatars.githubusercontent.com/u/145979?v=3', 'received_events_url': 'https://api.github.com/users/dstufft/received_events', 'starred_url': 'https://api.github.com/users/dstufft/starred{/owner}{/repo}', 'html_url': 'https://github.com/dstufft', 'site_admin': False, 'events_url': 'https://api.github.com/users/dstufft/events{/privacy}', 'id': 145979, 'gravatar_id': '', 'subscriptions_url': 'https://api.github.com/users/dstufft/subscriptions', 'organizations_url': 'https://api.github.com/users/dstufft/orgs', 'repos_url': 'https://api.github.com/users/dstufft/repos', 'type': 'User', 'gists_url': 'https://api.github.com/users/dstufft/gists{/gist_id}', 'url': 'https://api.github.com/users/dstufft', 'login': 'dstufft', 'followers_url': 'https://api.github.com/users/dstufft/followers'}, 'labels_url': 'https://api.github.com/repos/evansd/whitenoise/issues/3/labels{/name}', 'url': 'https://api.github.com/repos/evansd/whitenoise/issues/3', 'title': 'Deterministically compress files', 'comments': 6}"}}, {"model": "issues.issue", "pk": 71, "fields": {"created": "2016-02-21T03:07:47.713Z", "modified": "2016-02-21T03:07:47.714Z", "number": 2, "title": "Make a new release?", "body": "Would it be at all possible to get a new release issued? ;)", "repo_owner": "evansd", "repo": "whitenoise", "raw": "{'created_at': '2014-03-04T20:19:22Z', 'locked': False, 'state': 'closed', 'milestone': None, 'id': 28737101, 'html_url': 'https://github.com/evansd/whitenoise/issues/2', 'repository_url': 'https://api.github.com/repos/evansd/whitenoise', 'comments_url': 'https://api.github.com/repos/evansd/whitenoise/issues/2/comments', 'assignee': None, 'closed_at': '2014-03-05T15:42:25Z', 'events_url': 'https://api.github.com/repos/evansd/whitenoise/issues/2/events', 'updated_at': '2014-03-05T15:42:25Z', 'body': 'Would it be at all possible to get a new release issued? ;)', 'labels': [], 'number': 2, 'user': {'following_url': 'https://api.github.com/users/dstufft/following{/other_user}', 'avatar_url': 'https://avatars.githubusercontent.com/u/145979?v=3', 'received_events_url': 'https://api.github.com/users/dstufft/received_events', 'starred_url': 'https://api.github.com/users/dstufft/starred{/owner}{/repo}', 'html_url': 'https://github.com/dstufft', 'site_admin': False, 'events_url': 'https://api.github.com/users/dstufft/events{/privacy}', 'id': 145979, 'gravatar_id': '', 'subscriptions_url': 'https://api.github.com/users/dstufft/subscriptions', 'organizations_url': 'https://api.github.com/users/dstufft/orgs', 'repos_url': 'https://api.github.com/users/dstufft/repos', 'type': 'User', 'gists_url': 'https://api.github.com/users/dstufft/gists{/gist_id}', 'url': 'https://api.github.com/users/dstufft', 'login': 'dstufft', 'followers_url': 'https://api.github.com/users/dstufft/followers'}, 'labels_url': 'https://api.github.com/repos/evansd/whitenoise/issues/2/labels{/name}', 'url': 'https://api.github.com/repos/evansd/whitenoise/issues/2', 'title': 'Make a new release?', 'comments': 3}"}}, {"model": "issues.issue", "pk": 72, "fields": {"created": "2016-02-21T03:07:48.413Z", "modified": "2016-02-21T03:07:48.413Z", "number": 1, "title": "Py3 Bug -> Cannot index dict_keys()", "body": "If you pass a parameter like ``max_age`` on Python3 then Whitenoise blows up:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/Users/dstufft/.virtualenvs/warehouse/bin/warehouse\", line 9, in <module>\r\n    load_entry_point('warehouse==14.2.1', 'console_scripts', 'warehouse')()\r\n  File \"/Users/dstufft/projects/warehouse/warehouse/__main__.py\", line 23, in main\r\n    return Warehouse.from_cli(sys.argv[1:])\r\n  File \"/Users/dstufft/projects/warehouse/warehouse/application.py\", line 243, in from_cli\r\n    app = cls.from_yaml(*configs)\r\n  File \"/Users/dstufft/projects/warehouse/warehouse/application.py\", line 217, in from_yaml\r\n    return cls(config=config, **kwargs)\r\n  File \"/Users/dstufft/projects/warehouse/warehouse/application.py\", line 172, in __init__\r\n    max_age=31560000,\r\n  File \"/Users/dstufft/.virtualenvs/warehouse/lib/python3.3/site-packages/whitenoise/base.py\", line 30, in __init__\r\n    kwargs.keys()[0]))\r\n```", "repo_owner": "evansd", "repo": "whitenoise", "raw": "{'created_at': '2014-03-04T20:16:17Z', 'locked': False, 'state': 'closed', 'milestone': None, 'id': 28736900, 'html_url': 'https://github.com/evansd/whitenoise/issues/1', 'repository_url': 'https://api.github.com/repos/evansd/whitenoise', 'comments_url': 'https://api.github.com/repos/evansd/whitenoise/issues/1/comments', 'assignee': None, 'closed_at': '2014-03-05T08:06:56Z', 'events_url': 'https://api.github.com/repos/evansd/whitenoise/issues/1/events', 'updated_at': '2014-03-05T12:04:18Z', 'body': 'If you pass a parameter like ``max_age`` on Python3 then Whitenoise blows up:\\r\\n\\r\\n```\\r\\nTraceback (most recent call last):\\r\\n  File \"/Users/dstufft/.virtualenvs/warehouse/bin/warehouse\", line 9, in <module>\\r\\n    load_entry_point(\\'warehouse==14.2.1\\', \\'console_scripts\\', \\'warehouse\\')()\\r\\n  File \"/Users/dstufft/projects/warehouse/warehouse/__main__.py\", line 23, in main\\r\\n    return Warehouse.from_cli(sys.argv[1:])\\r\\n  File \"/Users/dstufft/projects/warehouse/warehouse/application.py\", line 243, in from_cli\\r\\n    app = cls.from_yaml(*configs)\\r\\n  File \"/Users/dstufft/projects/warehouse/warehouse/application.py\", line 217, in from_yaml\\r\\n    return cls(config=config, **kwargs)\\r\\n  File \"/Users/dstufft/projects/warehouse/warehouse/application.py\", line 172, in __init__\\r\\n    max_age=31560000,\\r\\n  File \"/Users/dstufft/.virtualenvs/warehouse/lib/python3.3/site-packages/whitenoise/base.py\", line 30, in __init__\\r\\n    kwargs.keys()[0]))\\r\\n```', 'labels': [], 'number': 1, 'user': {'following_url': 'https://api.github.com/users/dstufft/following{/other_user}', 'avatar_url': 'https://avatars.githubusercontent.com/u/145979?v=3', 'received_events_url': 'https://api.github.com/users/dstufft/received_events', 'starred_url': 'https://api.github.com/users/dstufft/starred{/owner}{/repo}', 'html_url': 'https://github.com/dstufft', 'site_admin': False, 'events_url': 'https://api.github.com/users/dstufft/events{/privacy}', 'id': 145979, 'gravatar_id': '', 'subscriptions_url': 'https://api.github.com/users/dstufft/subscriptions', 'organizations_url': 'https://api.github.com/users/dstufft/orgs', 'repos_url': 'https://api.github.com/users/dstufft/repos', 'type': 'User', 'gists_url': 'https://api.github.com/users/dstufft/gists{/gist_id}', 'url': 'https://api.github.com/users/dstufft', 'login': 'dstufft', 'followers_url': 'https://api.github.com/users/dstufft/followers'}, 'labels_url': 'https://api.github.com/repos/evansd/whitenoise/issues/1/labels{/name}', 'url': 'https://api.github.com/repos/evansd/whitenoise/issues/1', 'title': 'Py3 Bug -> Cannot index dict_keys()', 'comments': 2}"}}, {"model": "issues.tag", "pk": 7, "fields": {"created": "2016-02-21T03:03:47.509Z", "modified": "2016-02-21T03:03:47.510Z", "issue": 1, "name": "issue", "relevance": 0.625}}, {"model": "issues.tag", "pk": 8, "fields": {"created": "2016-02-21T03:03:48.251Z", "modified": "2016-02-21T03:03:48.251Z", "issue": 2, "name": "URL", "relevance": 0.976}}, {"model": "issues.tag", "pk": 9, "fields": {"created": "2016-02-21T03:03:48.253Z", "modified": "2016-02-21T03:03:48.255Z", "issue": 2, "name": "DjangoWhiteNoise", "relevance": 0.732}}, {"model": "issues.tag", "pk": 10, "fields": {"created": "2016-02-21T03:03:48.256Z", "modified": "2016-02-21T03:03:48.256Z", "issue": 2, "name": "Django development server", "relevance": 0.61}}, {"model": "issues.tag", "pk": 11, "fields": {"created": "2016-02-21T03:03:48.257Z", "modified": "2016-02-21T03:03:48.258Z", "issue": 2, "name": "accidental multiple slashes", "relevance": 0.61}}, {"model": "issues.tag", "pk": 12, "fields": {"created": "2016-02-21T03:03:48.258Z", "modified": "2016-02-21T03:03:48.259Z", "issue": 2, "name": "site", "relevance": 0.488}}, {"model": "issues.tag", "pk": 13, "fields": {"created": "2016-02-21T03:03:48.260Z", "modified": "2016-02-21T03:03:48.260Z", "issue": 2, "name": "asset", "relevance": 0.488}}, {"model": "issues.tag", "pk": 14, "fields": {"created": "2016-02-21T03:03:48.261Z", "modified": "2016-02-21T03:03:48.261Z", "issue": 2, "name": "way Django", "relevance": 0.366}}, {"model": "issues.tag", "pk": 15, "fields": {"created": "2016-02-21T03:03:48.262Z", "modified": "2016-02-21T03:03:48.262Z", "issue": 2, "name": "multiple slashes", "relevance": 0.366}}, {"model": "issues.tag", "pk": 16, "fields": {"created": "2016-02-21T03:03:48.263Z", "modified": "2016-02-21T03:03:48.264Z", "issue": 2, "name": "frustrating situation", "relevance": 0.366}}, {"model": "issues.tag", "pk": 17, "fields": {"created": "2016-02-21T03:03:48.265Z", "modified": "2016-02-21T03:03:48.265Z", "issue": 2, "name": "deployed environment", "relevance": 0.366}}, {"model": "issues.tag", "pk": 18, "fields": {"created": "2016-02-21T03:03:49.037Z", "modified": "2016-02-21T03:03:49.037Z", "issue": 3, "name": "current PyPI release", "relevance": 0.962}}, {"model": "issues.tag", "pk": 19, "fields": {"created": "2016-02-21T03:03:49.039Z", "modified": "2016-02-21T03:03:49.039Z", "issue": 3, "name": "Docs content", "relevance": 0.577}}, {"model": "issues.tag", "pk": 20, "fields": {"created": "2016-02-21T03:03:49.040Z", "modified": "2016-02-21T03:03:49.040Z", "issue": 3, "name": "duplicated content", "relevance": 0.577}}, {"model": "issues.tag", "pk": 21, "fields": {"created": "2016-02-21T03:03:49.041Z", "modified": "2016-02-21T03:03:49.041Z", "issue": 3, "name": "main docs", "relevance": 0.577}}, {"model": "issues.tag", "pk": 22, "fields": {"created": "2016-02-21T03:03:49.042Z", "modified": "2016-02-21T03:03:49.042Z", "issue": 3, "name": "latter", "relevance": 0.385}}, {"model": "issues.tag", "pk": 23, "fields": {"created": "2016-02-21T03:03:49.043Z", "modified": "2016-02-21T03:03:49.043Z", "issue": 3, "name": "master", "relevance": 0.385}}, {"model": "issues.tag", "pk": 24, "fields": {"created": "2016-02-21T03:03:49.044Z", "modified": "2016-02-21T03:03:49.045Z", "issue": 3, "name": "branch", "relevance": 0.385}}, {"model": "issues.tag", "pk": 25, "fields": {"created": "2016-02-21T03:03:49.047Z", "modified": "2016-02-21T03:03:49.047Z", "issue": 3, "name": "README", "relevance": 0.385}}, {"model": "issues.tag", "pk": 26, "fields": {"created": "2016-02-21T03:03:49.048Z", "modified": "2016-02-21T03:03:49.048Z", "issue": 3, "name": "WhiteNoise", "relevance": 0.385}}, {"model": "issues.tag", "pk": 27, "fields": {"created": "2016-02-21T03:03:49.049Z", "modified": "2016-02-21T03:03:49.050Z", "issue": 3, "name": "users", "relevance": 0.385}}, {"model": "issues.tag", "pk": 28, "fields": {"created": "2016-02-21T03:03:49.795Z", "modified": "2016-02-21T03:03:49.796Z", "issue": 4, "name": "Django apps", "relevance": 0.968}}, {"model": "issues.tag", "pk": 29, "fields": {"created": "2016-02-21T03:03:49.798Z", "modified": "2016-02-21T03:03:49.798Z", "issue": 4, "name": "repo home page", "relevance": 0.806}}, {"model": "issues.tag", "pk": 30, "fields": {"created": "2016-02-21T03:03:49.799Z", "modified": "2016-02-21T03:03:49.799Z", "issue": 4, "name": "QuickStart", "relevance": 0.645}}, {"model": "issues.tag", "pk": 31, "fields": {"created": "2016-02-21T03:03:49.800Z", "modified": "2016-02-21T03:03:49.800Z", "issue": 4, "name": "error ImportError", "relevance": 0.484}}, {"model": "issues.tag", "pk": 32, "fields": {"created": "2016-02-21T03:03:49.801Z", "modified": "2016-02-21T03:03:49.802Z", "issue": 4, "name": "Github repo", "relevance": 0.484}}, {"model": "issues.tag", "pk": 33, "fields": {"created": "2016-02-21T03:03:49.802Z", "modified": "2016-02-21T03:03:49.803Z", "issue": 4, "name": "module", "relevance": 0.323}}, {"model": "issues.tag", "pk": 34, "fields": {"created": "2016-02-21T03:03:49.804Z", "modified": "2016-02-21T03:03:49.804Z", "issue": 4, "name": "http://whitenoise.evans.io/en/stable/", "relevance": 0.323}}, {"model": "issues.tag", "pk": 35, "fields": {"created": "2016-02-21T03:03:49.806Z", "modified": "2016-02-21T03:03:49.806Z", "issue": 4, "name": "WhiteNoiseMiddleware", "relevance": 0.323}}, {"model": "issues.tag", "pk": 36, "fields": {"created": "2016-02-21T03:03:49.807Z", "modified": "2016-02-21T03:03:49.807Z", "issue": 4, "name": "whitenoise.middleware", "relevance": 0.323}}, {"model": "issues.tag", "pk": 37, "fields": {"created": "2016-02-21T03:03:49.808Z", "modified": "2016-02-21T03:03:49.809Z", "issue": 4, "name": "PIP", "relevance": 0.323}}, {"model": "issues.tag", "pk": 38, "fields": {"created": "2016-02-21T03:03:50.519Z", "modified": "2016-02-21T03:03:50.519Z", "issue": 5, "name": "module", "relevance": 0.968}}, {"model": "issues.tag", "pk": 39, "fields": {"created": "2016-02-21T03:03:50.521Z", "modified": "2016-02-21T03:03:50.521Z", "issue": 5, "name": "named Storage error", "relevance": 0.806}}, {"model": "issues.tag", "pk": 40, "fields": {"created": "2016-02-21T03:03:50.522Z", "modified": "2016-02-21T03:03:50.523Z", "issue": 5, "name": "named Storage", "relevance": 0.484}}, {"model": "issues.tag", "pk": 41, "fields": {"created": "2016-02-21T03:03:50.524Z", "modified": "2016-02-21T03:03:50.524Z", "issue": 5, "name": "whitenoise.middleware.WhiteNoiseMiddleware", "relevance": 0.323}}, {"model": "issues.tag", "pk": 42, "fields": {"created": "2016-02-21T03:03:50.525Z", "modified": "2016-02-21T03:03:50.525Z", "issue": 5, "name": "addition", "relevance": 0.323}}, {"model": "issues.tag", "pk": 43, "fields": {"created": "2016-02-21T03:03:50.526Z", "modified": "2016-02-21T03:03:50.526Z", "issue": 5, "name": "MIDDLEWARE_CLASSES", "relevance": 0.323}}, {"model": "issues.tag", "pk": 44, "fields": {"created": "2016-02-21T03:03:50.527Z", "modified": "2016-02-21T03:03:50.528Z", "issue": 5, "name": "Django", "relevance": 0.323}}, {"model": "issues.tag", "pk": 45, "fields": {"created": "2016-02-21T03:03:50.529Z", "modified": "2016-02-21T03:03:50.529Z", "issue": 5, "name": "error", "relevance": 0.323}}, {"model": "issues.tag", "pk": 46, "fields": {"created": "2016-02-21T03:03:50.530Z", "modified": "2016-02-21T03:03:50.530Z", "issue": 5, "name": "whitenoise.storage.CompressedManifestStaticFilesStorage", "relevance": 0.323}}, {"model": "issues.tag", "pk": 47, "fields": {"created": "2016-02-21T03:03:50.531Z", "modified": "2016-02-21T03:03:50.532Z", "issue": 5, "name": "STATICFILES_STORAGE", "relevance": 0.323}}, {"model": "issues.tag", "pk": 48, "fields": {"created": "2016-02-21T03:03:51.269Z", "modified": "2016-02-21T03:03:51.269Z", "issue": 6, "name": "static assets", "relevance": 0.968}}, {"model": "issues.tag", "pk": 49, "fields": {"created": "2016-02-21T03:03:51.271Z", "modified": "2016-02-21T03:03:51.271Z", "issue": 6, "name": "Document HTTPS redirection", "relevance": 0.806}}, {"model": "issues.tag", "pk": 50, "fields": {"created": "2016-02-21T03:03:51.272Z", "modified": "2016-02-21T03:03:51.272Z", "issue": 6, "name": "asset", "relevance": 0.645}}, {"model": "issues.tag", "pk": 51, "fields": {"created": "2016-02-21T03:03:51.273Z", "modified": "2016-02-21T03:03:51.274Z", "issue": 6, "name": "Fixes", "relevance": 0.645}}, {"model": "issues.tag", "pk": 52, "fields": {"created": "2016-02-21T03:03:51.275Z", "modified": "2016-02-21T03:03:51.275Z", "issue": 6, "name": "media files", "relevance": 0.484}}, {"model": "issues.tag", "pk": 53, "fields": {"created": "2016-02-21T03:03:51.276Z", "modified": "2016-02-21T03:03:51.276Z", "issue": 6, "name": "Django middleware", "relevance": 0.484}}, {"model": "issues.tag", "pk": 54, "fields": {"created": "2016-02-21T03:03:51.277Z", "modified": "2016-02-21T03:03:51.278Z", "issue": 6, "name": "spelling mistakes", "relevance": 0.484}}, {"model": "issues.tag", "pk": 55, "fields": {"created": "2016-02-21T03:03:51.279Z", "modified": "2016-02-21T03:03:51.279Z", "issue": 6, "name": "need", "relevance": 0.323}}, {"model": "issues.tag", "pk": 56, "fields": {"created": "2016-02-21T03:03:51.281Z", "modified": "2016-02-21T03:03:51.281Z", "issue": 6, "name": "redirection", "relevance": 0.323}}, {"model": "issues.tag", "pk": 57, "fields": {"created": "2016-02-21T03:03:51.282Z", "modified": "2016-02-21T03:03:51.283Z", "issue": 6, "name": "details", "relevance": 0.323}}, {"model": "issues.tag", "pk": 58, "fields": {"created": "2016-02-21T03:03:52.010Z", "modified": "2016-02-21T03:03:52.011Z", "issue": 7, "name": "Flask application", "relevance": 0.968}}, {"model": "issues.tag", "pk": 59, "fields": {"created": "2016-02-21T03:03:52.013Z", "modified": "2016-02-21T03:03:52.013Z", "issue": 7, "name": "Flask Application Currently", "relevance": 0.806}}, {"model": "issues.tag", "pk": 60, "fields": {"created": "2016-02-21T03:03:52.015Z", "modified": "2016-02-21T03:03:52.015Z", "issue": 7, "name": "special auto-configuration features", "relevance": 0.806}}, {"model": "issues.tag", "pk": 61, "fields": {"created": "2016-02-21T03:03:52.017Z", "modified": "2016-02-21T03:03:52.017Z", "issue": 7, "name": "Suggestions", "relevance": 0.645}}, {"model": "issues.tag", "pk": 62, "fields": {"created": "2016-02-21T03:03:52.018Z", "modified": "2016-02-21T03:03:52.018Z", "issue": 7, "name": "Django", "relevance": 0.645}}, {"model": "issues.tag", "pk": 63, "fields": {"created": "2016-02-21T03:03:52.019Z", "modified": "2016-02-21T03:03:52.020Z", "issue": 7, "name": "WhiteNoise", "relevance": 0.645}}, {"model": "issues.tag", "pk": 64, "fields": {"created": "2016-02-21T03:03:52.021Z", "modified": "2016-02-21T03:03:52.021Z", "issue": 7, "name": "WSGI-compatible app", "relevance": 0.484}}, {"model": "issues.tag", "pk": 65, "fields": {"created": "2016-02-21T03:03:52.023Z", "modified": "2016-02-21T03:03:52.023Z", "issue": 7, "name": "development", "relevance": 0.323}}, {"model": "issues.tag", "pk": 66, "fields": {"created": "2016-02-21T03:03:52.024Z", "modified": "2016-02-21T03:03:52.025Z", "issue": 7, "name": "http://flask.pocoo.org/docs/0.10/api/#flask.send_file", "relevance": 0.323}}, {"model": "issues.tag", "pk": 67, "fields": {"created": "2016-02-21T03:03:52.026Z", "modified": "2016-02-21T03:03:52.026Z", "issue": 7, "name": "Application", "relevance": 0.323}}, {"model": "issues.tag", "pk": 68, "fields": {"created": "2016-02-21T03:03:52.766Z", "modified": "2016-02-21T03:03:52.767Z", "issue": 8, "name": "Travis job flake8", "relevance": 0.962}}, {"model": "issues.tag", "pk": 69, "fields": {"created": "2016-02-21T03:03:52.769Z", "modified": "2016-02-21T03:03:52.769Z", "issue": 8, "name": "flake8 warnings", "relevance": 0.577}}, {"model": "issues.tag", "pk": 70, "fields": {"created": "2016-02-21T03:03:52.770Z", "modified": "2016-02-21T03:03:52.771Z", "issue": 8, "name": "errors/warnings", "relevance": 0.385}}, {"model": "issues.tag", "pk": 71, "fields": {"created": "2016-02-21T03:03:52.772Z", "modified": "2016-02-21T03:03:52.772Z", "issue": 8, "name": "value", "relevance": 0.385}}, {"model": "issues.tag", "pk": 72, "fields": {"created": "2016-02-21T03:03:52.773Z", "modified": "2016-02-21T03:03:52.773Z", "issue": 8, "name": "style", "relevance": 0.385}}, {"model": "issues.tag", "pk": 73, "fields": {"created": "2016-02-21T03:03:52.774Z", "modified": "2016-02-21T03:03:52.774Z", "issue": 8, "name": "rules", "relevance": 0.385}}, {"model": "issues.tag", "pk": 74, "fields": {"created": "2016-02-21T03:03:52.775Z", "modified": "2016-02-21T03:03:52.776Z", "issue": 8, "name": "pyflakes", "relevance": 0.385}}, {"model": "issues.tag", "pk": 75, "fields": {"created": "2016-02-21T03:03:52.777Z", "modified": "2016-02-21T03:03:52.777Z", "issue": 8, "name": "fixes", "relevance": 0.385}}, {"model": "issues.tag", "pk": 76, "fields": {"created": "2016-02-21T03:03:52.779Z", "modified": "2016-02-21T03:03:52.779Z", "issue": 8, "name": "wrapper", "relevance": 0.385}}, {"model": "issues.tag", "pk": 77, "fields": {"created": "2016-02-21T03:03:52.780Z", "modified": "2016-02-21T03:03:52.780Z", "issue": 8, "name": "Travis", "relevance": 0.385}}, {"model": "issues.tag", "pk": 78, "fields": {"created": "2016-02-21T03:03:53.549Z", "modified": "2016-02-21T03:03:53.549Z", "issue": 9, "name": "Test", "relevance": 0.968}}, {"model": "issues.tag", "pk": 79, "fields": {"created": "2016-02-21T03:03:53.551Z", "modified": "2016-02-21T03:03:53.551Z", "issue": 9, "name": "overall Travis run", "relevance": 0.806}}, {"model": "issues.tag", "pk": 80, "fields": {"created": "2016-02-21T03:03:53.552Z", "modified": "2016-02-21T03:03:53.553Z", "issue": 9, "name": "cleanup testing configs", "relevance": 0.806}}, {"model": "issues.tag", "pk": 81, "fields": {"created": "2016-02-21T03:03:53.554Z", "modified": "2016-02-21T03:03:53.554Z", "issue": 9, "name": "faster container infra", "relevance": 0.806}}, {"model": "issues.tag", "pk": 82, "fields": {"created": "2016-02-21T03:03:53.555Z", "modified": "2016-02-21T03:03:53.555Z", "issue": 9, "name": "Django master branch", "relevance": 0.806}}, {"model": "issues.tag", "pk": 83, "fields": {"created": "2016-02-21T03:03:53.556Z", "modified": "2016-02-21T03:03:53.556Z", "issue": 9, "name": "boot time", "relevance": 0.484}}, {"model": "issues.tag", "pk": 84, "fields": {"created": "2016-02-21T03:03:53.557Z", "modified": "2016-02-21T03:03:53.558Z", "issue": 9, "name": "Many thanks", "relevance": 0.484}}, {"model": "issues.tag", "pk": 85, "fields": {"created": "2016-02-21T03:03:53.559Z", "modified": "2016-02-21T03:03:53.560Z", "issue": 9, "name": "Django master", "relevance": 0.484}}, {"model": "issues.tag", "pk": 86, "fields": {"created": "2016-02-21T03:03:53.561Z", "modified": "2016-02-21T03:03:53.561Z", "issue": 9, "name": "upcoming breakage", "relevance": 0.484}}, {"model": "issues.tag", "pk": 87, "fields": {"created": "2016-02-21T03:03:53.562Z", "modified": "2016-02-21T03:03:53.563Z", "issue": 9, "name": "Travis job", "relevance": 0.484}}, {"model": "issues.tag", "pk": 88, "fields": {"created": "2016-02-21T03:03:54.351Z", "modified": "2016-02-21T03:03:54.351Z", "issue": 10, "name": "filesystem requirement fixes", "relevance": 0.962}}, {"model": "issues.tag", "pk": 89, "fields": {"created": "2016-02-21T03:03:54.353Z", "modified": "2016-02-21T03:03:54.353Z", "issue": 10, "name": "note", "relevance": 0.385}}, {"model": "issues.tag", "pk": 90, "fields": {"created": "2016-02-21T03:03:55.088Z", "modified": "2016-02-21T03:03:55.088Z", "issue": 11, "name": "media files", "relevance": 0.978}}, {"model": "issues.tag", "pk": 91, "fields": {"created": "2016-02-21T03:03:55.090Z", "modified": "2016-02-21T03:03:55.091Z", "issue": 11, "name": "help Juergen", "relevance": 0.326}}, {"model": "issues.tag", "pk": 92, "fields": {"created": "2016-02-21T03:03:55.092Z", "modified": "2016-02-21T03:03:55.092Z", "issue": 11, "name": "best way", "relevance": 0.326}}, {"model": "issues.tag", "pk": 93, "fields": {"created": "2016-02-21T03:03:55.094Z", "modified": "2016-02-21T03:03:55.094Z", "issue": 11, "name": "things", "relevance": 0.217}}, {"model": "issues.tag", "pk": 94, "fields": {"created": "2016-02-21T03:03:55.095Z", "modified": "2016-02-21T03:03:55.095Z", "issue": 11, "name": "docs", "relevance": 0.217}}, {"model": "issues.tag", "pk": 95, "fields": {"created": "2016-02-21T03:03:55.096Z", "modified": "2016-02-21T03:03:55.096Z", "issue": 11, "name": "add_files", "relevance": 0.217}}, {"model": "issues.tag", "pk": 96, "fields": {"created": "2016-02-21T03:03:55.097Z", "modified": "2016-02-21T03:03:55.098Z", "issue": 11, "name": "Thanks", "relevance": 0.217}}, {"model": "issues.tag", "pk": 97, "fields": {"created": "2016-02-21T03:03:55.099Z", "modified": "2016-02-21T03:03:55.100Z", "issue": 11, "name": "MEDIA_ROOT", "relevance": 0.217}}, {"model": "issues.tag", "pk": 98, "fields": {"created": "2016-02-21T03:03:55.101Z", "modified": "2016-02-21T03:03:55.102Z", "issue": 11, "name": "whitenoise", "relevance": 0.217}}, {"model": "issues.tag", "pk": 99, "fields": {"created": "2016-02-21T03:03:55.103Z", "modified": "2016-02-21T03:03:55.103Z", "issue": 11, "name": "MEDIA_URL", "relevance": 0.217}}, {"model": "issues.tag", "pk": 100, "fields": {"created": "2016-02-21T03:03:55.847Z", "modified": "2016-02-21T03:03:55.848Z", "issue": 12, "name": "access child page", "relevance": 0.962}}, {"model": "issues.tag", "pk": 101, "fields": {"created": "2016-02-21T03:03:55.850Z", "modified": "2016-02-21T03:03:55.850Z", "issue": 12, "name": "status", "relevance": 0.769}}, {"model": "issues.tag", "pk": 102, "fields": {"created": "2016-02-21T03:03:55.851Z", "modified": "2016-02-21T03:03:55.851Z", "issue": 12, "name": "resource", "relevance": 0.769}}, {"model": "issues.tag", "pk": 103, "fields": {"created": "2016-02-21T03:03:55.852Z", "modified": "2016-02-21T03:03:55.852Z", "issue": 12, "name": "server", "relevance": 0.769}}, {"model": "issues.tag", "pk": 104, "fields": {"created": "2016-02-21T03:03:55.854Z", "modified": "2016-02-21T03:03:55.854Z", "issue": 12, "name": "errors", "relevance": 0.385}}, {"model": "issues.tag", "pk": 105, "fields": {"created": "2016-02-21T03:03:55.855Z", "modified": "2016-02-21T03:03:55.855Z", "issue": 12, "name": "http://www.dailyhn.com/news/2016/01/08/d3urtm1uacryxt.cloudfront.net/static/bootstrap-3.3.6/css/bootstrap.min.2f624089c65f.css", "relevance": 0.385}}, {"model": "issues.tag", "pk": 106, "fields": {"created": "2016-02-21T03:03:56.583Z", "modified": "2016-02-21T03:03:56.584Z", "issue": 13, "name": "Drop support", "relevance": 0.938}}, {"model": "issues.tag", "pk": 107, "fields": {"created": "2016-02-21T03:03:56.586Z", "modified": "2016-02-21T03:03:56.586Z", "issue": 13, "name": "Python", "relevance": 0.625}}, {"model": "issues.tag", "pk": 108, "fields": {"created": "2016-02-21T03:03:56.587Z", "modified": "2016-02-21T03:03:56.587Z", "issue": 13, "name": "Django", "relevance": 0.625}}, {"model": "issues.tag", "pk": 109, "fields": {"created": "2016-02-21T03:03:57.343Z", "modified": "2016-02-21T03:03:57.343Z", "issue": 14, "name": "AWS Cloud Front", "relevance": 0.98}}, {"model": "issues.tag", "pk": 110, "fields": {"created": "2016-02-21T03:03:57.345Z", "modified": "2016-02-21T03:03:57.345Z", "issue": 14, "name": "David Great project", "relevance": 0.49}}, {"model": "issues.tag", "pk": 111, "fields": {"created": "2016-02-21T03:03:57.347Z", "modified": "2016-02-21T03:03:57.347Z", "issue": 14, "name": "GZIP", "relevance": 0.392}}, {"model": "issues.tag", "pk": 112, "fields": {"created": "2016-02-21T03:03:57.348Z", "modified": "2016-02-21T03:03:57.348Z", "issue": 14, "name": "quick note", "relevance": 0.294}}, {"model": "issues.tag", "pk": 113, "fields": {"created": "2016-02-21T03:03:57.349Z", "modified": "2016-02-21T03:03:57.349Z", "issue": 14, "name": "https://aws.amazon.com/blogs/aws/new-gzip-compression-support-for-amazon-cloudfront/", "relevance": 0.196}}, {"model": "issues.tag", "pk": 114, "fields": {"created": "2016-02-21T03:03:57.350Z", "modified": "2016-02-21T03:03:57.350Z", "issue": 14, "name": "docs", "relevance": 0.196}}, {"model": "issues.tag", "pk": 115, "fields": {"created": "2016-02-21T03:03:57.352Z", "modified": "2016-02-21T03:03:57.352Z", "issue": 14, "name": "FAQs", "relevance": 0.196}}, {"model": "issues.tag", "pk": 116, "fields": {"created": "2016-02-21T03:03:58.096Z", "modified": "2016-02-21T03:03:58.097Z", "issue": 15, "name": "CSS file", "relevance": 0.978}}, {"model": "issues.tag", "pk": 117, "fields": {"created": "2016-02-21T03:03:58.099Z", "modified": "2016-02-21T03:03:58.099Z", "issue": 15, "name": "bottom left no-repeat", "relevance": 0.543}}, {"model": "issues.tag", "pk": 118, "fields": {"created": "2016-02-21T03:03:58.100Z", "modified": "2016-02-21T03:03:58.100Z", "issue": 15, "name": "single line comments", "relevance": 0.543}}, {"model": "issues.tag", "pk": 119, "fields": {"created": "2016-02-21T03:03:58.101Z", "modified": "2016-02-21T03:03:58.102Z", "issue": 15, "name": "file", "relevance": 0.435}}, {"model": "issues.tag", "pk": 120, "fields": {"created": "2016-02-21T03:03:58.103Z", "modified": "2016-02-21T03:03:58.103Z", "issue": 15, "name": "error", "relevance": 0.435}}, {"model": "issues.tag", "pk": 121, "fields": {"created": "2016-02-21T03:03:58.104Z", "modified": "2016-02-21T03:03:58.104Z", "issue": 15, "name": "url", "relevance": 0.435}}, {"model": "issues.tag", "pk": 122, "fields": {"created": "2016-02-21T03:03:58.105Z", "modified": "2016-02-21T03:03:58.105Z", "issue": 15, "name": "wrong location", "relevance": 0.326}}, {"model": "issues.tag", "pk": 123, "fields": {"created": "2016-02-21T03:03:58.107Z", "modified": "2016-02-21T03:03:58.107Z", "issue": 15, "name": "CSS references", "relevance": 0.326}}, {"model": "issues.tag", "pk": 124, "fields": {"created": "2016-02-21T03:03:58.109Z", "modified": "2016-02-21T03:03:58.109Z", "issue": 15, "name": "later date", "relevance": 0.326}}, {"model": "issues.tag", "pk": 125, "fields": {"created": "2016-02-21T03:03:58.110Z", "modified": "2016-02-21T03:03:58.110Z", "issue": 15, "name": "URL references", "relevance": 0.326}}, {"model": "issues.tag", "pk": 126, "fields": {"created": "2016-02-21T03:03:58.869Z", "modified": "2016-02-21T03:03:58.870Z", "issue": 16, "name": "development", "relevance": 0.952}}, {"model": "issues.tag", "pk": 127, "fields": {"created": "2016-02-21T03:03:58.872Z", "modified": "2016-02-21T03:03:58.872Z", "issue": 16, "name": "settings.STATIC", "relevance": 0.952}}, {"model": "issues.tag", "pk": 128, "fields": {"created": "2016-02-21T03:03:58.873Z", "modified": "2016-02-21T03:03:58.874Z", "issue": 16, "name": "ROOT", "relevance": 0.952}}, {"model": "issues.tag", "pk": 129, "fields": {"created": "2016-02-21T03:03:58.875Z", "modified": "2016-02-21T03:03:58.875Z", "issue": 16, "name": "static file", "relevance": 0.714}}, {"model": "issues.tag", "pk": 130, "fields": {"created": "2016-02-21T03:03:58.876Z", "modified": "2016-02-21T03:03:58.876Z", "issue": 16, "name": "staticfiles", "relevance": 0.476}}, {"model": "issues.tag", "pk": 131, "fields": {"created": "2016-02-21T03:03:58.877Z", "modified": "2016-02-21T03:03:58.877Z", "issue": 16, "name": "drop", "relevance": 0.476}}, {"model": "issues.tag", "pk": 132, "fields": {"created": "2016-02-21T03:03:58.879Z", "modified": "2016-02-21T03:03:58.879Z", "issue": 16, "name": "Django", "relevance": 0.476}}, {"model": "issues.tag", "pk": 133, "fields": {"created": "2016-02-21T03:03:58.880Z", "modified": "2016-02-21T03:03:58.881Z", "issue": 16, "name": "whitenoise", "relevance": 0.476}}, {"model": "issues.tag", "pk": 134, "fields": {"created": "2016-02-21T03:03:58.882Z", "modified": "2016-02-21T03:03:58.882Z", "issue": 16, "name": "order", "relevance": 0.476}}, {"model": "issues.tag", "pk": 135, "fields": {"created": "2016-02-21T03:03:58.884Z", "modified": "2016-02-21T03:03:58.884Z", "issue": 16, "name": "replacement", "relevance": 0.476}}, {"model": "issues.tag", "pk": 136, "fields": {"created": "2016-02-21T03:03:59.642Z", "modified": "2016-02-21T03:03:59.642Z", "issue": 17, "name": "deprecated django.conf.urls.patterns", "relevance": 0.938}}, {"model": "issues.tag", "pk": 137, "fields": {"created": "2016-02-21T03:04:00.392Z", "modified": "2016-02-21T03:04:00.392Z", "issue": 18, "name": "Django", "relevance": 0.952}}, {"model": "issues.tag", "pk": 138, "fields": {"created": "2016-02-21T03:04:00.394Z", "modified": "2016-02-21T03:04:00.394Z", "issue": 18, "name": "older versions", "relevance": 0.714}}, {"model": "issues.tag", "pk": 139, "fields": {"created": "2016-02-21T03:04:00.395Z", "modified": "2016-02-21T03:04:00.396Z", "issue": 18, "name": "future development", "relevance": 0.714}}, {"model": "issues.tag", "pk": 140, "fields": {"created": "2016-02-21T03:04:00.397Z", "modified": "2016-02-21T03:04:00.397Z", "issue": 18, "name": "Drop support", "relevance": 0.714}}, {"model": "issues.tag", "pk": 141, "fields": {"created": "2016-02-21T03:04:00.398Z", "modified": "2016-02-21T03:04:00.398Z", "issue": 18, "name": "code", "relevance": 0.476}}, {"model": "issues.tag", "pk": 142, "fields": {"created": "2016-02-21T03:04:00.399Z", "modified": "2016-02-21T03:04:00.400Z", "issue": 18, "name": "support", "relevance": 0.476}}, {"model": "issues.tag", "pk": 143, "fields": {"created": "2016-02-21T03:04:00.401Z", "modified": "2016-02-21T03:04:00.401Z", "issue": 18, "name": "cleanup", "relevance": 0.476}}, {"model": "issues.tag", "pk": 144, "fields": {"created": "2016-02-21T03:04:01.150Z", "modified": "2016-02-21T03:04:01.150Z", "issue": 19, "name": "docs", "relevance": 0.909}}, {"model": "issues.tag", "pk": 145, "fields": {"created": "2016-02-21T03:04:01.152Z", "modified": "2016-02-21T03:04:01.152Z", "issue": 19, "name": "wsgi-sslify", "relevance": 0.909}}, {"model": "issues.tag", "pk": 146, "fields": {"created": "2016-02-21T03:04:01.154Z", "modified": "2016-02-21T03:04:01.154Z", "issue": 19, "name": "reference", "relevance": 0.909}}, {"model": "issues.tag", "pk": 147, "fields": {"created": "2016-02-21T03:04:01.155Z", "modified": "2016-02-21T03:04:01.155Z", "issue": 19, "name": "https://github.com/evansd/whitenoise/issues/53#issuecomment-166972824", "relevance": 0.909}}, {"model": "issues.tag", "pk": 148, "fields": {"created": "2016-02-21T03:04:01.879Z", "modified": "2016-02-21T03:04:01.879Z", "issue": 20, "name": "WhiteNoise", "relevance": 0.988}}, {"model": "issues.tag", "pk": 149, "fields": {"created": "2016-02-21T03:04:01.881Z", "modified": "2016-02-21T03:04:01.881Z", "issue": 20, "name": "HSTS", "relevance": 0.37}}, {"model": "issues.tag", "pk": 150, "fields": {"created": "2016-02-21T03:04:01.882Z", "modified": "2016-02-21T03:04:01.882Z", "issue": 20, "name": "site", "relevance": 0.37}}, {"model": "issues.tag", "pk": 151, "fields": {"created": "2016-02-21T03:04:01.883Z", "modified": "2016-02-21T03:04:01.884Z", "issue": 20, "name": "option", "relevance": 0.37}}, {"model": "issues.tag", "pk": 152, "fields": {"created": "2016-02-21T03:04:01.885Z", "modified": "2016-02-21T03:04:01.885Z", "issue": 20, "name": "HTTPS", "relevance": 0.37}}, {"model": "issues.tag", "pk": 153, "fields": {"created": "2016-02-21T03:04:01.886Z", "modified": "2016-02-21T03:04:01.886Z", "issue": 20, "name": "Heroku web dyno", "relevance": 0.309}}, {"model": "issues.tag", "pk": 154, "fields": {"created": "2016-02-21T03:04:01.887Z", "modified": "2016-02-21T03:04:01.887Z", "issue": 20, "name": "wrapped wgsi app", "relevance": 0.309}}, {"model": "issues.tag", "pk": 155, "fields": {"created": "2016-02-21T03:04:01.888Z", "modified": "2016-02-21T03:04:01.889Z", "issue": 20, "name": "Support", "relevance": 0.247}}, {"model": "issues.tag", "pk": 156, "fields": {"created": "2016-02-21T03:04:01.890Z", "modified": "2016-02-21T03:04:01.890Z", "issue": 20, "name": "Heroku", "relevance": 0.247}}, {"model": "issues.tag", "pk": 157, "fields": {"created": "2016-02-21T03:04:01.891Z", "modified": "2016-02-21T03:04:01.891Z", "issue": 20, "name": "redirect", "relevance": 0.247}}, {"model": "issues.tag", "pk": 162, "fields": {"created": "2016-02-21T03:05:05.073Z", "modified": "2016-02-21T03:05:05.073Z", "issue": 21, "name": "issue", "relevance": 0.625}}, {"model": "issues.tag", "pk": 163, "fields": {"created": "2016-02-21T03:05:05.788Z", "modified": "2016-02-21T03:05:05.788Z", "issue": 22, "name": "standard MIME type", "relevance": 0.98}}, {"model": "issues.tag", "pk": 164, "fields": {"created": "2016-02-21T03:05:05.790Z", "modified": "2016-02-21T03:05:05.791Z", "issue": 22, "name": "WOFF fonts", "relevance": 0.294}}, {"model": "issues.tag", "pk": 165, "fields": {"created": "2016-02-21T03:05:05.792Z", "modified": "2016-02-21T03:05:05.792Z", "issue": 22, "name": "Use", "relevance": 0.196}}, {"model": "issues.tag", "pk": 166, "fields": {"created": "2016-02-21T03:05:05.793Z", "modified": "2016-02-21T03:05:05.793Z", "issue": 22, "name": "http://www.w3.org/TR/WOFF/#appendix-b", "relevance": 0.196}}, {"model": "issues.tag", "pk": 167, "fields": {"created": "2016-02-21T03:05:06.548Z", "modified": "2016-02-21T03:05:06.549Z", "issue": 23, "name": "file", "relevance": 0.976}}, {"model": "issues.tag", "pk": 168, "fields": {"created": "2016-02-21T03:05:06.551Z", "modified": "2016-02-21T03:05:06.551Z", "issue": 23, "name": "content type", "relevance": 0.732}}, {"model": "issues.tag", "pk": 169, "fields": {"created": "2016-02-21T03:05:06.552Z", "modified": "2016-02-21T03:05:06.552Z", "issue": 23, "name": "custom Content Type", "relevance": 0.61}}, {"model": "issues.tag", "pk": 170, "fields": {"created": "2016-02-21T03:05:06.553Z", "modified": "2016-02-21T03:05:06.554Z", "issue": 23, "name": "content type mapping", "relevance": 0.61}}, {"model": "issues.tag", "pk": 171, "fields": {"created": "2016-02-21T03:05:06.555Z", "modified": "2016-02-21T03:05:06.555Z", "issue": 23, "name": "mimetypes", "relevance": 0.488}}, {"model": "issues.tag", "pk": 172, "fields": {"created": "2016-02-21T03:05:06.556Z", "modified": "2016-02-21T03:05:06.556Z", "issue": 23, "name": "extension Apple", "relevance": 0.366}}, {"model": "issues.tag", "pk": 173, "fields": {"created": "2016-02-21T03:05:06.557Z", "modified": "2016-02-21T03:05:06.557Z", "issue": 23, "name": "specific files", "relevance": 0.366}}, {"model": "issues.tag", "pk": 174, "fields": {"created": "2016-02-21T03:05:06.559Z", "modified": "2016-02-21T03:05:06.559Z", "issue": 23, "name": "library", "relevance": 0.244}}, {"model": "issues.tag", "pk": 175, "fields": {"created": "2016-02-21T03:05:06.561Z", "modified": "2016-02-21T03:05:06.561Z", "issue": 23, "name": "Content", "relevance": 0.244}}, {"model": "issues.tag", "pk": 176, "fields": {"created": "2016-02-21T03:05:06.562Z", "modified": "2016-02-21T03:05:06.562Z", "issue": 23, "name": "sort", "relevance": 0.244}}, {"model": "issues.tag", "pk": 177, "fields": {"created": "2016-02-21T03:05:07.276Z", "modified": "2016-02-21T03:05:07.277Z", "issue": 24, "name": "argparse dependency", "relevance": 0.938}}, {"model": "issues.tag", "pk": 178, "fields": {"created": "2016-02-21T03:05:07.279Z", "modified": "2016-02-21T03:05:07.279Z", "issue": 24, "name": "Python", "relevance": 0.625}}, {"model": "issues.tag", "pk": 179, "fields": {"created": "2016-02-21T03:05:07.280Z", "modified": "2016-02-21T03:05:07.280Z", "issue": 24, "name": "patch", "relevance": 0.625}}, {"model": "issues.tag", "pk": 180, "fields": {"created": "2016-02-21T03:05:07.281Z", "modified": "2016-02-21T03:05:07.282Z", "issue": 24, "name": "whitenoise", "relevance": 0.625}}, {"model": "issues.tag", "pk": 181, "fields": {"created": "2016-02-21T03:05:08.007Z", "modified": "2016-02-21T03:05:08.007Z", "issue": 25, "name": "Correct CND", "relevance": 0.938}}, {"model": "issues.tag", "pk": 182, "fields": {"created": "2016-02-21T03:05:08.009Z", "modified": "2016-02-21T03:05:08.009Z", "issue": 25, "name": "CDN", "relevance": 0.625}}, {"model": "issues.tag", "pk": 183, "fields": {"created": "2016-02-21T03:05:08.011Z", "modified": "2016-02-21T03:05:08.011Z", "issue": 25, "name": "django.rst", "relevance": 0.625}}, {"model": "issues.tag", "pk": 184, "fields": {"created": "2016-02-21T03:05:08.769Z", "modified": "2016-02-21T03:05:08.770Z", "issue": 26, "name": "Python", "relevance": 0.968}}, {"model": "issues.tag", "pk": 185, "fields": {"created": "2016-02-21T03:05:08.772Z", "modified": "2016-02-21T03:05:08.772Z", "issue": 26, "name": "line", "relevance": 0.968}}, {"model": "issues.tag", "pk": 186, "fields": {"created": "2016-02-21T03:05:08.773Z", "modified": "2016-02-21T03:05:08.773Z", "issue": 26, "name": "import argparse ImportError", "relevance": 0.806}}, {"model": "issues.tag", "pk": 187, "fields": {"created": "2016-02-21T03:05:08.774Z", "modified": "2016-02-21T03:05:08.775Z", "issue": 26, "name": "whitenoise.django import DjangoWhiteNoise", "relevance": 0.806}}, {"model": "issues.tag", "pk": 188, "fields": {"created": "2016-02-21T03:05:08.776Z", "modified": "2016-02-21T03:05:08.776Z", "issue": 26, "name": "import DjangoWhiteNoise File", "relevance": 0.806}}, {"model": "issues.tag", "pk": 189, "fields": {"created": "2016-02-21T03:05:08.777Z", "modified": "2016-02-21T03:05:08.777Z", "issue": 26, "name": "usr/lib/python2", "relevance": 0.645}}, {"model": "issues.tag", "pk": 190, "fields": {"created": "2016-02-21T03:05:08.778Z", "modified": "2016-02-21T03:05:08.778Z", "issue": 26, "name": "whitenoise", "relevance": 0.645}}, {"model": "issues.tag", "pk": 191, "fields": {"created": "2016-02-21T03:05:08.779Z", "modified": "2016-02-21T03:05:08.779Z", "issue": 26, "name": "GZIP_EXCLUDE_EXTENSIONS File", "relevance": 0.484}}, {"model": "issues.tag", "pk": 192, "fields": {"created": "2016-02-21T03:05:08.780Z", "modified": "2016-02-21T03:05:08.781Z", "issue": 26, "name": "argparse dependency", "relevance": 0.484}}, {"model": "issues.tag", "pk": 193, "fields": {"created": "2016-02-21T03:05:08.782Z", "modified": "2016-02-21T03:05:08.782Z", "issue": 26, "name": "named argparse", "relevance": 0.484}}, {"model": "issues.tag", "pk": 194, "fields": {"created": "2016-02-21T03:05:09.554Z", "modified": "2016-02-21T03:05:09.554Z", "issue": 27, "name": "gzip module", "relevance": 0.968}}, {"model": "issues.tag", "pk": 195, "fields": {"created": "2016-02-21T03:05:09.557Z", "modified": "2016-02-21T03:05:09.557Z", "issue": 27, "name": "prettier way", "relevance": 0.484}}, {"model": "issues.tag", "pk": 196, "fields": {"created": "2016-02-21T03:05:09.558Z", "modified": "2016-02-21T03:05:09.558Z", "issue": 27, "name": "gzip.py module", "relevance": 0.484}}, {"model": "issues.tag", "pk": 197, "fields": {"created": "2016-02-21T03:05:09.559Z", "modified": "2016-02-21T03:05:09.560Z", "issue": 27, "name": "sys path", "relevance": 0.484}}, {"model": "issues.tag", "pk": 198, "fields": {"created": "2016-02-21T03:05:09.561Z", "modified": "2016-02-21T03:05:09.561Z", "issue": 27, "name": "name collision", "relevance": 0.484}}, {"model": "issues.tag", "pk": 199, "fields": {"created": "2016-02-21T03:05:09.562Z", "modified": "2016-02-21T03:05:09.562Z", "issue": 27, "name": "default", "relevance": 0.323}}, {"model": "issues.tag", "pk": 200, "fields": {"created": "2016-02-21T03:05:09.563Z", "modified": "2016-02-21T03:05:09.563Z", "issue": 27, "name": "namespace", "relevance": 0.323}}, {"model": "issues.tag", "pk": 201, "fields": {"created": "2016-02-21T03:05:09.564Z", "modified": "2016-02-21T03:05:09.565Z", "issue": 27, "name": "path", "relevance": 0.323}}, {"model": "issues.tag", "pk": 202, "fields": {"created": "2016-02-21T03:05:10.332Z", "modified": "2016-02-21T03:05:10.332Z", "issue": 28, "name": "consistent mimetype definitions", "relevance": 0.962}}, {"model": "issues.tag", "pk": 203, "fields": {"created": "2016-02-21T03:05:10.334Z", "modified": "2016-02-21T03:05:10.334Z", "issue": 28, "name": "system config files", "relevance": 0.962}}, {"model": "issues.tag", "pk": 204, "fields": {"created": "2016-02-21T03:05:10.336Z", "modified": "2016-02-21T03:05:10.336Z", "issue": 28, "name": "environments", "relevance": 0.769}}, {"model": "issues.tag", "pk": 205, "fields": {"created": "2016-02-21T03:05:10.337Z", "modified": "2016-02-21T03:05:10.337Z", "issue": 28, "name": "mimetype definitions", "relevance": 0.577}}, {"model": "issues.tag", "pk": 206, "fields": {"created": "2016-02-21T03:05:10.338Z", "modified": "2016-02-21T03:05:10.338Z", "issue": 28, "name": "mimetypes", "relevance": 0.385}}, {"model": "issues.tag", "pk": 207, "fields": {"created": "2016-02-21T03:05:10.339Z", "modified": "2016-02-21T03:05:10.339Z", "issue": 28, "name": "issue", "relevance": 0.385}}, {"model": "issues.tag", "pk": 208, "fields": {"created": "2016-02-21T03:05:10.340Z", "modified": "2016-02-21T03:05:10.341Z", "issue": 28, "name": "default", "relevance": 0.385}}, {"model": "issues.tag", "pk": 209, "fields": {"created": "2016-02-21T03:05:10.342Z", "modified": "2016-02-21T03:05:10.343Z", "issue": 28, "name": "module", "relevance": 0.385}}, {"model": "issues.tag", "pk": 210, "fields": {"created": "2016-02-21T03:05:10.344Z", "modified": "2016-02-21T03:05:10.344Z", "issue": 28, "name": "consistency", "relevance": 0.385}}, {"model": "issues.tag", "pk": 211, "fields": {"created": "2016-02-21T03:05:10.345Z", "modified": "2016-02-21T03:05:10.346Z", "issue": 28, "name": "data", "relevance": 0.385}}, {"model": "issues.tag", "pk": 212, "fields": {"created": "2016-02-21T03:05:11.107Z", "modified": "2016-02-21T03:05:11.107Z", "issue": 29, "name": "EXTRA_MIMETYPES", "relevance": 0.952}}, {"model": "issues.tag", "pk": 213, "fields": {"created": "2016-02-21T03:05:11.109Z", "modified": "2016-02-21T03:05:11.110Z", "issue": 29, "name": "mime type", "relevance": 0.714}}, {"model": "issues.tag", "pk": 214, "fields": {"created": "2016-02-21T03:05:11.111Z", "modified": "2016-02-21T03:05:11.111Z", "issue": 29, "name": "Django projects", "relevance": 0.714}}, {"model": "issues.tag", "pk": 215, "fields": {"created": "2016-02-21T03:05:11.112Z", "modified": "2016-02-21T03:05:11.112Z", "issue": 29, "name": "Django settings", "relevance": 0.714}}, {"model": "issues.tag", "pk": 216, "fields": {"created": "2016-02-21T03:05:11.113Z", "modified": "2016-02-21T03:05:11.114Z", "issue": 29, "name": "xml", "relevance": 0.476}}, {"model": "issues.tag", "pk": 217, "fields": {"created": "2016-02-21T03:05:11.115Z", "modified": "2016-02-21T03:05:11.115Z", "issue": 29, "name": "mimetypes", "relevance": 0.476}}, {"model": "issues.tag", "pk": 218, "fields": {"created": "2016-02-21T03:05:11.116Z", "modified": "2016-02-21T03:05:11.117Z", "issue": 29, "name": "django.conf.settings", "relevance": 0.476}}, {"model": "issues.tag", "pk": 219, "fields": {"created": "2016-02-21T03:05:11.118Z", "modified": "2016-02-21T03:05:11.118Z", "issue": 29, "name": "svg", "relevance": 0.476}}, {"model": "issues.tag", "pk": 220, "fields": {"created": "2016-02-21T03:05:11.119Z", "modified": "2016-02-21T03:05:11.119Z", "issue": 29, "name": "problem", "relevance": 0.476}}, {"model": "issues.tag", "pk": 221, "fields": {"created": "2016-02-21T03:05:11.120Z", "modified": "2016-02-21T03:05:11.120Z", "issue": 29, "name": "WHITENOISE_EXTRA_MIMETYPES", "relevance": 0.476}}, {"model": "issues.tag", "pk": 222, "fields": {"created": "2016-02-21T03:05:11.862Z", "modified": "2016-02-21T03:05:11.862Z", "issue": 30, "name": "hash", "relevance": 0.952}}, {"model": "issues.tag", "pk": 223, "fields": {"created": "2016-02-21T03:05:11.864Z", "modified": "2016-02-21T03:05:11.864Z", "issue": 30, "name": "STATICFILES_STORAGE", "relevance": 0.952}}, {"model": "issues.tag", "pk": 224, "fields": {"created": "2016-02-21T03:05:11.866Z", "modified": "2016-02-21T03:05:11.866Z", "issue": 30, "name": "darn thing", "relevance": 0.714}}, {"model": "issues.tag", "pk": 225, "fields": {"created": "2016-02-21T03:05:11.867Z", "modified": "2016-02-21T03:05:11.867Z", "issue": 30, "name": "homebrewed combination", "relevance": 0.714}}, {"model": "issues.tag", "pk": 226, "fields": {"created": "2016-02-21T03:05:11.868Z", "modified": "2016-02-21T03:05:11.869Z", "issue": 30, "name": "tag outputs", "relevance": 0.714}}, {"model": "issues.tag", "pk": 227, "fields": {"created": "2016-02-21T03:05:11.870Z", "modified": "2016-02-21T03:05:11.870Z", "issue": 30, "name": "django-pipeline outputs", "relevance": 0.714}}, {"model": "issues.tag", "pk": 228, "fields": {"created": "2016-02-21T03:05:11.871Z", "modified": "2016-02-21T03:05:11.871Z", "issue": 30, "name": "app.storages.GzipManifestPipelineStorage", "relevance": 0.476}}, {"model": "issues.tag", "pk": 229, "fields": {"created": "2016-02-21T03:05:11.872Z", "modified": "2016-02-21T03:05:11.873Z", "issue": 30, "name": "documentation", "relevance": 0.476}}, {"model": "issues.tag", "pk": 230, "fields": {"created": "2016-02-21T03:05:11.874Z", "modified": "2016-02-21T03:05:11.874Z", "issue": 30, "name": "tag", "relevance": 0.476}}, {"model": "issues.tag", "pk": 231, "fields": {"created": "2016-02-21T03:05:11.875Z", "modified": "2016-02-21T03:05:11.875Z", "issue": 30, "name": "whitenoise", "relevance": 0.476}}, {"model": "issues.tag", "pk": 232, "fields": {"created": "2016-02-21T03:05:14.327Z", "modified": "2016-02-21T03:05:14.327Z", "issue": 31, "name": "things", "relevance": 0.976}}, {"model": "issues.tag", "pk": 233, "fields": {"created": "2016-02-21T03:05:14.329Z", "modified": "2016-02-21T03:05:14.330Z", "issue": 31, "name": "file", "relevance": 0.732}}, {"model": "issues.tag", "pk": 234, "fields": {"created": "2016-02-21T03:05:14.331Z", "modified": "2016-02-21T03:05:14.331Z", "issue": 31, "name": "Whitenoise", "relevance": 0.732}}, {"model": "issues.tag", "pk": 235, "fields": {"created": "2016-02-21T03:05:14.332Z", "modified": "2016-02-21T03:05:14.332Z", "issue": 31, "name": "helpful startup error", "relevance": 0.61}}, {"model": "issues.tag", "pk": 236, "fields": {"created": "2016-02-21T03:05:14.333Z", "modified": "2016-02-21T03:05:14.334Z", "issue": 31, "name": "whitenoise.django.GzipManifestStaticFilesStorage storage backend", "relevance": 0.61}}, {"model": "issues.tag", "pk": 237, "fields": {"created": "2016-02-21T03:05:14.335Z", "modified": "2016-02-21T03:05:14.335Z", "issue": 31, "name": "next successful collectstatic", "relevance": 0.61}}, {"model": "issues.tag", "pk": 238, "fields": {"created": "2016-02-21T03:05:14.336Z", "modified": "2016-02-21T03:05:14.337Z", "issue": 31, "name": "current fail-fast behavior", "relevance": 0.61}}, {"model": "issues.tag", "pk": 239, "fields": {"created": "2016-02-21T03:05:14.339Z", "modified": "2016-02-21T03:05:14.339Z", "issue": 31, "name": "CSS", "relevance": 0.488}}, {"model": "issues.tag", "pk": 240, "fields": {"created": "2016-02-21T03:05:14.340Z", "modified": "2016-02-21T03:05:14.340Z", "issue": 31, "name": "patch", "relevance": 0.488}}, {"model": "issues.tag", "pk": 241, "fields": {"created": "2016-02-21T03:05:14.341Z", "modified": "2016-02-21T03:05:14.342Z", "issue": 31, "name": "broken reference", "relevance": 0.366}}, {"model": "issues.tag", "pk": 242, "fields": {"created": "2016-02-21T03:05:15.101Z", "modified": "2016-02-21T03:05:15.101Z", "issue": 32, "name": "Whitenoise", "relevance": 0.968}}, {"model": "issues.tag", "pk": 243, "fields": {"created": "2016-02-21T03:05:15.103Z", "modified": "2016-02-21T03:05:15.103Z", "issue": 32, "name": "Related Django issue", "relevance": 0.806}}, {"model": "issues.tag", "pk": 244, "fields": {"created": "2016-02-21T03:05:15.104Z", "modified": "2016-02-21T03:05:15.105Z", "issue": 32, "name": "Report MissingFileError path", "relevance": 0.806}}, {"model": "issues.tag", "pk": 245, "fields": {"created": "2016-02-21T03:05:15.106Z", "modified": "2016-02-21T03:05:15.106Z", "issue": 32, "name": "broken symlinks", "relevance": 0.484}}, {"model": "issues.tag", "pk": 246, "fields": {"created": "2016-02-21T03:05:15.107Z", "modified": "2016-02-21T03:05:15.107Z", "issue": 32, "name": "MissingFileError", "relevance": 0.323}}, {"model": "issues.tag", "pk": 247, "fields": {"created": "2016-02-21T03:05:15.108Z", "modified": "2016-02-21T03:05:15.108Z", "issue": 32, "name": "STATIC_ROOT", "relevance": 0.323}}, {"model": "issues.tag", "pk": 248, "fields": {"created": "2016-02-21T03:05:15.109Z", "modified": "2016-02-21T03:05:15.110Z", "issue": 32, "name": "app", "relevance": 0.323}}, {"model": "issues.tag", "pk": 249, "fields": {"created": "2016-02-21T03:05:15.111Z", "modified": "2016-02-21T03:05:15.111Z", "issue": 32, "name": "error", "relevance": 0.323}}, {"model": "issues.tag", "pk": 250, "fields": {"created": "2016-02-21T03:05:15.112Z", "modified": "2016-02-21T03:05:15.112Z", "issue": 32, "name": "startup", "relevance": 0.323}}, {"model": "issues.tag", "pk": 251, "fields": {"created": "2016-02-21T03:05:15.113Z", "modified": "2016-02-21T03:05:15.114Z", "issue": 32, "name": "Django", "relevance": 0.323}}, {"model": "issues.tag", "pk": 252, "fields": {"created": "2016-02-21T03:05:15.803Z", "modified": "2016-02-21T03:05:15.803Z", "issue": 33, "name": "empty prefix", "relevance": 0.938}}, {"model": "issues.tag", "pk": 253, "fields": {"created": "2016-02-21T03:05:15.805Z", "modified": "2016-02-21T03:05:15.805Z", "issue": 33, "name": "error message", "relevance": 0.938}}, {"model": "issues.tag", "pk": 254, "fields": {"created": "2016-02-21T03:05:15.807Z", "modified": "2016-02-21T03:05:15.807Z", "issue": 33, "name": "comments", "relevance": 0.625}}, {"model": "issues.tag", "pk": 255, "fields": {"created": "2016-02-21T03:05:15.808Z", "modified": "2016-02-21T03:05:15.809Z", "issue": 33, "name": "https://github.com/evansd/whitenoise/commit/c8518b6f176b6a07806400c30ba6d55f9fdacce4#commitcomment-12785483", "relevance": 0.625}}, {"model": "issues.tag", "pk": 256, "fields": {"created": "2016-02-21T03:05:16.546Z", "modified": "2016-02-21T03:05:16.547Z", "issue": 34, "name": "static files", "relevance": 0.968}}, {"model": "issues.tag", "pk": 257, "fields": {"created": "2016-02-21T03:05:16.549Z", "modified": "2016-02-21T03:05:16.549Z", "issue": 34, "name": "BASE_DIR", "relevance": 0.968}}, {"model": "issues.tag", "pk": 258, "fields": {"created": "2016-02-21T03:05:16.550Z", "modified": "2016-02-21T03:05:16.550Z", "issue": 34, "name": "Gzip compression", "relevance": 0.968}}, {"model": "issues.tag", "pk": 259, "fields": {"created": "2016-02-21T03:05:16.551Z", "modified": "2016-02-21T03:05:16.551Z", "issue": 34, "name": "whitenoise.django import DjangoWhiteNoise", "relevance": 0.806}}, {"model": "issues.tag", "pk": 260, "fields": {"created": "2016-02-21T03:05:16.552Z", "modified": "2016-02-21T03:05:16.553Z", "issue": 34, "name": "import DjangoWhiteNoise application", "relevance": 0.806}}, {"model": "issues.tag", "pk": 261, "fields": {"created": "2016-02-21T03:05:16.554Z", "modified": "2016-02-21T03:05:16.554Z", "issue": 34, "name": "import get_wsgi_application os.environ.setdefault", "relevance": 0.806}}, {"model": "issues.tag", "pk": 262, "fields": {"created": "2016-02-21T03:05:16.555Z", "modified": "2016-02-21T03:05:16.556Z", "issue": 34, "name": "vegur package versions", "relevance": 0.806}}, {"model": "issues.tag", "pk": 263, "fields": {"created": "2016-02-21T03:05:16.557Z", "modified": "2016-02-21T03:05:16.557Z", "issue": 34, "name": "django.core.wsgi import get_wsgi_application", "relevance": 0.806}}, {"model": "issues.tag", "pk": 264, "fields": {"created": "2016-02-21T03:05:16.558Z", "modified": "2016-02-21T03:05:16.558Z", "issue": 34, "name": "django.core.cache.backends.memcached import BaseMemcachedCache", "relevance": 0.806}}, {"model": "issues.tag", "pk": 265, "fields": {"created": "2016-02-21T03:05:16.559Z", "modified": "2016-02-21T03:05:16.560Z", "issue": 34, "name": "Static files configuration", "relevance": 0.806}}, {"model": "issues.tag", "pk": 266, "fields": {"created": "2016-02-21T03:05:17.300Z", "modified": "2016-02-21T03:05:17.300Z", "issue": 35, "name": "files", "relevance": 0.968}}, {"model": "issues.tag", "pk": 267, "fields": {"created": "2016-02-21T03:05:17.302Z", "modified": "2016-02-21T03:05:17.302Z", "issue": 35, "name": "setup", "relevance": 0.645}}, {"model": "issues.tag", "pk": 268, "fields": {"created": "2016-02-21T03:05:17.304Z", "modified": "2016-02-21T03:05:17.304Z", "issue": 35, "name": "Django Whitenoise", "relevance": 0.484}}, {"model": "issues.tag", "pk": 269, "fields": {"created": "2016-02-21T03:05:17.306Z", "modified": "2016-02-21T03:05:17.306Z", "issue": 35, "name": "anybody spot", "relevance": 0.484}}, {"model": "issues.tag", "pk": 270, "fields": {"created": "2016-02-21T03:05:17.307Z", "modified": "2016-02-21T03:05:17.308Z", "issue": 35, "name": "Django Pipeline", "relevance": 0.484}}, {"model": "issues.tag", "pk": 271, "fields": {"created": "2016-02-21T03:05:17.309Z", "modified": "2016-02-21T03:05:17.309Z", "issue": 35, "name": "correct headers", "relevance": 0.484}}, {"model": "issues.tag", "pk": 272, "fields": {"created": "2016-02-21T03:05:17.310Z", "modified": "2016-02-21T03:05:17.310Z", "issue": 35, "name": "Compression", "relevance": 0.323}}, {"model": "issues.tag", "pk": 273, "fields": {"created": "2016-02-21T03:05:17.312Z", "modified": "2016-02-21T03:05:17.312Z", "issue": 35, "name": "everything", "relevance": 0.323}}, {"model": "issues.tag", "pk": 274, "fields": {"created": "2016-02-21T03:05:17.314Z", "modified": "2016-02-21T03:05:17.314Z", "issue": 35, "name": "http://107.178.250.104/static/scripts_dist/common.min.b947a82fca17.js.gz", "relevance": 0.323}}, {"model": "issues.tag", "pk": 275, "fields": {"created": "2016-02-21T03:05:17.315Z", "modified": "2016-02-21T03:05:17.315Z", "issue": 35, "name": "Whitenoise", "relevance": 0.323}}, {"model": "issues.tag", "pk": 276, "fields": {"created": "2016-02-21T03:05:18.055Z", "modified": "2016-02-21T03:05:18.055Z", "issue": 36, "name": "whitenoise", "relevance": 0.909}}, {"model": "issues.tag", "pk": 277, "fields": {"created": "2016-02-21T03:05:18.057Z", "modified": "2016-02-21T03:05:18.058Z", "issue": 36, "name": "ValueError", "relevance": 0.909}}, {"model": "issues.tag", "pk": 278, "fields": {"created": "2016-02-21T03:05:18.059Z", "modified": "2016-02-21T03:05:18.059Z", "issue": 36, "name": "error", "relevance": 0.909}}, {"model": "issues.tag", "pk": 279, "fields": {"created": "2016-02-21T03:05:18.840Z", "modified": "2016-02-21T03:05:18.840Z", "issue": 37, "name": "Whitenoise", "relevance": 0.976}}, {"model": "issues.tag", "pk": 280, "fields": {"created": "2016-02-21T03:05:18.842Z", "modified": "2016-02-21T03:05:18.842Z", "issue": 37, "name": "breaking change", "relevance": 0.732}}, {"model": "issues.tag", "pk": 281, "fields": {"created": "2016-02-21T03:05:18.843Z", "modified": "2016-02-21T03:05:18.844Z", "issue": 37, "name": "STATIC_URL", "relevance": 0.732}}, {"model": "issues.tag", "pk": 282, "fields": {"created": "2016-02-21T03:05:18.845Z", "modified": "2016-02-21T03:05:18.845Z", "issue": 37, "name": "absolute URLs", "relevance": 0.366}}, {"model": "issues.tag", "pk": 283, "fields": {"created": "2016-02-21T03:05:18.846Z", "modified": "2016-02-21T03:05:18.846Z", "issue": 37, "name": "release notes", "relevance": 0.366}}, {"model": "issues.tag", "pk": 284, "fields": {"created": "2016-02-21T03:05:18.847Z", "modified": "2016-02-21T03:05:18.847Z", "issue": 37, "name": "local development", "relevance": 0.366}}, {"model": "issues.tag", "pk": 285, "fields": {"created": "2016-02-21T03:05:18.848Z", "modified": "2016-02-21T03:05:18.849Z", "issue": 37, "name": "odd error", "relevance": 0.366}}, {"model": "issues.tag", "pk": 286, "fields": {"created": "2016-02-21T03:05:18.850Z", "modified": "2016-02-21T03:05:18.850Z", "issue": 37, "name": "appropriate patch", "relevance": 0.366}}, {"model": "issues.tag", "pk": 287, "fields": {"created": "2016-02-21T03:05:18.851Z", "modified": "2016-02-21T03:05:18.851Z", "issue": 37, "name": "get_prefix_url returns", "relevance": 0.366}}, {"model": "issues.tag", "pk": 288, "fields": {"created": "2016-02-21T03:05:18.852Z", "modified": "2016-02-21T03:05:18.853Z", "issue": 37, "name": "STATIC_ROOT settings", "relevance": 0.366}}, {"model": "issues.tag", "pk": 289, "fields": {"created": "2016-02-21T03:05:19.605Z", "modified": "2016-02-21T03:05:19.606Z", "issue": 38, "name": "DEBUG", "relevance": 0.976}}, {"model": "issues.tag", "pk": 290, "fields": {"created": "2016-02-21T03:05:19.608Z", "modified": "2016-02-21T03:05:19.608Z", "issue": 38, "name": "False", "relevance": 0.732}}, {"model": "issues.tag", "pk": 291, "fields": {"created": "2016-02-21T03:05:19.609Z", "modified": "2016-02-21T03:05:19.609Z", "issue": 38, "name": "framework/css/bootstrap-tweaks", "relevance": 0.732}}, {"model": "issues.tag", "pk": 292, "fields": {"created": "2016-02-21T03:05:19.610Z", "modified": "2016-02-21T03:05:19.610Z", "issue": 38, "name": "template requests", "relevance": 0.732}}, {"model": "issues.tag", "pk": 293, "fields": {"created": "2016-02-21T03:05:19.612Z", "modified": "2016-02-21T03:05:19.612Z", "issue": 38, "name": "templates request files", "relevance": 0.61}}, {"model": "issues.tag", "pk": 294, "fields": {"created": "2016-02-21T03:05:19.613Z", "modified": "2016-02-21T03:05:19.613Z", "issue": 38, "name": "css", "relevance": 0.488}}, {"model": "issues.tag", "pk": 295, "fields": {"created": "2016-02-21T03:05:19.614Z", "modified": "2016-02-21T03:05:19.614Z", "issue": 38, "name": "files", "relevance": 0.244}}, {"model": "issues.tag", "pk": 296, "fields": {"created": "2016-02-21T03:05:19.616Z", "modified": "2016-02-21T03:05:19.616Z", "issue": 38, "name": "templates", "relevance": 0.244}}, {"model": "issues.tag", "pk": 297, "fields": {"created": "2016-02-21T03:05:19.617Z", "modified": "2016-02-21T03:05:19.618Z", "issue": 38, "name": "content", "relevance": 0.244}}, {"model": "issues.tag", "pk": 298, "fields": {"created": "2016-02-21T03:05:19.619Z", "modified": "2016-02-21T03:05:19.619Z", "issue": 38, "name": "suffix", "relevance": 0.244}}, {"model": "issues.tag", "pk": 299, "fields": {"created": "2016-02-21T03:05:20.368Z", "modified": "2016-02-21T03:05:20.369Z", "issue": 39, "name": "repo", "relevance": 0.968}}, {"model": "issues.tag", "pk": 300, "fields": {"created": "2016-02-21T03:05:20.371Z", "modified": "2016-02-21T03:05:20.371Z", "issue": 39, "name": "bower", "relevance": 0.968}}, {"model": "issues.tag", "pk": 301, "fields": {"created": "2016-02-21T03:05:20.372Z", "modified": "2016-02-21T03:05:20.372Z", "issue": 39, "name": "Heroku", "relevance": 0.645}}, {"model": "issues.tag", "pk": 302, "fields": {"created": "2016-02-21T03:05:20.373Z", "modified": "2016-02-21T03:05:20.373Z", "issue": 39, "name": "tools", "relevance": 0.645}}, {"model": "issues.tag", "pk": 303, "fields": {"created": "2016-02-21T03:05:20.374Z", "modified": "2016-02-21T03:05:20.374Z", "issue": 39, "name": "best way", "relevance": 0.484}}, {"model": "issues.tag", "pk": 304, "fields": {"created": "2016-02-21T03:05:20.375Z", "modified": "2016-02-21T03:05:20.376Z", "issue": 39, "name": "bower sources", "relevance": 0.484}}, {"model": "issues.tag", "pk": 305, "fields": {"created": "2016-02-21T03:05:20.377Z", "modified": "2016-02-21T03:05:20.377Z", "issue": 39, "name": "static files", "relevance": 0.484}}, {"model": "issues.tag", "pk": 306, "fields": {"created": "2016-02-21T03:05:20.378Z", "modified": "2016-02-21T03:05:20.378Z", "issue": 39, "name": "files Heroku", "relevance": 0.484}}, {"model": "issues.tag", "pk": 307, "fields": {"created": "2016-02-21T03:05:20.379Z", "modified": "2016-02-21T03:05:20.379Z", "issue": 39, "name": "git repo", "relevance": 0.484}}, {"model": "issues.tag", "pk": 308, "fields": {"created": "2016-02-21T03:05:20.380Z", "modified": "2016-02-21T03:05:20.381Z", "issue": 39, "name": "django pipeline", "relevance": 0.484}}, {"model": "issues.tag", "pk": 309, "fields": {"created": "2016-02-21T03:05:21.085Z", "modified": "2016-02-21T03:05:21.085Z", "issue": 40, "name": "production", "relevance": 0.952}}, {"model": "issues.tag", "pk": 310, "fields": {"created": "2016-02-21T03:05:21.087Z", "modified": "2016-02-21T03:05:21.087Z", "issue": 40, "name": "file", "relevance": 0.952}}, {"model": "issues.tag", "pk": 311, "fields": {"created": "2016-02-21T03:05:21.088Z", "modified": "2016-02-21T03:05:21.089Z", "issue": 40, "name": "Python", "relevance": 0.952}}, {"model": "issues.tag", "pk": 312, "fields": {"created": "2016-02-21T03:05:21.090Z", "modified": "2016-02-21T03:05:21.090Z", "issue": 40, "name": "things", "relevance": 0.952}}, {"model": "issues.tag", "pk": 313, "fields": {"created": "2016-02-21T03:05:21.091Z", "modified": "2016-02-21T03:05:21.091Z", "issue": 40, "name": "Django", "relevance": 0.952}}, {"model": "issues.tag", "pk": 314, "fields": {"created": "2016-02-21T03:05:21.092Z", "modified": "2016-02-21T03:05:21.092Z", "issue": 40, "name": "WHITENOISE_DEBUG", "relevance": 0.952}}, {"model": "issues.tag", "pk": 315, "fields": {"created": "2016-02-21T03:05:21.093Z", "modified": "2016-02-21T03:05:21.094Z", "issue": 40, "name": "server", "relevance": 0.952}}, {"model": "issues.tag", "pk": 316, "fields": {"created": "2016-02-21T03:05:21.095Z", "modified": "2016-02-21T03:05:21.096Z", "issue": 40, "name": "real incentive", "relevance": 0.714}}, {"model": "issues.tag", "pk": 317, "fields": {"created": "2016-02-21T03:05:21.097Z", "modified": "2016-02-21T03:05:21.097Z", "issue": 40, "name": "debug mode", "relevance": 0.714}}, {"model": "issues.tag", "pk": 318, "fields": {"created": "2016-02-21T03:05:21.098Z", "modified": "2016-02-21T03:05:21.099Z", "issue": 40, "name": "development mode", "relevance": 0.714}}, {"model": "issues.tag", "pk": 322, "fields": {"created": "2016-02-21T03:06:23.130Z", "modified": "2016-02-21T03:06:23.131Z", "issue": 41, "name": "MediaCling", "relevance": 0.323}}, {"model": "issues.tag", "pk": 323, "fields": {"created": "2016-02-21T03:06:23.890Z", "modified": "2016-02-21T03:06:23.891Z", "issue": 42, "name": "static files issue", "relevance": 0.962}}, {"model": "issues.tag", "pk": 324, "fields": {"created": "2016-02-21T03:06:23.893Z", "modified": "2016-02-21T03:06:23.893Z", "issue": 42, "name": "uwsgi", "relevance": 0.769}}, {"model": "issues.tag", "pk": 325, "fields": {"created": "2016-02-21T03:06:23.894Z", "modified": "2016-02-21T03:06:23.894Z", "issue": 42, "name": "Whitenoise", "relevance": 0.769}}, {"model": "issues.tag", "pk": 326, "fields": {"created": "2016-02-21T03:06:23.896Z", "modified": "2016-02-21T03:06:23.896Z", "issue": 42, "name": "nginx proxy", "relevance": 0.577}}, {"model": "issues.tag", "pk": 327, "fields": {"created": "2016-02-21T03:06:23.897Z", "modified": "2016-02-21T03:06:23.897Z", "issue": 42, "name": "static files", "relevance": 0.577}}, {"model": "issues.tag", "pk": 328, "fields": {"created": "2016-02-21T03:06:23.898Z", "modified": "2016-02-21T03:06:23.898Z", "issue": 42, "name": "simple howto", "relevance": 0.577}}, {"model": "issues.tag", "pk": 329, "fields": {"created": "2016-02-21T03:06:23.899Z", "modified": "2016-02-21T03:06:23.900Z", "issue": 42, "name": "docker containers", "relevance": 0.577}}, {"model": "issues.tag", "pk": 330, "fields": {"created": "2016-02-21T03:06:23.901Z", "modified": "2016-02-21T03:06:23.901Z", "issue": 42, "name": "help", "relevance": 0.385}}, {"model": "issues.tag", "pk": 331, "fields": {"created": "2016-02-21T03:06:23.903Z", "modified": "2016-02-21T03:06:23.903Z", "issue": 42, "name": "app", "relevance": 0.385}}, {"model": "issues.tag", "pk": 332, "fields": {"created": "2016-02-21T03:06:23.904Z", "modified": "2016-02-21T03:06:23.904Z", "issue": 42, "name": "DEFAULT_CACHE_ALIAS", "relevance": 0.385}}, {"model": "issues.tag", "pk": 333, "fields": {"created": "2016-02-21T03:06:24.613Z", "modified": "2016-02-21T03:06:24.613Z", "issue": 43, "name": "README typo", "relevance": 0.938}}, {"model": "issues.tag", "pk": 334, "fields": {"created": "2016-02-21T03:06:25.382Z", "modified": "2016-02-21T03:06:25.382Z", "issue": 44, "name": "Compress/Pre-compiler Documentation", "relevance": 0.938}}, {"model": "issues.tag", "pk": 335, "fields": {"created": "2016-02-21T03:06:25.384Z", "modified": "2016-02-21T03:06:25.385Z", "issue": 44, "name": "django compressor", "relevance": 0.938}}, {"model": "issues.tag", "pk": 336, "fields": {"created": "2016-02-21T03:06:25.386Z", "modified": "2016-02-21T03:06:25.386Z", "issue": 44, "name": "LESS precompilers", "relevance": 0.938}}, {"model": "issues.tag", "pk": 337, "fields": {"created": "2016-02-21T03:06:25.387Z", "modified": "2016-02-21T03:06:25.388Z", "issue": 44, "name": "SCSS", "relevance": 0.625}}, {"model": "issues.tag", "pk": 338, "fields": {"created": "2016-02-21T03:06:25.389Z", "modified": "2016-02-21T03:06:25.389Z", "issue": 44, "name": "Documentation", "relevance": 0.625}}, {"model": "issues.tag", "pk": 339, "fields": {"created": "2016-02-21T03:06:26.149Z", "modified": "2016-02-21T03:06:26.149Z", "issue": 45, "name": "bottle", "relevance": 0.952}}, {"model": "issues.tag", "pk": 340, "fields": {"created": "2016-02-21T03:06:26.151Z", "modified": "2016-02-21T03:06:26.151Z", "issue": 45, "name": "Example", "relevance": 0.952}}, {"model": "issues.tag", "pk": 341, "fields": {"created": "2016-02-21T03:06:26.152Z", "modified": "2016-02-21T03:06:26.152Z", "issue": 45, "name": "static file", "relevance": 0.714}}, {"model": "issues.tag", "pk": 342, "fields": {"created": "2016-02-21T03:06:26.153Z", "modified": "2016-02-21T03:06:26.154Z", "issue": 45, "name": "Python app", "relevance": 0.714}}, {"model": "issues.tag", "pk": 343, "fields": {"created": "2016-02-21T03:06:26.155Z", "modified": "2016-02-21T03:06:26.155Z", "issue": 45, "name": "WSGI example", "relevance": 0.714}}, {"model": "issues.tag", "pk": 344, "fields": {"created": "2016-02-21T03:06:26.156Z", "modified": "2016-02-21T03:06:26.156Z", "issue": 45, "name": "http://bottlepy.org", "relevance": 0.476}}, {"model": "issues.tag", "pk": 345, "fields": {"created": "2016-02-21T03:06:26.157Z", "modified": "2016-02-21T03:06:26.157Z", "issue": 45, "name": "server", "relevance": 0.476}}, {"model": "issues.tag", "pk": 346, "fields": {"created": "2016-02-21T03:06:26.158Z", "modified": "2016-02-21T03:06:26.158Z", "issue": 45, "name": "project", "relevance": 0.476}}, {"model": "issues.tag", "pk": 347, "fields": {"created": "2016-02-21T03:06:26.160Z", "modified": "2016-02-21T03:06:26.160Z", "issue": 45, "name": "Heroku", "relevance": 0.476}}, {"model": "issues.tag", "pk": 348, "fields": {"created": "2016-02-21T03:06:26.161Z", "modified": "2016-02-21T03:06:26.161Z", "issue": 45, "name": "http://gunicorn.org", "relevance": 0.476}}, {"model": "issues.tag", "pk": 349, "fields": {"created": "2016-02-21T03:06:26.911Z", "modified": "2016-02-21T03:06:26.911Z", "issue": 46, "name": "attribute", "relevance": 0.968}}, {"model": "issues.tag", "pk": 350, "fields": {"created": "2016-02-21T03:06:26.913Z", "modified": "2016-02-21T03:06:26.914Z", "issue": 46, "name": "line", "relevance": 0.968}}, {"model": "issues.tag", "pk": 351, "fields": {"created": "2016-02-21T03:06:26.915Z", "modified": "2016-02-21T03:06:26.915Z", "issue": 46, "name": "self.ERROR", "relevance": 0.645}}, {"model": "issues.tag", "pk": 352, "fields": {"created": "2016-02-21T03:06:26.916Z", "modified": "2016-02-21T03:06:26.916Z", "issue": 46, "name": "message", "relevance": 0.645}}, {"model": "issues.tag", "pk": 353, "fields": {"created": "2016-02-21T03:06:26.917Z", "modified": "2016-02-21T03:06:26.917Z", "issue": 46, "name": "Python", "relevance": 0.645}}, {"model": "issues.tag", "pk": 354, "fields": {"created": "2016-02-21T03:06:26.919Z", "modified": "2016-02-21T03:06:26.919Z", "issue": 46, "name": "exception.args", "relevance": 0.645}}, {"model": "issues.tag", "pk": 355, "fields": {"created": "2016-02-21T03:06:26.920Z", "modified": "2016-02-21T03:06:26.920Z", "issue": 46, "name": "make_helpful_exception", "relevance": 0.645}}, {"model": "issues.tag", "pk": 356, "fields": {"created": "2016-02-21T03:06:26.922Z", "modified": "2016-02-21T03:06:26.922Z", "issue": 46, "name": "match", "relevance": 0.645}}, {"model": "issues.tag", "pk": 357, "fields": {"created": "2016-02-21T03:06:26.923Z", "modified": "2016-02-21T03:06:26.923Z", "issue": 46, "name": "search", "relevance": 0.645}}, {"model": "issues.tag", "pk": 358, "fields": {"created": "2016-02-21T03:06:26.924Z", "modified": "2016-02-21T03:06:26.925Z", "issue": 46, "name": "MSG_RE", "relevance": 0.645}}, {"model": "issues.tag", "pk": 359, "fields": {"created": "2016-02-21T03:06:27.665Z", "modified": "2016-02-21T03:06:27.666Z", "issue": 47, "name": "django-assets", "relevance": 0.968}}, {"model": "issues.tag", "pk": 360, "fields": {"created": "2016-02-21T03:06:27.668Z", "modified": "2016-02-21T03:06:27.668Z", "issue": 47, "name": "Example code", "relevance": 0.484}}, {"model": "issues.tag", "pk": 361, "fields": {"created": "2016-02-21T03:06:27.669Z", "modified": "2016-02-21T03:06:27.669Z", "issue": 47, "name": "packed files", "relevance": 0.484}}, {"model": "issues.tag", "pk": 362, "fields": {"created": "2016-02-21T03:06:27.670Z", "modified": "2016-02-21T03:06:27.671Z", "issue": 47, "name": "files", "relevance": 0.323}}, {"model": "issues.tag", "pk": 363, "fields": {"created": "2016-02-21T03:06:27.672Z", "modified": "2016-02-21T03:06:27.672Z", "issue": 47, "name": "assets", "relevance": 0.323}}, {"model": "issues.tag", "pk": 364, "fields": {"created": "2016-02-21T03:06:27.673Z", "modified": "2016-02-21T03:06:27.673Z", "issue": 47, "name": "webpages", "relevance": 0.323}}, {"model": "issues.tag", "pk": 365, "fields": {"created": "2016-02-21T03:06:28.433Z", "modified": "2016-02-21T03:06:28.433Z", "issue": 48, "name": "static files", "relevance": 0.968}}, {"model": "issues.tag", "pk": 366, "fields": {"created": "2016-02-21T03:06:28.435Z", "modified": "2016-02-21T03:06:28.435Z", "issue": 48, "name": "True DjangoWhiteNoise", "relevance": 0.968}}, {"model": "issues.tag", "pk": 367, "fields": {"created": "2016-02-21T03:06:28.436Z", "modified": "2016-02-21T03:06:28.437Z", "issue": 48, "name": "DEBUG", "relevance": 0.645}}, {"model": "issues.tag", "pk": 368, "fields": {"created": "2016-02-21T03:06:29.192Z", "modified": "2016-02-21T03:06:29.193Z", "issue": 49, "name": "empty file", "relevance": 0.987}}, {"model": "issues.tag", "pk": 369, "fields": {"created": "2016-02-21T03:06:29.194Z", "modified": "2016-02-21T03:06:29.195Z", "issue": 49, "name": "collectstatic target directory", "relevance": 0.329}}, {"model": "issues.tag", "pk": 370, "fields": {"created": "2016-02-21T03:06:29.196Z", "modified": "2016-02-21T03:06:29.196Z", "issue": 49, "name": "heroku", "relevance": 0.263}}, {"model": "issues.tag", "pk": 371, "fields": {"created": "2016-02-21T03:06:29.198Z", "modified": "2016-02-21T03:06:29.198Z", "issue": 49, "name": "division", "relevance": 0.263}}, {"model": "issues.tag", "pk": 372, "fields": {"created": "2016-02-21T03:06:29.199Z", "modified": "2016-02-21T03:06:29.199Z", "issue": 49, "name": "white noise", "relevance": 0.197}}, {"model": "issues.tag", "pk": 373, "fields": {"created": "2016-02-21T03:06:29.200Z", "modified": "2016-02-21T03:06:29.200Z", "issue": 49, "name": "dummy file", "relevance": 0.197}}, {"model": "issues.tag", "pk": 374, "fields": {"created": "2016-02-21T03:06:29.201Z", "modified": "2016-02-21T03:06:29.202Z", "issue": 49, "name": "static dir", "relevance": 0.197}}, {"model": "issues.tag", "pk": 375, "fields": {"created": "2016-02-21T03:06:29.203Z", "modified": "2016-02-21T03:06:29.203Z", "issue": 49, "name": "static assets", "relevance": 0.197}}, {"model": "issues.tag", "pk": 376, "fields": {"created": "2016-02-21T03:06:29.204Z", "modified": "2016-02-21T03:06:29.204Z", "issue": 49, "name": "https://devcenter.heroku.com/articles/django-assets", "relevance": 0.132}}, {"model": "issues.tag", "pk": 377, "fields": {"created": "2016-02-21T03:06:29.205Z", "modified": "2016-02-21T03:06:29.205Z", "issue": 49, "name": "size", "relevance": 0.132}}, {"model": "issues.tag", "pk": 378, "fields": {"created": "2016-02-21T03:06:29.968Z", "modified": "2016-02-21T03:06:29.968Z", "issue": 50, "name": "OPTIONS", "relevance": 0.952}}, {"model": "issues.tag", "pk": 379, "fields": {"created": "2016-02-21T03:06:29.970Z", "modified": "2016-02-21T03:06:29.971Z", "issue": 50, "name": "request type", "relevance": 0.714}}, {"model": "issues.tag", "pk": 380, "fields": {"created": "2016-02-21T03:06:29.972Z", "modified": "2016-02-21T03:06:29.972Z", "issue": 50, "name": "fixes", "relevance": 0.476}}, {"model": "issues.tag", "pk": 381, "fields": {"created": "2016-02-21T03:06:29.973Z", "modified": "2016-02-21T03:06:29.973Z", "issue": 50, "name": "request", "relevance": 0.476}}, {"model": "issues.tag", "pk": 382, "fields": {"created": "2016-02-21T03:06:29.974Z", "modified": "2016-02-21T03:06:29.974Z", "issue": 50, "name": "care", "relevance": 0.476}}, {"model": "issues.tag", "pk": 383, "fields": {"created": "2016-02-21T03:06:30.731Z", "modified": "2016-02-21T03:06:30.732Z", "issue": 51, "name": "ORIGINS HTTP request", "relevance": 0.98}}, {"model": "issues.tag", "pk": 384, "fields": {"created": "2016-02-21T03:06:30.734Z", "modified": "2016-02-21T03:06:30.734Z", "issue": 51, "name": "support Currently whitenoise", "relevance": 0.49}}, {"model": "issues.tag", "pk": 385, "fields": {"created": "2016-02-21T03:06:30.735Z", "modified": "2016-02-21T03:06:30.735Z", "issue": 51, "name": "HTTP request support", "relevance": 0.49}}, {"model": "issues.tag", "pk": 386, "fields": {"created": "2016-02-21T03:06:30.736Z", "modified": "2016-02-21T03:06:30.737Z", "issue": 51, "name": "asset", "relevance": 0.392}}, {"model": "issues.tag", "pk": 387, "fields": {"created": "2016-02-21T03:06:30.738Z", "modified": "2016-02-21T03:06:30.738Z", "issue": 51, "name": "front", "relevance": 0.196}}, {"model": "issues.tag", "pk": 388, "fields": {"created": "2016-02-21T03:06:30.739Z", "modified": "2016-02-21T03:06:30.739Z", "issue": 51, "name": "attempt", "relevance": 0.196}}, {"model": "issues.tag", "pk": 389, "fields": {"created": "2016-02-21T03:06:30.740Z", "modified": "2016-02-21T03:06:30.741Z", "issue": 51, "name": "CDN", "relevance": 0.196}}, {"model": "issues.tag", "pk": 390, "fields": {"created": "2016-02-21T03:06:30.742Z", "modified": "2016-02-21T03:06:30.742Z", "issue": 51, "name": "domains", "relevance": 0.196}}, {"model": "issues.tag", "pk": 391, "fields": {"created": "2016-02-21T03:06:30.743Z", "modified": "2016-02-21T03:06:30.743Z", "issue": 51, "name": "whitenoise", "relevance": 0.196}}, {"model": "issues.tag", "pk": 392, "fields": {"created": "2016-02-21T03:06:30.744Z", "modified": "2016-02-21T03:06:30.744Z", "issue": 51, "name": "browser", "relevance": 0.196}}, {"model": "issues.tag", "pk": 393, "fields": {"created": "2016-02-21T03:06:31.498Z", "modified": "2016-02-21T03:06:31.498Z", "issue": 52, "name": "Leverage CloudFront behaviors", "relevance": 0.962}}, {"model": "issues.tag", "pk": 394, "fields": {"created": "2016-02-21T03:06:31.500Z", "modified": "2016-02-21T03:06:31.500Z", "issue": 52, "name": "static dir Leverage", "relevance": 0.962}}, {"model": "issues.tag", "pk": 395, "fields": {"created": "2016-02-21T03:06:31.502Z", "modified": "2016-02-21T03:06:31.502Z", "issue": 52, "name": "CloudFront", "relevance": 0.769}}, {"model": "issues.tag", "pk": 396, "fields": {"created": "2016-02-21T03:06:31.503Z", "modified": "2016-02-21T03:06:31.503Z", "issue": 52, "name": "entire site", "relevance": 0.577}}, {"model": "issues.tag", "pk": 397, "fields": {"created": "2016-02-21T03:06:31.504Z", "modified": "2016-02-21T03:06:31.504Z", "issue": 52, "name": "fixes", "relevance": 0.385}}, {"model": "issues.tag", "pk": 398, "fields": {"created": "2016-02-21T03:06:31.505Z", "modified": "2016-02-21T03:06:31.505Z", "issue": 52, "name": "Directions", "relevance": 0.385}}, {"model": "issues.tag", "pk": 399, "fields": {"created": "2016-02-21T03:06:32.266Z", "modified": "2016-02-21T03:06:32.267Z", "issue": 53, "name": "application", "relevance": 0.976}}, {"model": "issues.tag", "pk": 400, "fields": {"created": "2016-02-21T03:06:32.268Z", "modified": "2016-02-21T03:06:32.269Z", "issue": 53, "name": "CloudFront", "relevance": 0.732}}, {"model": "issues.tag", "pk": 401, "fields": {"created": "2016-02-21T03:06:32.270Z", "modified": "2016-02-21T03:06:32.270Z", "issue": 53, "name": "Documentation", "relevance": 0.488}}, {"model": "issues.tag", "pk": 402, "fields": {"created": "2016-02-21T03:06:32.271Z", "modified": "2016-02-21T03:06:32.272Z", "issue": 53, "name": "web crawlers", "relevance": 0.366}}, {"model": "issues.tag", "pk": 403, "fields": {"created": "2016-02-21T03:06:32.273Z", "modified": "2016-02-21T03:06:32.273Z", "issue": 53, "name": "CloudFront instance", "relevance": 0.366}}, {"model": "issues.tag", "pk": 404, "fields": {"created": "2016-02-21T03:06:32.274Z", "modified": "2016-02-21T03:06:32.274Z", "issue": 53, "name": "static clone", "relevance": 0.366}}, {"model": "issues.tag", "pk": 405, "fields": {"created": "2016-02-21T03:06:32.275Z", "modified": "2016-02-21T03:06:32.276Z", "issue": 53, "name": "CloudFront domain", "relevance": 0.366}}, {"model": "issues.tag", "pk": 406, "fields": {"created": "2016-02-21T03:06:32.277Z", "modified": "2016-02-21T03:06:32.277Z", "issue": 53, "name": "static assets", "relevance": 0.366}}, {"model": "issues.tag", "pk": 407, "fields": {"created": "2016-02-21T03:06:32.278Z", "modified": "2016-02-21T03:06:32.279Z", "issue": 53, "name": "URL", "relevance": 0.244}}, {"model": "issues.tag", "pk": 408, "fields": {"created": "2016-02-21T03:06:32.280Z", "modified": "2016-02-21T03:06:32.280Z", "issue": 53, "name": "clone", "relevance": 0.244}}, {"model": "issues.tag", "pk": 409, "fields": {"created": "2016-02-21T03:06:33.051Z", "modified": "2016-02-21T03:06:33.051Z", "issue": 54, "name": "files", "relevance": 0.952}}, {"model": "issues.tag", "pk": 410, "fields": {"created": "2016-02-21T03:06:33.053Z", "modified": "2016-02-21T03:06:33.054Z", "issue": 54, "name": "WhiteNoise", "relevance": 0.952}}, {"model": "issues.tag", "pk": 411, "fields": {"created": "2016-02-21T03:06:33.055Z", "modified": "2016-02-21T03:06:33.055Z", "issue": 54, "name": "static files", "relevance": 0.714}}, {"model": "issues.tag", "pk": 412, "fields": {"created": "2016-02-21T03:06:33.056Z", "modified": "2016-02-21T03:06:33.056Z", "issue": 54, "name": "fixed sets", "relevance": 0.714}}, {"model": "issues.tag", "pk": 413, "fields": {"created": "2016-02-21T03:06:33.057Z", "modified": "2016-02-21T03:06:33.057Z", "issue": 54, "name": "development", "relevance": 0.476}}, {"model": "issues.tag", "pk": 414, "fields": {"created": "2016-02-21T03:06:33.058Z", "modified": "2016-02-21T03:06:33.058Z", "issue": 54, "name": "runtime", "relevance": 0.476}}, {"model": "issues.tag", "pk": 415, "fields": {"created": "2016-02-21T03:06:33.059Z", "modified": "2016-02-21T03:06:33.060Z", "issue": 54, "name": "production", "relevance": 0.476}}, {"model": "issues.tag", "pk": 416, "fields": {"created": "2016-02-21T03:06:33.061Z", "modified": "2016-02-21T03:06:33.061Z", "issue": 54, "name": "workarounds/alternatives", "relevance": 0.476}}, {"model": "issues.tag", "pk": 417, "fields": {"created": "2016-02-21T03:06:33.062Z", "modified": "2016-02-21T03:06:33.062Z", "issue": 54, "name": "Document", "relevance": 0.476}}, {"model": "issues.tag", "pk": 418, "fields": {"created": "2016-02-21T03:06:33.063Z", "modified": "2016-02-21T03:06:33.063Z", "issue": 54, "name": "fact", "relevance": 0.476}}, {"model": "issues.tag", "pk": 419, "fields": {"created": "2016-02-21T03:06:33.808Z", "modified": "2016-02-21T03:06:33.808Z", "issue": 55, "name": "files", "relevance": 0.952}}, {"model": "issues.tag", "pk": 420, "fields": {"created": "2016-02-21T03:06:33.811Z", "modified": "2016-02-21T03:06:33.811Z", "issue": 55, "name": "static directory", "relevance": 0.714}}, {"model": "issues.tag", "pk": 421, "fields": {"created": "2016-02-21T03:06:33.812Z", "modified": "2016-02-21T03:06:33.812Z", "issue": 55, "name": "started WhiteNoise", "relevance": 0.714}}, {"model": "issues.tag", "pk": 422, "fields": {"created": "2016-02-21T03:06:33.813Z", "modified": "2016-02-21T03:06:33.813Z", "issue": 55, "name": "WhiteNoise", "relevance": 0.476}}, {"model": "issues.tag", "pk": 423, "fields": {"created": "2016-02-21T03:06:34.554Z", "modified": "2016-02-21T03:06:34.554Z", "issue": 56, "name": "local file path", "relevance": 0.962}}, {"model": "issues.tag", "pk": 424, "fields": {"created": "2016-02-21T03:06:34.556Z", "modified": "2016-02-21T03:06:34.556Z", "issue": 56, "name": "storage backend requirements", "relevance": 0.962}}, {"model": "issues.tag", "pk": 425, "fields": {"created": "2016-02-21T03:06:34.557Z", "modified": "2016-02-21T03:06:34.558Z", "issue": 56, "name": "remote storage backend", "relevance": 0.962}}, {"model": "issues.tag", "pk": 426, "fields": {"created": "2016-02-21T03:06:34.559Z", "modified": "2016-02-21T03:06:34.559Z", "issue": 56, "name": "backend supply", "relevance": 0.577}}, {"model": "issues.tag", "pk": 427, "fields": {"created": "2016-02-21T03:06:34.560Z", "modified": "2016-02-21T03:06:34.560Z", "issue": 56, "name": "Document", "relevance": 0.385}}, {"model": "issues.tag", "pk": 428, "fields": {"created": "2016-02-21T03:06:34.561Z", "modified": "2016-02-21T03:06:34.561Z", "issue": 56, "name": "requirements", "relevance": 0.385}}, {"model": "issues.tag", "pk": 429, "fields": {"created": "2016-02-21T03:06:34.563Z", "modified": "2016-02-21T03:06:34.563Z", "issue": 56, "name": "storage", "relevance": 0.385}}, {"model": "issues.tag", "pk": 430, "fields": {"created": "2016-02-21T03:06:34.564Z", "modified": "2016-02-21T03:06:34.564Z", "issue": 56, "name": "subclassing", "relevance": 0.385}}, {"model": "issues.tag", "pk": 431, "fields": {"created": "2016-02-21T03:06:34.566Z", "modified": "2016-02-21T03:06:34.566Z", "issue": 56, "name": "compatibility", "relevance": 0.385}}, {"model": "issues.tag", "pk": 432, "fields": {"created": "2016-02-21T03:06:34.568Z", "modified": "2016-02-21T03:06:34.568Z", "issue": 56, "name": "whitenoise", "relevance": 0.385}}, {"model": "issues.tag", "pk": 433, "fields": {"created": "2016-02-21T03:06:35.325Z", "modified": "2016-02-21T03:06:35.325Z", "issue": 57, "name": "far-future cache headers", "relevance": 0.98}}, {"model": "issues.tag", "pk": 434, "fields": {"created": "2016-02-21T03:06:35.327Z", "modified": "2016-02-21T03:06:35.327Z", "issue": 57, "name": "content", "relevance": 0.392}}, {"model": "issues.tag", "pk": 435, "fields": {"created": "2016-02-21T03:06:35.328Z", "modified": "2016-02-21T03:06:35.329Z", "issue": 57, "name": "README Change", "relevance": 0.294}}, {"model": "issues.tag", "pk": 436, "fields": {"created": "2016-02-21T03:06:35.330Z", "modified": "2016-02-21T03:06:35.330Z", "issue": 57, "name": "Spelling", "relevance": 0.196}}, {"model": "issues.tag", "pk": 437, "fields": {"created": "2016-02-21T03:06:36.077Z", "modified": "2016-02-21T03:06:36.077Z", "issue": 58, "name": "Added PyPy", "relevance": 0.938}}, {"model": "issues.tag", "pk": 438, "fields": {"created": "2016-02-21T03:06:36.079Z", "modified": "2016-02-21T03:06:36.079Z", "issue": 58, "name": "matrix", "relevance": 0.625}}, {"model": "issues.tag", "pk": 439, "fields": {"created": "2016-02-21T03:06:36.831Z", "modified": "2016-02-21T03:06:36.832Z", "issue": 59, "name": "relative path", "relevance": 0.968}}, {"model": "issues.tag", "pk": 440, "fields": {"created": "2016-02-21T03:06:36.834Z", "modified": "2016-02-21T03:06:36.834Z", "issue": 59, "name": "core WSGI app", "relevance": 0.806}}, {"model": "issues.tag", "pk": 441, "fields": {"created": "2016-02-21T03:06:36.835Z", "modified": "2016-02-21T03:06:36.836Z", "issue": 59, "name": "paths", "relevance": 0.645}}, {"model": "issues.tag", "pk": 442, "fields": {"created": "2016-02-21T03:06:36.837Z", "modified": "2016-02-21T03:06:36.837Z", "issue": 59, "name": "required behaviour", "relevance": 0.484}}, {"model": "issues.tag", "pk": 443, "fields": {"created": "2016-02-21T03:06:36.838Z", "modified": "2016-02-21T03:06:36.838Z", "issue": 59, "name": "Cheers Steve", "relevance": 0.484}}, {"model": "issues.tag", "pk": 444, "fields": {"created": "2016-02-21T03:06:36.839Z", "modified": "2016-02-21T03:06:36.839Z", "issue": 59, "name": "gotchas", "relevance": 0.323}}, {"model": "issues.tag", "pk": 445, "fields": {"created": "2016-02-21T03:06:36.840Z", "modified": "2016-02-21T03:06:36.841Z", "issue": 59, "name": "things", "relevance": 0.323}}, {"model": "issues.tag", "pk": 446, "fields": {"created": "2016-02-21T03:06:36.842Z", "modified": "2016-02-21T03:06:36.842Z", "issue": 59, "name": "docs", "relevance": 0.323}}, {"model": "issues.tag", "pk": 447, "fields": {"created": "2016-02-21T03:06:36.843Z", "modified": "2016-02-21T03:06:36.843Z", "issue": 59, "name": "Django", "relevance": 0.323}}, {"model": "issues.tag", "pk": 448, "fields": {"created": "2016-02-21T03:06:36.844Z", "modified": "2016-02-21T03:06:36.844Z", "issue": 59, "name": "David", "relevance": 0.323}}, {"model": "issues.tag", "pk": 449, "fields": {"created": "2016-02-21T03:06:37.596Z", "modified": "2016-02-21T03:06:37.597Z", "issue": 60, "name": "file", "relevance": 0.952}}, {"model": "issues.tag", "pk": 450, "fields": {"created": "2016-02-21T03:06:37.598Z", "modified": "2016-02-21T03:06:37.599Z", "issue": 60, "name": "add_file method", "relevance": 0.714}}, {"model": "issues.tag", "pk": 451, "fields": {"created": "2016-02-21T03:06:37.600Z", "modified": "2016-02-21T03:06:37.600Z", "issue": 60, "name": "specific paths", "relevance": 0.714}}, {"model": "issues.tag", "pk": 452, "fields": {"created": "2016-02-21T03:06:37.601Z", "modified": "2016-02-21T03:06:37.602Z", "issue": 60, "name": "favicon.ico", "relevance": 0.476}}, {"model": "issues.tag", "pk": 453, "fields": {"created": "2016-02-21T03:06:37.603Z", "modified": "2016-02-21T03:06:37.603Z", "issue": 60, "name": "index.html", "relevance": 0.476}}, {"model": "issues.tag", "pk": 454, "fields": {"created": "2016-02-21T03:06:37.604Z", "modified": "2016-02-21T03:06:37.604Z", "issue": 60, "name": "ico", "relevance": 0.476}}, {"model": "issues.tag", "pk": 455, "fields": {"created": "2016-02-21T03:06:37.605Z", "modified": "2016-02-21T03:06:37.606Z", "issue": 60, "name": "path/to/frontend", "relevance": 0.476}}, {"model": "issues.tag", "pk": 456, "fields": {"created": "2016-02-21T03:06:37.607Z", "modified": "2016-02-21T03:06:37.608Z", "issue": 60, "name": "path/to/favicon", "relevance": 0.476}}, {"model": "issues.tag", "pk": 457, "fields": {"created": "2016-02-21T03:06:37.609Z", "modified": "2016-02-21T03:06:37.609Z", "issue": 60, "name": "examples", "relevance": 0.476}}, {"model": "issues.tag", "pk": 458, "fields": {"created": "2016-02-21T03:06:37.610Z", "modified": "2016-02-21T03:06:37.611Z", "issue": 60, "name": "application.add", "relevance": 0.476}}, {"model": "issues.tag", "pk": 461, "fields": {"created": "2016-02-21T03:07:40.935Z", "modified": "2016-02-21T03:07:40.936Z", "issue": 61, "name": "html", "relevance": 0.385}}, {"model": "issues.tag", "pk": 462, "fields": {"created": "2016-02-21T03:07:41.669Z", "modified": "2016-02-21T03:07:41.670Z", "issue": 62, "name": "Internal Server Error", "relevance": 0.962}}, {"model": "issues.tag", "pk": 463, "fields": {"created": "2016-02-21T03:07:41.672Z", "modified": "2016-02-21T03:07:41.672Z", "issue": 62, "name": "javascript source code", "relevance": 0.962}}, {"model": "issues.tag", "pk": 464, "fields": {"created": "2016-02-21T03:07:41.673Z", "modified": "2016-02-21T03:07:41.674Z", "issue": 62, "name": "64bit python", "relevance": 0.577}}, {"model": "issues.tag", "pk": 465, "fields": {"created": "2016-02-21T03:07:41.675Z", "modified": "2016-02-21T03:07:41.675Z", "issue": 62, "name": "wsgi application", "relevance": 0.577}}, {"model": "issues.tag", "pk": 466, "fields": {"created": "2016-02-21T03:07:41.676Z", "modified": "2016-02-21T03:07:41.676Z", "issue": 62, "name": "static file", "relevance": 0.577}}, {"model": "issues.tag", "pk": 467, "fields": {"created": "2016-02-21T03:07:41.677Z", "modified": "2016-02-21T03:07:41.677Z", "issue": 62, "name": "file modification", "relevance": 0.577}}, {"model": "issues.tag", "pk": 468, "fields": {"created": "2016-02-21T03:07:41.678Z", "modified": "2016-02-21T03:07:41.679Z", "issue": 62, "name": "ubuntu", "relevance": 0.385}}, {"model": "issues.tag", "pk": 469, "fields": {"created": "2016-02-21T03:07:41.680Z", "modified": "2016-02-21T03:07:41.680Z", "issue": 62, "name": "Error", "relevance": 0.385}}, {"model": "issues.tag", "pk": 470, "fields": {"created": "2016-02-21T03:07:41.682Z", "modified": "2016-02-21T03:07:41.682Z", "issue": 62, "name": "whitenoise", "relevance": 0.385}}, {"model": "issues.tag", "pk": 471, "fields": {"created": "2016-02-21T03:07:42.448Z", "modified": "2016-02-21T03:07:42.448Z", "issue": 63, "name": "ManifestStaticFilesStorage", "relevance": 0.952}}, {"model": "issues.tag", "pk": 472, "fields": {"created": "2016-02-21T03:07:42.450Z", "modified": "2016-02-21T03:07:42.450Z", "issue": 63, "name": "CachedStaticFilesStorage", "relevance": 0.952}}, {"model": "issues.tag", "pk": 473, "fields": {"created": "2016-02-21T03:07:42.451Z", "modified": "2016-02-21T03:07:42.451Z", "issue": 63, "name": "Django docs", "relevance": 0.714}}, {"model": "issues.tag", "pk": 474, "fields": {"created": "2016-02-21T03:07:42.452Z", "modified": "2016-02-21T03:07:42.453Z", "issue": 63, "name": "file system", "relevance": 0.714}}, {"model": "issues.tag", "pk": 475, "fields": {"created": "2016-02-21T03:07:42.454Z", "modified": "2016-02-21T03:07:42.454Z", "issue": 63, "name": "Cached", "relevance": 0.476}}, {"model": "issues.tag", "pk": 476, "fields": {"created": "2016-02-21T03:07:42.455Z", "modified": "2016-02-21T03:07:42.455Z", "issue": 63, "name": "system", "relevance": 0.476}}, {"model": "issues.tag", "pk": 477, "fields": {"created": "2016-02-21T03:07:42.457Z", "modified": "2016-02-21T03:07:42.457Z", "issue": 63, "name": "access", "relevance": 0.476}}, {"model": "issues.tag", "pk": 478, "fields": {"created": "2016-02-21T03:07:42.458Z", "modified": "2016-02-21T03:07:42.458Z", "issue": 63, "name": "heroku", "relevance": 0.476}}, {"model": "issues.tag", "pk": 479, "fields": {"created": "2016-02-21T03:07:42.459Z", "modified": "2016-02-21T03:07:42.460Z", "issue": 63, "name": "advantages", "relevance": 0.476}}, {"model": "issues.tag", "pk": 480, "fields": {"created": "2016-02-21T03:07:42.461Z", "modified": "2016-02-21T03:07:42.461Z", "issue": 63, "name": "situations", "relevance": 0.476}}, {"model": "issues.tag", "pk": 481, "fields": {"created": "2016-02-21T03:07:43.166Z", "modified": "2016-02-21T03:07:43.166Z", "issue": 64, "name": "WhiteNoise", "relevance": 0.952}}, {"model": "issues.tag", "pk": 482, "fields": {"created": "2016-02-21T03:07:43.168Z", "modified": "2016-02-21T03:07:43.168Z", "issue": 64, "name": "base docs", "relevance": 0.714}}, {"model": "issues.tag", "pk": 483, "fields": {"created": "2016-02-21T03:07:43.169Z", "modified": "2016-02-21T03:07:43.170Z", "issue": 64, "name": "CND", "relevance": 0.476}}, {"model": "issues.tag", "pk": 484, "fields": {"created": "2016-02-21T03:07:43.171Z", "modified": "2016-02-21T03:07:43.171Z", "issue": 64, "name": "typo", "relevance": 0.476}}, {"model": "issues.tag", "pk": 485, "fields": {"created": "2016-02-21T03:07:43.928Z", "modified": "2016-02-21T03:07:43.928Z", "issue": 65, "name": "chained Exception output", "relevance": 0.962}}, {"model": "issues.tag", "pk": 486, "fields": {"created": "2016-02-21T03:07:43.930Z", "modified": "2016-02-21T03:07:43.930Z", "issue": 65, "name": "Minor nitpick", "relevance": 0.577}}, {"model": "issues.tag", "pk": 487, "fields": {"created": "2016-02-21T03:07:43.932Z", "modified": "2016-02-21T03:07:43.932Z", "issue": 65, "name": "Python", "relevance": 0.385}}, {"model": "issues.tag", "pk": 488, "fields": {"created": "2016-02-21T03:07:43.933Z", "modified": "2016-02-21T03:07:43.933Z", "issue": 65, "name": "call", "relevance": 0.385}}, {"model": "issues.tag", "pk": 489, "fields": {"created": "2016-02-21T03:07:43.934Z", "modified": "2016-02-21T03:07:43.934Z", "issue": 65, "name": "Whitenoise", "relevance": 0.385}}, {"model": "issues.tag", "pk": 490, "fields": {"created": "2016-02-21T03:07:43.935Z", "modified": "2016-02-21T03:07:43.935Z", "issue": 65, "name": "method", "relevance": 0.385}}, {"model": "issues.tag", "pk": 491, "fields": {"created": "2016-02-21T03:07:44.691Z", "modified": "2016-02-21T03:07:44.691Z", "issue": 66, "name": "tests", "relevance": 0.986}}, {"model": "issues.tag", "pk": 492, "fields": {"created": "2016-02-21T03:07:44.693Z", "modified": "2016-02-21T03:07:44.693Z", "issue": 66, "name": "fast collectstatic command", "relevance": 0.352}}, {"model": "issues.tag", "pk": 493, "fields": {"created": "2016-02-21T03:07:44.694Z", "modified": "2016-02-21T03:07:44.695Z", "issue": 66, "name": "setUpClass", "relevance": 0.282}}, {"model": "issues.tag", "pk": 494, "fields": {"created": "2016-02-21T03:07:44.696Z", "modified": "2016-02-21T03:07:44.696Z", "issue": 66, "name": "thing", "relevance": 0.282}}, {"model": "issues.tag", "pk": 495, "fields": {"created": "2016-02-21T03:07:44.697Z", "modified": "2016-02-21T03:07:44.697Z", "issue": 66, "name": "new tests", "relevance": 0.211}}, {"model": "issues.tag", "pk": 496, "fields": {"created": "2016-02-21T03:07:44.698Z", "modified": "2016-02-21T03:07:44.698Z", "issue": 66, "name": "accepted practice", "relevance": 0.211}}, {"model": "issues.tag", "pk": 497, "fields": {"created": "2016-02-21T03:07:44.699Z", "modified": "2016-02-21T03:07:44.699Z", "issue": 66, "name": "GZIP option", "relevance": 0.211}}, {"model": "issues.tag", "pk": 498, "fields": {"created": "2016-02-21T03:07:44.701Z", "modified": "2016-02-21T03:07:44.701Z", "issue": 66, "name": "collectstatic command", "relevance": 0.211}}, {"model": "issues.tag", "pk": 499, "fields": {"created": "2016-02-21T03:07:44.702Z", "modified": "2016-02-21T03:07:44.702Z", "issue": 66, "name": "optional setting", "relevance": 0.211}}, {"model": "issues.tag", "pk": 500, "fields": {"created": "2016-02-21T03:07:44.703Z", "modified": "2016-02-21T03:07:44.703Z", "issue": 66, "name": "code", "relevance": 0.141}}, {"model": "issues.tag", "pk": 501, "fields": {"created": "2016-02-21T03:07:45.470Z", "modified": "2016-02-21T03:07:45.470Z", "issue": 67, "name": "Top Level Files", "relevance": 0.962}}, {"model": "issues.tag", "pk": 502, "fields": {"created": "2016-02-21T03:07:45.471Z", "modified": "2016-02-21T03:07:45.472Z", "issue": 67, "name": "Django setup", "relevance": 0.577}}, {"model": "issues.tag", "pk": 503, "fields": {"created": "2016-02-21T03:07:45.472Z", "modified": "2016-02-21T03:07:45.473Z", "issue": 67, "name": "Files", "relevance": 0.385}}, {"model": "issues.tag", "pk": 504, "fields": {"created": "2016-02-21T03:07:45.474Z", "modified": "2016-02-21T03:07:45.474Z", "issue": 67, "name": "Django", "relevance": 0.385}}, {"model": "issues.tag", "pk": 505, "fields": {"created": "2016-02-21T03:07:46.178Z", "modified": "2016-02-21T03:07:46.179Z", "issue": 68, "name": "Whitenoise", "relevance": 0.976}}, {"model": "issues.tag", "pk": 506, "fields": {"created": "2016-02-21T03:07:46.181Z", "modified": "2016-02-21T03:07:46.181Z", "issue": 68, "name": "CORS headers", "relevance": 0.732}}, {"model": "issues.tag", "pk": 507, "fields": {"created": "2016-02-21T03:07:46.182Z", "modified": "2016-02-21T03:07:46.182Z", "issue": 68, "name": "default", "relevance": 0.732}}, {"model": "issues.tag", "pk": 508, "fields": {"created": "2016-02-21T03:07:46.183Z", "modified": "2016-02-21T03:07:46.183Z", "issue": 68, "name": "headers", "relevance": 0.732}}, {"model": "issues.tag", "pk": 509, "fields": {"created": "2016-02-21T03:07:46.184Z", "modified": "2016-02-21T03:07:46.185Z", "issue": 68, "name": "media query polyfill", "relevance": 0.61}}, {"model": "issues.tag", "pk": 510, "fields": {"created": "2016-02-21T03:07:46.186Z", "modified": "2016-02-21T03:07:46.186Z", "issue": 68, "name": "nasty cross-origin surprises", "relevance": 0.61}}, {"model": "issues.tag", "pk": 511, "fields": {"created": "2016-02-21T03:07:46.187Z", "modified": "2016-02-21T03:07:46.187Z", "issue": 68, "name": "Access-Control-Allow-Origin", "relevance": 0.488}}, {"model": "issues.tag", "pk": 512, "fields": {"created": "2016-02-21T03:07:46.188Z", "modified": "2016-02-21T03:07:46.189Z", "issue": 68, "name": "files", "relevance": 0.488}}, {"model": "issues.tag", "pk": 513, "fields": {"created": "2016-02-21T03:07:46.190Z", "modified": "2016-02-21T03:07:46.190Z", "issue": 68, "name": "CDN", "relevance": 0.488}}, {"model": "issues.tag", "pk": 514, "fields": {"created": "2016-02-21T03:07:46.191Z", "modified": "2016-02-21T03:07:46.191Z", "issue": 68, "name": "static files", "relevance": 0.366}}, {"model": "issues.tag", "pk": 515, "fields": {"created": "2016-02-21T03:07:46.933Z", "modified": "2016-02-21T03:07:46.933Z", "issue": 69, "name": "Django management command", "relevance": 0.962}}, {"model": "issues.tag", "pk": 516, "fields": {"created": "2016-02-21T03:07:46.936Z", "modified": "2016-02-21T03:07:46.936Z", "issue": 69, "name": "PyPI", "relevance": 0.769}}, {"model": "issues.tag", "pk": 517, "fields": {"created": "2016-02-21T03:07:46.937Z", "modified": "2016-02-21T03:07:46.937Z", "issue": 69, "name": "packages", "relevance": 0.769}}, {"model": "issues.tag", "pk": 518, "fields": {"created": "2016-02-21T03:07:46.938Z", "modified": "2016-02-21T03:07:46.939Z", "issue": 69, "name": "patch fixes", "relevance": 0.577}}, {"model": "issues.tag", "pk": 519, "fields": {"created": "2016-02-21T03:07:46.940Z", "modified": "2016-02-21T03:07:46.940Z", "issue": 69, "name": "reference", "relevance": 0.385}}, {"model": "issues.tag", "pk": 520, "fields": {"created": "2016-02-21T03:07:46.941Z", "modified": "2016-02-21T03:07:46.941Z", "issue": 69, "name": "whitenoise.management", "relevance": 0.385}}, {"model": "issues.tag", "pk": 521, "fields": {"created": "2016-02-21T03:07:46.943Z", "modified": "2016-02-21T03:07:46.943Z", "issue": 69, "name": "whitenoise", "relevance": 0.385}}, {"model": "issues.tag", "pk": 522, "fields": {"created": "2016-02-21T03:07:46.944Z", "modified": "2016-02-21T03:07:46.945Z", "issue": 69, "name": "setup.py", "relevance": 0.385}}, {"model": "issues.tag", "pk": 523, "fields": {"created": "2016-02-21T03:07:46.946Z", "modified": "2016-02-21T03:07:46.946Z", "issue": 69, "name": "whitenoise.management.commands", "relevance": 0.385}}, {"model": "issues.tag", "pk": 524, "fields": {"created": "2016-02-21T03:07:46.947Z", "modified": "2016-02-21T03:07:46.947Z", "issue": 69, "name": "site-packages", "relevance": 0.385}}, {"model": "issues.tag", "pk": 525, "fields": {"created": "2016-02-21T03:07:47.698Z", "modified": "2016-02-21T03:07:47.698Z", "issue": 70, "name": "files", "relevance": 0.968}}, {"model": "issues.tag", "pk": 526, "fields": {"created": "2016-02-21T03:07:47.700Z", "modified": "2016-02-21T03:07:47.701Z", "issue": 70, "name": "Python module", "relevance": 0.484}}, {"model": "issues.tag", "pk": 527, "fields": {"created": "2016-02-21T03:07:47.701Z", "modified": "2016-02-21T03:07:47.702Z", "issue": 70, "name": "current time", "relevance": 0.484}}, {"model": "issues.tag", "pk": 528, "fields": {"created": "2016-02-21T03:07:47.703Z", "modified": "2016-02-21T03:07:47.703Z", "issue": 70, "name": "new release", "relevance": 0.484}}, {"model": "issues.tag", "pk": 529, "fields": {"created": "2016-02-21T03:07:47.704Z", "modified": "2016-02-21T03:07:47.704Z", "issue": 70, "name": "file everytime", "relevance": 0.484}}, {"model": "issues.tag", "pk": 530, "fields": {"created": "2016-02-21T03:07:47.705Z", "modified": "2016-02-21T03:07:47.705Z", "issue": 70, "name": "file changes", "relevance": 0.484}}, {"model": "issues.tag", "pk": 531, "fields": {"created": "2016-02-21T03:07:47.707Z", "modified": "2016-02-21T03:07:47.707Z", "issue": 70, "name": "compressed stream", "relevance": 0.484}}, {"model": "issues.tag", "pk": 532, "fields": {"created": "2016-02-21T03:07:47.708Z", "modified": "2016-02-21T03:07:47.709Z", "issue": 70, "name": "files Gzip", "relevance": 0.484}}, {"model": "issues.tag", "pk": 533, "fields": {"created": "2016-02-21T03:07:47.710Z", "modified": "2016-02-21T03:07:47.710Z", "issue": 70, "name": "modification time", "relevance": 0.484}}, {"model": "issues.tag", "pk": 534, "fields": {"created": "2016-02-21T03:07:47.712Z", "modified": "2016-02-21T03:07:47.712Z", "issue": 70, "name": "everything", "relevance": 0.323}}, {"model": "issues.tag", "pk": 535, "fields": {"created": "2016-02-21T03:07:48.410Z", "modified": "2016-02-21T03:07:48.411Z", "issue": 71, "name": "new release", "relevance": 0.968}}, {"model": "issues.tag", "pk": 536, "fields": {"created": "2016-02-21T03:07:49.156Z", "modified": "2016-02-21T03:07:49.157Z", "issue": 72, "name": "index dict_keys", "relevance": 0.938}}, {"model": "issues.tag", "pk": 537, "fields": {"created": "2016-02-21T03:07:49.159Z", "modified": "2016-02-21T03:07:49.159Z", "issue": 72, "name": "Py3 Bug", "relevance": 0.938}}, {"model": "issues.tag", "pk": 538, "fields": {"created": "2016-02-21T03:07:49.160Z", "modified": "2016-02-21T03:07:49.160Z", "issue": 72, "name": "Whitenoise blows", "relevance": 0.938}}, {"model": "issues.tag", "pk": 539, "fields": {"created": "2016-02-21T03:07:49.161Z", "modified": "2016-02-21T03:07:49.162Z", "issue": 72, "name": "parameter", "relevance": 0.625}}, {"model": "issues.tag", "pk": 540, "fields": {"created": "2016-02-21T03:07:49.163Z", "modified": "2016-02-21T03:07:49.163Z", "issue": 72, "name": "Python3", "relevance": 0.625}}, {"model": "auth.permission", "pk": 1, "fields": {"name": "Can add log entry", "content_type": 1, "codename": "add_logentry"}}, {"model": "auth.permission", "pk": 2, "fields": {"name": "Can change log entry", "content_type": 1, "codename": "change_logentry"}}, {"model": "auth.permission", "pk": 3, "fields": {"name": "Can delete log entry", "content_type": 1, "codename": "delete_logentry"}}, {"model": "auth.permission", "pk": 4, "fields": {"name": "Can add permission", "content_type": 2, "codename": "add_permission"}}, {"model": "auth.permission", "pk": 5, "fields": {"name": "Can change permission", "content_type": 2, "codename": "change_permission"}}, {"model": "auth.permission", "pk": 6, "fields": {"name": "Can delete permission", "content_type": 2, "codename": "delete_permission"}}, {"model": "auth.permission", "pk": 7, "fields": {"name": "Can add group", "content_type": 3, "codename": "add_group"}}, {"model": "auth.permission", "pk": 8, "fields": {"name": "Can change group", "content_type": 3, "codename": "change_group"}}, {"model": "auth.permission", "pk": 9, "fields": {"name": "Can delete group", "content_type": 3, "codename": "delete_group"}}, {"model": "auth.permission", "pk": 10, "fields": {"name": "Can add content type", "content_type": 4, "codename": "add_contenttype"}}, {"model": "auth.permission", "pk": 11, "fields": {"name": "Can change content type", "content_type": 4, "codename": "change_contenttype"}}, {"model": "auth.permission", "pk": 12, "fields": {"name": "Can delete content type", "content_type": 4, "codename": "delete_contenttype"}}, {"model": "auth.permission", "pk": 13, "fields": {"name": "Can add session", "content_type": 5, "codename": "add_session"}}, {"model": "auth.permission", "pk": 14, "fields": {"name": "Can change session", "content_type": 5, "codename": "change_session"}}, {"model": "auth.permission", "pk": 15, "fields": {"name": "Can delete session", "content_type": 5, "codename": "delete_session"}}, {"model": "auth.permission", "pk": 16, "fields": {"name": "Can add site", "content_type": 6, "codename": "add_site"}}, {"model": "auth.permission", "pk": 17, "fields": {"name": "Can change site", "content_type": 6, "codename": "change_site"}}, {"model": "auth.permission", "pk": 18, "fields": {"name": "Can delete site", "content_type": 6, "codename": "delete_site"}}, {"model": "auth.permission", "pk": 19, "fields": {"name": "Can add email address", "content_type": 7, "codename": "add_emailaddress"}}, {"model": "auth.permission", "pk": 20, "fields": {"name": "Can change email address", "content_type": 7, "codename": "change_emailaddress"}}, {"model": "auth.permission", "pk": 21, "fields": {"name": "Can delete email address", "content_type": 7, "codename": "delete_emailaddress"}}, {"model": "auth.permission", "pk": 22, "fields": {"name": "Can add email confirmation", "content_type": 8, "codename": "add_emailconfirmation"}}, {"model": "auth.permission", "pk": 23, "fields": {"name": "Can change email confirmation", "content_type": 8, "codename": "change_emailconfirmation"}}, {"model": "auth.permission", "pk": 24, "fields": {"name": "Can delete email confirmation", "content_type": 8, "codename": "delete_emailconfirmation"}}, {"model": "auth.permission", "pk": 25, "fields": {"name": "Can add social application", "content_type": 9, "codename": "add_socialapp"}}, {"model": "auth.permission", "pk": 26, "fields": {"name": "Can change social application", "content_type": 9, "codename": "change_socialapp"}}, {"model": "auth.permission", "pk": 27, "fields": {"name": "Can delete social application", "content_type": 9, "codename": "delete_socialapp"}}, {"model": "auth.permission", "pk": 28, "fields": {"name": "Can add social account", "content_type": 10, "codename": "add_socialaccount"}}, {"model": "auth.permission", "pk": 29, "fields": {"name": "Can change social account", "content_type": 10, "codename": "change_socialaccount"}}, {"model": "auth.permission", "pk": 30, "fields": {"name": "Can delete social account", "content_type": 10, "codename": "delete_socialaccount"}}, {"model": "auth.permission", "pk": 31, "fields": {"name": "Can add social application token", "content_type": 11, "codename": "add_socialtoken"}}, {"model": "auth.permission", "pk": 32, "fields": {"name": "Can change social application token", "content_type": 11, "codename": "change_socialtoken"}}, {"model": "auth.permission", "pk": 33, "fields": {"name": "Can delete social application token", "content_type": 11, "codename": "delete_socialtoken"}}, {"model": "auth.permission", "pk": 34, "fields": {"name": "Can add issue", "content_type": 12, "codename": "add_issue"}}, {"model": "auth.permission", "pk": 35, "fields": {"name": "Can change issue", "content_type": 12, "codename": "change_issue"}}, {"model": "auth.permission", "pk": 36, "fields": {"name": "Can delete issue", "content_type": 12, "codename": "delete_issue"}}, {"model": "auth.permission", "pk": 37, "fields": {"name": "Can add tag", "content_type": 13, "codename": "add_tag"}}, {"model": "auth.permission", "pk": 38, "fields": {"name": "Can change tag", "content_type": 13, "codename": "change_tag"}}, {"model": "auth.permission", "pk": 39, "fields": {"name": "Can delete tag", "content_type": 13, "codename": "delete_tag"}}, {"model": "auth.permission", "pk": 40, "fields": {"name": "Can add file", "content_type": 14, "codename": "add_file"}}, {"model": "auth.permission", "pk": 41, "fields": {"name": "Can change file", "content_type": 14, "codename": "change_file"}}, {"model": "auth.permission", "pk": 42, "fields": {"name": "Can delete file", "content_type": 14, "codename": "delete_file"}}, {"model": "auth.permission", "pk": 43, "fields": {"name": "Can add pull request", "content_type": 15, "codename": "add_pullrequest"}}, {"model": "auth.permission", "pk": 44, "fields": {"name": "Can change pull request", "content_type": 15, "codename": "change_pullrequest"}}, {"model": "auth.permission", "pk": 45, "fields": {"name": "Can delete pull request", "content_type": 15, "codename": "delete_pullrequest"}}, {"model": "auth.permission", "pk": 46, "fields": {"name": "Can add account", "content_type": 16, "codename": "add_account"}}, {"model": "auth.permission", "pk": 47, "fields": {"name": "Can change account", "content_type": 16, "codename": "change_account"}}, {"model": "auth.permission", "pk": 48, "fields": {"name": "Can delete account", "content_type": 16, "codename": "delete_account"}}, {"model": "accounts.account", "pk": 1, "fields": {"password": "pbkdf2_sha256$24000$Kby8UnGGB1G4$1ecseI7US9cptrtUBI6vN9gUkqxnzuXvOskxV7726Ys=", "last_login": "2016-02-21T03:08:24.775Z", "is_superuser": true, "username": "admin", "is_staff": true, "is_active": true, "groups": [], "user_permissions": []}}]